http://www.digitalpreservation.gov/formats/digformatspecs/Excel97-2007BinaryFileFormat(xls)Specification.pdf

MICROSOFT OFFICE EXCEL 97-2007 
BINARY FILE FORMAT SPECIFICATION [*.xls (97-2007) format] 

Microsoft Office Excel 97-2007 
Binary File Format (.xls) Specification 
NOTICE 

This specification is provided under the Microsoft Open Specification Promise.
For further details on the Microsoft Open Specification Promise, please refer
to: http://www.microsoft.com/interop/osp/default.mspx. You are free to copy,
display and perform this specification, to make derivative works of this
specification, and to distribute the specification, however distribution rights
are limited to unmodified copies of the original specification and any
redistributed copies of the specification must retain its attribution of
Microsoft’s rights in the copyright of the specification, this full notice, and
the URL to the webpage containing the most current version of the specification
as provided by Microsoft. 

Microsoft may have patents, patent applications, trademarks, copyrights, or
other intellectual property rights covering subject matter in these materials.
Except as expressly provided in the Microsoft Open Specification Promise and
this notice, the furnishing of these materials does not give you any license to
these patents, trademarks, copyrights, or other intellectual property. 

The information contained in this document represents the point-in-time view of
Microsoft Corporation on the issues discussed as of the date of publication.
Because Microsoft must respond to changing market conditions, it should not be
interpreted to be a commitment on the part of Microsoft, and Microsoft cannot
guarantee the accuracy of any information presented after the date of
authoring. 

Unless otherwise noted, the example companies, organizations, products, domain
names, e-mail addresses, logos, people, places and events depicted herein are
fictitious, and no association with any real company, organization, product,
domain name, email address, logo, person, place or event is intended or should
be inferred. 

©2007 Microsoft Corporation. All rights reserved. 


Microsoft, Windows, Windows NT, Windows Server, and Windows Vista are either
registered trademarks or trademarks of Microsoft Corporation in the United
States and/or other countries. 



Table of Contents 

Table of Contents ......................................................... 3 
Introduction .............................................................. 11 
File Format Versions....................................................... 11 
FRT Record Description .................................................... 13 
The Workbook Compound File ................................................ 16 
Simple Save (new for BIFF7 and later) ..................................... 17 
Double Stream File ........................................................ 17 
Unicode Strings in BIFF8 .................................................. 17 
Extended Strings in East Asian Versions.................................... 19 
Other Microsoft Excel File Formats ........................................ 19 
BIFF Record Information ................................................... 20 
Record Number ............................................................. 20 
Record Data Length ........................................................ 20 
Record Data ............................................................... 20 
Byte Swapping ............................................................. 20 
Indexing in BIFF Records .................................................. 21 
Undefined Cells in the Sheet............................................... 21 
Cell Records .............................................................. 21 
BIFF Record Order ......................................................... 22 
Record Descriptions ....................................................... 34 
1904: 1904 Date System (22h) .............................................. 34 
ADDIN: Workbook Is an Add-in Macro (87h) .................................. 34 
ADDMENU: Menu Addition (C2h) .............................................. 34 
ARRAY: Array-Entered Formula (221h) ....................................... 35 
AUTOFILTER: AutoFilter Data (9Eh) ......................................... 36 
DOPER Structures .......................................................... 37 
AUTOFILTER12: Auto-filter Data Introduced in Excel 2007 (87Eh) ............ 38 
AUTOFILTERINFO: Drop-Down Arrow Count (9Dh) ............................... 42 
AUTOWEBPUB: Auto web publish storage (8c0h) ............................... 42 
BACKUP: Save Backup Version of the File (40h) ............................. 43 
BLANK: Cell Value, Blank Cell (201h)....................................... 43 
BOF: Beginning of File (809h) ............................................. 43 
BOOKBOOL: Workbook Option Flag (DAh) ...................................... 44 
BOOKEXT: Extra Book Info (863h) ........................................... 45 
BOOLERR: Cell Value, Boolean or Error (205h) .............................. 47 
BOTTOMMARGIN: Bottom Margin Measurement (29h) ............................. 47 
BOUNDSHEET: Sheet Information (85h) ....................................... 48 
CALCCOUNT: Iteration Count (0Ch) .......................................... 48 
CALCMODE: Calculation Mode (0Dh) .......................................... 48 
CELLWATCH: Cell Watch (86Ch) .............................................. 49 
CF: Conditional Formatting Conditions (1B1h) .............................. 49 
CF12: Conditional Formatting Condition 12 (87Ah) .......................... 50 
CFEX: Conditional Formatting Extension (87Bh) ............................. 54 
CODENAME: VBE Object Name (42h) ........................................... 55
CODEPAGE: Default Code Page (42h) ......................................... 55 
COLINFO: Column Formatting Information (7Dh) .............................. 55 
COMPAT12: Compatibility Checker 12 (88Ch) ................................. 56 
COMPRESSPICTURES: Automatic Picture Compression Mode (89Bh) ............... 56 
CONDFMT: Conditional Formatting Range Information (1B0h)................... 57 
CONDFMT12: Conditional Formatting Range Information 12 (879h) ............. 57 
CONTINUE: Continues Long Records (3Ch) .................................... 58 
CONTINUEFRT: Continued FRT (812h) ......................................... 59 
CONTINUEFRT11: Continue FRT 11 (875h) ..................................... 59 
CONTINUEFRT12: Continued FRT 12 (87Fh) .................................... 60 
COORDLIST: Polygon Object Vertex Coordinates (A9h) ........................ 60 
COUNTRY: Default Country and WIN.INI Country (8Ch) ........................ 61 
CRASHRECERR: Crash Recovery Error (865h) .................................. 62 
CRN: Nonresident Operands (5Ah) ........................................... 63 
CRTCOOPT: Color options for Chart series in Mac Office 11 (8cbh) .......... 64 
DATALABEXT: Chart Data Label Extension (86Ah) ............................. 64 
DATALABEXTCONTENTS: Chart Data Label Extension Contents (86Bh) ............ 65 
DBCELL: Stream Offsets (D7h) .............................................. 66 
DBQUERYEXT: Database Query Extensions (803h) .............................. 66 
DCON: Data Consolidation Information (50h) ................................ 70 
DCONBIN: Data Consolidation Information (1B5h) ............................ 70 
DCONN: Data Connection (876h).............................................. 71 
DCONNAME: Data Consolidation Named References (52h) ....................... 82 
DCONREF: Data Consolidation References (51h) .............................. 82 
DEFAULTROWHEIGHT: Default Row Height (225h) ............................... 82 
DEFCOLWIDTH: Default Width for Columns (55h) .............................. 83 
DELMENU: Menu Deletion (C3h) .............................................. 83 
DELTA: Iteration Increment (10h) .......................................... 83 
DIMENSIONS: Cell Table Size (200h) ........................................ 84 
DOCROUTE: Routing Slip Information (B8h) .................................. 84 
DROPDOWNOBJIDS: Drop Down Object IDs Record (874h) ........................ 85 
DSF: Double Stream File (161h) ............................................ 86 
DV: Data Validation Criteria (1BEh) ....................................... 86 
DVAL: Data Validation Information (1B2h) .................................. 86 
DXF: Differential XF (88Dh) ............................................... 87 
EDG: Edition Globals (88h) ................................................ 92 
EOF: End of File (0Ah) .................................................... 93 
EXCEL9FILE: Excel 9 File (1C0h) ........................................... 93 
EXTERNCOUNT: Number of External References (16h) .......................... 93 
EXTERNNAME: Externally Referenced Name (223h) ............................. 93 
External Name ............................................................. 93 
DDE Link .................................................................. 94 
OLE Link .................................................................. 94 
EXTERNSHEET: External Reference (17h) ..................................... 95 
File name Encoding ........................................................ 95 
EXTSST: Extended Shared String Table (FFh) ................................ 97
EXTSTRING: FRT String (804h) .............................................. 97 
FEAT: Shared Feature Record (868h) ........................................ 97 
FEAT11: Shared Feature 11 Record (872h) ................................... 99 
FEAT12: Shared Feature 12 Record (878h) ................................... 112 
FEATHEADR: Shared Feature Header (867h) ................................... 112 
FEATHEADR11: Shared Feature Header 11 (871h) .............................. 114 
FEATINFO: Shared Feature Info Record (86dh) ............................... 116 
FEATINFO11: Shared Feature Info 11 Record (873h) .......................... 117 
FILEPASS: File Is Password-Protected (2Fh) ................................ 119 
FILESHARING: File-Sharing Information (5Bh) ............................... 119 
Changes for BIFF7 ......................................................... 119 
FILESHARING2: File-Sharing Information for Shared Lists (1A5h) ............ 119 
FILTERMODE: Sheet Contains Filtered List (9Bh) ............................ 120 
FMQRY: Filemaker queries (8c6h) ........................................... 120 
FMSQRY: Filemaker queries (8c7h) .......................................... 120 
FNGRP12: Function Group (898h) ............................................ 120 
FNGROUPCOUNT: Built-in Function Group Count (9Ch) ......................... 121 
FNGROUPNAME: Function Group Name (9Ah) .................................... 121 
FONT: Font Description (231h) ............................................. 121 
FOOTER: Print Footer on Each Page (15h) ................................... 122 
FORCEFULLCALCULATION: Force Full Calculation Mode (8A3h) .................. 122 
FORMAT: Number Format (41Eh) .............................................. 122 
FORMULA: Cell Formula (6h) ................................................ 123 
GCW: Global Column-Width Flags (ABh) ...................................... 124 
GRIDSET: State Change of Gridlines Option (82h) ........................... 125 
GUIDTYPELIB: VB Project TypeLib GUID (897h) ............................... 125 
GUTS: Size of Row and Column Gutters (80h) ................................ 125 
HCENTER: Center Between Horizontal Margins (83h) .......................... 125 
HEADER: Print Header on Each Page (14h) ................................... 126 
HEADERFOOTER: Header Footer (89Ch) ........................................ 126 
HFPicture: Header / Footer Picture (866h) ................................. 127 
HIDEOBJ: Object Display Options (8Dh) ..................................... 127 
HLINK: Hyperlink (1B8h) ................................................... 128 
HLINKTOOLTIP: Hyperlink Tooltip (800h) .................................... 128 
HORIZONTALPAGEBREAKS: Explicit Row Page Breaks (1Bh) ...................... 128 
IMDATA: Image Data (7Fh) .................................................. 129 
INDEX: Index Record (20Bh) ................................................ 129 
INTERFACEEND: End of User Interface Records (E2h) ......................... 130 
INTERFACEHDR: Beginning of User Interface Records (E1h) ................... 130 
ITERATION: Iteration Mode (11h)............................................ 130 
LABEL: Cell Value, String Constant (18h) .................................. 130 
LABELSST: Cell Value, String Constant/SST (FDh) ........................... 131 
LEFTMARGIN: Left Margin Measurement (26h) ................................. 131 
LHNGRAPH: Named Graph Information (95h) ................................... 131 
LHRECORD: .WK? File Conversion Information (94h) .......................... 131 
LIST12: Extra Table Data Introduced in Excel 2007 (877h) .................. 132
LISTCF: List Cell Formatting (8c5h) ....................................... 134 
LISTCONDFMT: List Conditional Formatting (8c4h) ........................... 134 
LISTDV: List Data Validation (8c3h) ....................................... 135 
LISTFIELD: List Field (8c2h) .............................................. 135 
LISTOBJ: List Object (8c1h)................................................ 136 
LNEXT: Extension information for borders in Mac Office 11 (8c9h)........... 136 
LPR: Sheet Was Printed Using LINE.PRINT() (98h) ........................... 137 
MDTB: Block of Metadata Records (88Ah) .................................... 137 
MDTINFO: Information about a Metadata Type (884h) ......................... 138 
MDXKPI: Key Performance Indicator Mdx Metadata (889h) ..................... 139 
MDXPROP: Member Property Mdx Metadata (888h) .............................. 140 
MDXSET: Set Mdx Metadata (887h) ........................................... 140 
MDXSTR: MDX metadata string (885h) ........................................ 141 
MDXTUPLE: Tuple Mdx Metadata (886h) ....................................... 141 
MERGECELLS: Merged Cells (E5h) ............................................ 142 
MKREXT: Extension information for markers in Mac Office 11 (8cah).......... 142 
MMS: ADDMENU/DELMENU Record Group Count (C1h) ............................. 142 
MSODRAWING: Microsoft Office Drawing (ECh) ................................ 143 
MSODRAWINGGROUP: Microsoft Office Drawing Group (EBh) ..................... 143 
MSODRAWINGSELECTION: Microsoft Office Drawing Selection (EDh) ............. 143 
MTRSETTINGS: Multi-threaded Calculation Settings (89Ah) ................... 143 
MULBLANK: Multiple Blank Cells (BEh) ...................................... 143 
MULRK: Multiple RK Cells (BDh) ............................................ 144 
NAME: Defined Name (218h) ................................................. 144 
Built-in Names ............................................................ 146 
NAMECMT: Name Comment (894h) .............................................. 146 
NAMEFNGRP12: Extra Function Group (899h) .................................. 147 
NAMEPUBLISH: Publish to Excel Server Data for Name (893h) ................. 147 
NOTE: Comment Associated with a Cell (1Ch)................................. 148 
NUMBER: Cell Value, Floating-Point Number (203h) .......................... 149 
OBJ: Describes a Graphic Object (5Dh) ..................................... 149 
Record Data-BIFF8 ......................................................... 149 
Record Data — BIFF5 and BIFF7 ............................................. 154 
OBJPROTECT: Objects Are Protected (63h).................................... 178 
OBPROJ: Visual Basic Project (D3h) ........................................ 178 
OLEDBCONN: OLE Database Connection (80Ah) ................................. 178 
OLESIZE: Size of OLE Object (DEh) ......................................... 179 
PALETTE: Color Palette Definition (92h) ................................... 179 
PANE: Number of Panes and Their Position (41h) ............................ 180 
PARAMQRY: Query Parameters (DCh) .......................................... 180 
PASSWORD: Protection Password (13h) ....................................... 181 
PLS: Environment-Specific Print Record (4Dh) .............................. 181 
PLV: Page Layout View in Mac Excel 11 (8c8h) .............................. 182 
PLV: Page Layout View Settings in Excel 2007 (88Bh) ....................... 182 
PRECISION: Precision (0Eh) ................................................ 183 
PRINTGRIDLINES: Print Gridlines Flag (2Bh) ................................ 183
PRINTHEADERS: Print Row/Column Labels (2Ah) ............................... 183 
PROTECT: Protection Flag (12h) ............................................ 183 
PROT4REV: Shared Workbook Protection Flag (1AFh) .......................... 183 
PROT4REVPASS: Shared Workbook Protection Password (1BCh) .................. 184 
PUB: Publisher (89h) ...................................................... 184 
QSI: External Data Range (1ADh) ........................................... 184 
QSIF: Query Table Field Formatting (807h) ................................. 185 
QSIR: Query Table Formatting (806h) ....................................... 186 
QSISXTAG: Pivot Table and Query Table Extensions (802h) ................... 188 
REALTIMEDATA: Real-Time Data (RTD) (813h) ................................. 190 
RECALCID: Recalc Information (1C1h) ....................................... 191 
RECIPNAME: Recipient Name (B9h) ........................................... 191 
REFMODE: Reference Mode (0Fh) ............................................. 192 
REFRESHALL: Refresh Flag (1B7h) ........................................... 192 
RIGHTMARGIN: Right Margin Measurement (27h) ............................... 192 
RK: Cell Value, RK Number (7Eh) ........................................... 192 
ROW: Describes a Row (208h) ............................................... 195 
RSTRING: Cell with Character Formatting (D6h) ............................. 196 
SAVERECALC: Recalculate Before Save (5Fh) ................................. 196 
SCENARIO: Scenario Data (AFh) ............................................. 196 
SCENMAN: Scenario Output Data (AEh) ....................................... 197 
SCENPROTECT: Scenario Protection (DDh)..................................... 198 
SCL: Window Zoom Magnification (A0h)....................................... 198 
SELECTION: Current Selection (1Dh) ........................................ 198 
SETUP: Page Setup (A1h) ................................................... 199 
SHEETEXT: Extra Sheet Info (862h) ......................................... 200 
SHRFMLA: Shared Formula (BCh) ............................................. 201 
SORT: Sorting Options (90h) ............................................... 202 
SORTDATA12: Sort Data 12 (895h) ........................................... 202 
SOUND: Sound Note (96h) ................................................... 204 
SST: Shared String Table (FCh) ............................................ 205 
STANDARDWIDTH: Standard Column Width (99h)................................. 205 
STRING: String Value of a Formula (207h) .................................. 205 
STYLE: Style Information (293h) ........................................... 205 
STYLEEXT: Named Cell Style Extension (892h) ............................... 206 
SUB: Subscriber (91h) ..................................................... 208 
SUPBOOK: Supporting Workbook (1AEh) ....................................... 209 
File name Encoding ........................................................ 209 
SXADDL: Pivot Table Additional Info (864h) ................................ 211 
SXADDL12: Additional Workbook Connections Information (881h) .............. 241 
SXDB: PivotTable Cache Data (C6h) ......................................... 241 
SXDBEX: PivotTable Cache Data (122h) ...................................... 241 
SXDI: Data Item (C5h) ..................................................... 242 
SXDXF: PivotTable Formatting (F4h) ........................................ 242 
SXEX: PivotTable View Extended Information (F1h) .......................... 243 
SXEXT: External Source Information (DCh) .................................. 243
SXFDBTYPE: SQL Datatype Identifier (1BBh) ................................. 245 
SXFILT: PivotTable Rule Filter (F2h) ...................................... 245 
SXFMLA: PivotTable Parsed Expression (F9h) ................................ 246 
SXFORMAT: PivotTable Format Record (FBh) .................................. 246 
SXFORMULA: PivotTable Formula Record (103h) ............................... 246 
SXIDSTM: Stream ID (D5h) .................................................. 247 
SXITM: PivotTable Item Indexes (F5h) ...................................... 247 
SXIVD: Row/Column Field IDs (B4h) ......................................... 247 
SXLI: Line Item Array (B5h) ............................................... 247 
SXNAME: PivotTable Name (F6h).............................................. 248 
SXPAIR: PivotTable Name Pair (F8h) ........................................ 249 
SXPI: Page Item (B6h) ..................................................... 249 
SXPIEX: OLAP Page Item Extensions (80Eh) .................................. 249 
SXRULE: PivotTable Rule Data (F0h) ........................................ 250 
SXSELECT: PivotTable Selection Information (F7h) .......................... 251 
SXSTRING: String (CDh) .................................................... 252 
SXTBL: Multiple Consolidation Source Info (D0h) ........................... 252 
SXTBPG: Page Item Indexes (D2h) ........................................... 252 
SXTBRGIITM: Page Item Name Count (D1h) .................................... 253 
SXTH: Pivot Table OLAP Hierarchy (80Dh) ................................... 253 
SXVD: View Fields (B1h) ................................................... 254 
SXVDEX: Extended PivotTable View Fields (100h) ............................ 255 
SXVDTEX: View Dimension OLAP Extensions (80Fh) ............................ 257 
SXVI: View Item (B2h) ..................................................... 257 
SXVIEW: View Definition (B0h) ............................................. 258 
SXVIEWEX: Pivot Table OLAP Extensions (80Ch) .............................. 260 
SXVIEWEX9: Pivot Table Extensions (810h) .................................. 260 
SXVS: View Source (E3h) ................................................... 261 
TABID: Sheet Tab Index Array (13Dh) ....................................... 261 
TABIDCONF: Sheet Tab ID of Conflict History (EAh) ......................... 261 
TABLE: Data Table (236h) .................................................. 261 
TABLESTYLE: Table Style (88Fh) ............................................ 262 
TABLESTYLEELEMENT: Table Style Element (890h) ............................. 263 
TABLESTYLES: Table Styles (88Eh) .......................................... 264 
TEMPLATE: Workbook Is a Template (60h) .................................... 264 
THEME: Theme (896h) ....................................................... 264 
TOPMARGIN: Top Margin Measurement (28h) ................................... 265 
TXO: Text Object (1B6h) ................................................... 265 
TXTQUERY: Text Query Information (805h) ................................... 266 
UDDESC: Description String for Chart Autoformat (DFh) ..................... 268 
UNCALCED: Recalculation Status (5Eh) ...................................... 268 
USERBVIEW: Workbook Custom View Settings (1A9h) ........................... 268 
USERSVIEWBEGIN: Custom View Settings (1AAh) ............................... 269 
USERSVIEWEND: End of Custom View Records (1ABh) ........................... 271 
USESELFS: Natural Language Formulas Flag (160h) ........................... 271 
VCENTER: Center Between Vertical Margins (84h) ............................ 272
VERTICALPAGEBREAKS: Explicit Column Page Breaks (1Ah) ..................... 272 
WEBPUB: Web Publish Item (801h) ........................................... 272 
WINDOW1: Window Information (3Dh) ......................................... 273 
WINDOW2: Sheet Window Information (23Eh) .................................. 274 
WINDOWPROTECT: Windows Are Protected (19h) ................................ 276 
WOPT: Web Options (80Bh)................................................... 276 
WRITEACCESS: Write Access User Name (5Ch) ................................. 277 
WRITEPROT: Workbook Is Write-Protected (86h) .............................. 278 
WSBOOL: Additional Workspace Information (81h) ............................ 278 
XCT: CRN Record Count (59h) ............................................... 279 
XF: Extended Format (E0h).................................................. 279 
Cell XF Record — BIFF8 .................................................... 280 
Style XF Record — BIFF8 ................................................... 283 
Cell XF Record — BIFF7 and earlier ........................................ 284 
Style XF Record — BIFF7 and earlier ....................................... 286 
DXF records ............................................................... 287 
XFCRC: XF Extensions Checksum (87Ch) ...................................... 288 
XFEXT: XF Extension (87Dh) ................................................ 289 
XL5MODIFY: Flag for DSF (162h)............................................. 292 
Finding Cell Records in BIFF Files ........................................ 292 
Microsoft Excel Formulas................................................... 295 
Parsed Expressions and Tokens ............................................. 295 
Microsoft Excel ptgs ...................................................... 296 
Extended ptgs in BIFF8 .................................................... 299 
Expression Evaluation ..................................................... 300 
Scanning a Parsed Expression .............................................. 300 
Unary Operator Tokens...................................................... 300 
Binary Operator Tokens .................................................... 301 
Operand Tokens: Constant .................................................. 302 
Operand Tokens ............................................................ 303 
Operand Tokens: Base ...................................................... 304 
Control Tokens............................................................. 315 
Function Operators......................................................... 320 
Revision History Stream ................................................... 321 
EOF: End of File (10h) .................................................... 322 
RRD: Revision Record on Disk Structure .................................... 322 
RRDAUTOFMT: Auto-formatting revision (14Bh) ............................... 323 
RRDCHGCELL: Change Cell revision (13Bh) ................................... 324 
RRDCONF: Conflict record (152h)............................................ 326 
RRDDEFNAME: Defined name revision (153h) .................................. 326 
RRDFORMAT: Formatting revision (14Ah) ..................................... 328 
RRDHEAD: Revision Header (138h) ........................................... 329 
RRDINFO: Revision History Information (196h) .............................. 330 
RRDINSDEL: Row/Column Insert/Delete (137h) ................................ 330 
DUCR Structures ........................................................... 331 
DUCE Structures ........................................................... 332
RRDINSDELBEGIN: Beginning of a row/column insert/delete revision record block 
(150h) .................................................................... 332 
RRDINSDELEND: End of a row/column insert/delete revision record block (151h)
........................................................................... 332 
RRDINSERTSH: Sheet insert revision (14Dh) ................................. 333 
RRDMOVE: Cell(s) move revision (140h) ..................................... 333 
RRDMOVEBEGIN: Beginning of a cell(s) move revision record block (14Eh) .... 333 
RRDMOVEEND: End of a cell(s) move revision record block (14Fh) ............ 333 
RRDNOTE: Comment revision (01Ch)........................................... 334 
RRDRENSHT: Sheet Rename Revision (13Eh) ................................... 335 
RRDRSTETXP: Formatting run definition (154h) .............................. 335 
STXP Structures............................................................ 335 
RRDTQSIF: Query Table field change revision (808h) ........................ 336 
RRDUSERVIEW: Custom View revision (1ACh) .................................. 337 
RRTABID: Map of Sheet Id’s (13Dh).......................................... 337 
USRFILELOCK: File Lock (195h) ............................................. 337 
USREXCL: Exclusive File Lock (194h) ....................................... 337 
User Names Stream.......................................................... 338 
CUSR: Count of users (191h) ............................................... 338 
USRCHK: Version info (198h) ............................................... 338 
CBUSR: User info byte offsets (192h) ...................................... 338 
BCUsrs: Brief-case users (197h) ........................................... 339 
USRINFO: User info (193h) ................................................. 339 
SHORTDTR Structures ....................................................... 339 
Chart Records.............................................................. 340 
CHARTFRTINFO: Chart Future Record Type Info (850h) ........................ 340 
FRTWRAPPER: Chart Future Record Type Wrapper (851h) ....................... 340 
STARTBLOCK: Chart Future Record Type Start Block (852h) ................... 341 
ENDBLOCK: Chart Future Record Type End Block (853h) ....................... 343 
STARTOBJECT: Chart Future Record Type Start Object (854h) ................. 343 
ENDOBJECT: Chart Future Record Type End Object (855h) ..................... 343 
CATLAB: Category Labels (856h) ............................................ 344 
YMULT: Y Multiplier (857h) ................................................ 344 
SXVIEWLINK: Chart PivotTable Name (858h) .................................. 345 
PIVOTCHARTBITS: PivotChart Bits (859h) .................................... 345 
FRTFONTLIST: Chart Font List (85Ah) ....................................... 346 
PIVOTCHARTLINK: Pivot Chart Link (861h) ................................... 347 
Information Rights Management (IRM) ....................................... 347 
DataSpaces ................................................................ 347 
DRMContent ................................................................ 347 
DRMViewerContent .......................................................... 348 



Introduction 

The Binary Interchange File Format (BIFF) is the file format Microsoft Office
Excel workbooks are saved to (aka *.xls). Microsoft Excel versions 5.0 and
later use compound files (explained later in this document); this is the OLE
implementation of the Structured Storage Model. For more information on this
standard, see 

http://download.microsoft.com/download/0/B/E/0BE8BDD7-E5E8-422A-ABFD-
4342ED7AD886/WindowsCompoundBinaryFileFormatSpecification.pdf. 

File Format Versions 

This document covers the implementation of BIFF versions 5, 7, and 8 for
versions of Microsoft Excel released since version 5.0 and as noted in the
following table: 

BIFF version Microsoft Office Excel version 
BIFF5 Microsoft Excel version 5.0 (XL5) 
BIFF7 Microsoft Excel 95 (XL7) (also called Microsoft Excel version 7) 
BIFF8 Microsoft Excel 97 (XL8), Microsoft Excel 2000 (XL9),
      Microsoft Excel 2002 (XL10), Microsoft Office Excel 2003 (XL11),
      Microsoft Office Excel 2007 (XL12) 

You can identify the BIFF version used in an XLS file from the Beginning Of
File (BOF) record present in all BIFF version 5, 7, and 8 files. In BIFF4 and
earlier versions, various records (other than the BOF record) have version
information specified in the high-order byte of their record numbers. This was
a redundant methodology, so for versions of BIFF after BIFF4, Excel obtains the
BIFF version by reading the BOF record.

The record descriptions in this document apply to BIFF versions 5, 7, and 8. If
records have differences between the various BIFF versions, they are noted in
the record descriptions within this document.  The following tables describe
the new and changed records in BIFF8 as compared to BIFF7. For more information
on these records, see the record description listed later in this document. 

Note: unless otherwise noted, the use of the word Excel without a reference to
a specific version or release implies the generic function or ability of Excel
for releases 5.0 through 2007. Also, a form of shorthand notation is used
throughout this document to indicate release levels of Excel. For example, XL9
= Microsoft Excel 2000, XL10 = Microsoft Excel 2002, XL11 = Microsoft Office
Excel 2003, XL12 = Microsoft Office Excel 2007 and so on. 


New Records in BIFF8 for Microsoft Excel 97 

Number 

Record 

1B1h 

CF 

1BAh 

CODENAME 

1B0h 

CONDFMT 

1B5h 

DCONBIN 

161h 

DSF 

1BEh 

DV 

1B2h 

DVAL 

1C0h 

EXCEL9FILE 

FFh 

EXTSST 




Number 

Record 

1B8h 

HLINK 

FDh 

LABELSST 

E5h 

MERGECELLS 

ECh 

MSODRAWING 

EBh 

MSODRAWINGGROUP 

EDh 

MSODRAWINGSELECTION 

DCh 

PARAMQRY 

1Afh 

PROT4REV 

1BCh 

PROT4REVPASS 

1ADh 

QSI 

1C1h 

RECALCID 

1B7h 

REFRESHALL 

FCh 

SST 

1AEh 

SUPBOOK 

C6h 

SXDB 

122h 

SXDBEX 

F1h 

SXEX 

1BBh 

SXFDBTYPE 

F2h 

SXFILT 

F9h 

SXFMLA 

FBh 

SXFORMAT 

103h 

SXFORMULA 

F6h 

SXNAME 

F8h 

SXPAIR 

F0h 

SXRULE 

F7h 

SXSELECT 

100h 

SXVDEX 

1B6h 

TXO 

1A9h 

USERBVIEW 

1AAh 

USERSVIEWBEGIN 

1ABh 

USERSVIEWEND 

160h 

USESELFS 

162h 

XL5MODIFY 



 
Changed Records in BIFF8 for Microsoft Excel 97 

Number 

Record 

09h 

BOF 

85h 

BOUNDSHEET 

200h 

DIMENSIONS 

0Bh 

INDEX 

1Ch 

NOTE 

5Dh 

OBJ 

DCh 

SXEXT 

1Ah 

VERTICALPAGEBREAKS 

23Eh 

WINDOW2 

5Ch 

WRITEACCESS 

59h 

XCT 

E0h 

XF 



 


The User Names and Revision Log streams support the shared workbooks features
that were added in Excel 95. The BIFF record data in shared list records
(records that begin with RR), and the binary format of the User Names and
Revision Log streams are documented. 

The DocumentSummaryInformation and SummaryInformation streams support the
document properties available in Excel 95 and 97, which are standardized across
Microsoft Office applications. SummaryInformation and
DocumentSummaryInformation are widely understood and additional information can
be found at: 

. http://msdn2.microsoft.com/en-us/library/aa380376(VS.85).aspx 
. http://poi.apache.org/apidocs/org/apache/poi/hpsf/SummaryInformation.html 
. http://poi.apache.org/apidocs/org/apache/poi/hpsf/DocumentSummaryInformation.html 


 

FRT Record Description 

Excel 97 and later versions support Future Record Types (FRTs). These records
are used to roundtrip information that was not supported in that version.
Basically, data in an FRT is ignored by versions of Excel that do not recognize
the command name or data format. This allows data to be retained by Excel from
a file read to a file save, but ultimately the data is ignored and not acted
upon by the version of Excel that encounters the data. While Excel 97 may not
support a new command, record, or data format, it does save the unsupported
command, record, or data in a defined manner and write these elements back to
the record stream when the file is saved.  For example, this allows an Excel
2000 or later version of Excel to load back new records without loss of data. 

When Excel 97 or later encounters unrecognized FRT records, it writes them to
the record stream at the end of the current record block.  Note: FRT records
longer than the maximum allowable record length use the CONTINUEFRT record
instead of the CONTINUE record for additional information. 

The FRT header definition is: 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt that 
appears in the first two bytes of the record 

6 

grbitFrt 

2 

FRT flags; see following table 

8 

REF 

8 

REF structure; this is only present when the 
bitfFrtRef flag is set in grbitFrt; otherwise 
the actual record data starts in this position 



 
The grbitFrt field has the following option flags. 

Bits 

Mask 

Flag Name 

Contents 

0 

0001h 

bitfFrtRef 

1= a REF structure is present in the FRT header 

1 

0002h 

bitfFrtVolatile 

1= Excel should give an alert when saving if 
that version doesn't recognize the FRT 




15-2 

FFFCh 

(Reserved) 

Reserved; must be zero 



 

The REF structure has the following fields. 

Offset 

Field Name 

Size 

Contents 

8 

rwFirst 

2 

The first row of the range associated with the record 

10 

rwLast 

2 

The last row of the range associated with the record 

12 

colFirst 

2 

The first column of the range associated with the record 

14 

colLast 

2 

The last column of the range associated with the record 



 
New FRT Records in Excel 2000 

Number 

Record 

812h 

CONTINUEFRT 

803h 

DBQUERYEXT 

804h 

EXTSTRING 

800h 

HLINKTOOLTIP 

80Ah 

OLEDBCONN 

807h 

QSIF 

806h 

QSIR 

802h 

QSISXTAG 

80Eh 

SXPIEX 

80Dh 

SXTH 

80Fh 

SXVDTEX 

80Ch 

SXVIEWEX 

810h 

SXVIEWEX9 

80Bh 

WOPT 



 
New FRT Records in Excel 2002 

Number 

Record 

863h 

BOOKEXT 

865h 

CRASHRECERR 

86Ah 

DATALABEXT 

86Bh 

DATALABEXTCONTENTS 

86Ch 

CELLWATCH 

866h 

HFPicture 

813h 

REALTIMEDATA 

862h 

SHEETEXT 

864h 

SXADDL 

868h 

FEAT 

867h 

FEATHEADR 

86dh 

FEATINFO 



 
New FRT Records in Excel 2003 

Number 

Record 

875h 

CONTINUEFRT11 

874h 

DROPDOWNOBJIDS 

872h 

FEAT11 

871h 

FEATHEADR11 

873h 

FEATINFO11 



 


New FRT Records in Mac Excel 11 

Number 

Record 

8c9h 

LNEXT 

8cah 

MKREXT 

8cbh 

CRTCOOPT 

8c0h 

AUTOWEBPUB 

8c1h 

LISTOBJ 

8c2h 

LISTFIELD 

8c3h 

LISTDV 

8c4h 

LISTCONDFMT 

8c5h 

LISTCF 

8c6h 

FMQRY 

8c7h 

FMSQRY 

8c8h 

PLV 



 
New FRT Records in Excel 2007 

Number 

Record 

876h 

DCONN 

877h 

LIST12 

878h 

FEAT12 

879h 

CONDFMT12 

87Ah 

CF12 

87Bh 

CFEX 

87Ch 

XFCRC 

87Dh 

XFEXT 

87Eh 

EZFILTER12 

87Fh 

CONTINUEFRT12 

881h 

SXADDL12 

884h 

MDTINFO 

885h 

MDXSTR 

886h 

MDXTUPLE 

887h 

MDXSET 

888h 

MDXPROP 

889h 

MDXKPI 

88Ah 

MDTB 

88Bh 

PLV 

88Ch 

COMPAT12 

88Dh 

DXF 

88Eh 

TABLESTYLES 

88Fh 

TABLESTYLE 

890h 

TABLESTYLEELEMENT 

892h 

STYLEEXT 

893h 

NAMEPUBLISH 

894h 

NAMECMT 

895h 

SORTDATA12 

896h 

THEME 

897h 

GUIDTYPELIB 

898h 

FNGRP12 

899h 

NAMEFNGRP12 

89Ah 

MTRSETTINGS 




89Bh 

COMPRESSPICTURES 

89Ch 

HEADERFOOTER 

8A3h 

FORCEFULLCALCULATION 



 

The Workbook Compound File 

An OLE 2 compound file is essentially .a file system within a file.. The compound file 
contains a hierarchical system of storages and streams. A storage is analogous to a 
directory, and a stream is analogous to a file in a directory. Each Excel workbook is 
stored in a compound file, an example is shown in the following illustration. This file 
is a workbook that contains three sheets: a worksheet (Book stream – Sheet1 
substream records) with a PivotTable (SX DB storage), a Visual Basic module (VBA 
PROJECT storage), and a chart (Book stream - Chart1 substream records). 

 
If a workbook contains embedded objects, then the file will also contain storages 
written by the applications that created the objects. The PivotTable data cache 
storage and VBA PROJECT storage are not covered in this document. The CompObj 
stream contains OLE 2 component object data, and the Summary Info stream 
contains the standardized file summary information such as title, subject, author, 
and so on. 

The Book stream begins with a BOF record, and is followed by workbook global 
records up to the first EOF. The workbook global section contains one 
BOUNDSHEET record for each sheet in the workbook. You can use the dt field 


(document type), the lbPlyPos field (stream position of the BOF record for the 
sheet), and the cch/rgch fields (sheet name as a byte-counted string) to quickly 
read selected sheets in the workbook. 
Each sheet in the workbook is stored after the workbook global section, beginning 
with BOF and ending with EOF. If you read the file in a continuous stream (instead 
of using the BOUNDSHEET records), you can test the dt field of each BOF record to 
determine the sheet type. 

Simple Save (new for BIFF7 and later) 

Excel 95 and 97 use a simple save method from OLE 2, developed to increase 
performance. Excel uses the simple save method if a workbook has no: 
Visual Basic modules 
PivotTables 
embedded objects on worksheets 
When Excel saves a workbook using simple save, the streams in the file must be at 
least 4k bytes long. The OLE 2 code adds padding bytes to the streams to ensure 
they are at least 4k bytes long. If you use a low-level binary viewer (instead of the 
BiffView utility) to examine the resulting file, the padding bytes appear as .garbage. 
at the end of the streams. 
To find the actual end of the Book stream, increment a counter each time a BOF 
record is read and then decrement it every time an EOF record is read. When the 
counter reaches zero, the last EOF in the Book stream was read. 

Double Stream File 

For improved backward compatibility, Excel 97 has a save file type option: Microsoft 
Excel 97 & 5.0/95 Workbook. When a workbook is saved using this file type, 
Excel writes two complete book streams. The first stream in the file is the Microsoft 
Excel 5.0/95 format (BIFF5/BIFF7), and the second one is the Microsoft Excel 97 
format (BIFF8). The DSF record, which only appears in the BIFF8 stream, indicates 
the file is a double stream file. 
To distinguish the two streams, the BIFF5/BIFF7 stream is called Book, and the 
BIFF8 stream is called Workbook. 

Unicode Strings in BIFF8 

Excel 97 and later versions use unicode strings. In BIFF8, strings are stored in a 
compressed format. Each string contains the following fields: 

Offset 

Field Name 

Size 

Contents 

0 

cch 

2 

Count of characters in the string (Note: this is the number 
of characters, NOT the number of bytes) 

2 

grbit 

1 

Option flags (see grbit field definition table below) 

3 

rgb 

var 

Array of string characters and formatting runs 



 
Unicode strings usually require 2 bytes of storage per character. Because most 
strings in USA/English Excel have all of the high bytes of unicode characters set to 
00h, the strings can be saved using a compressed unicode format. The grbit field 
specifies the compression encoding as shown in the following table. 


grbit field definition: 

Bits 

Mask 

Flag Name 

Contents 

0 

01h 

fHighByte 

=0 if all the characters in the string have a high byte of 
00h and only the low bytes are saved in the file 
(compressed) 
=1 if at least one character in the string has a nonzero 
high byte and therefore all characters in the string are 
saved as double-byte characters (not compressed) 

1 

02h 

(Reserved) 

Reserved; must be 0 (zero) 

2 

04h 

fExtSt 

Extended string follows (East Asian versions, see text) 

3 

08h 

fRichSt 

Rich string follows 

7–4 

F0h 

(Reserved) 

Reserved; must be 0 (zero) 



 
An unformatted string with all high bytes set to 00h has grbit=00h. This implies 
there are no formatting runs (crun), which means the crun runs count field does 
not exist. 
An unformatted string that has at least one character with a nonzero high byte has 
grbit=01h. 
A formatted string with all high bytes set to 00h has grbit=08h if the string has 
several different character formats applied. 
The easiest way to understand the contents of BIFF8 strings is to look at an 
example. Suppose the string this is red ink is in a cell, and is formatted so the 
word red is red. The rgb field of the SST record appears as follows (text characters 
in bold): 
0F 00 08 02 00 74 68 69 73 20 69 73 20 72 65 64 20 69 6E 6B 
08 00 06 00 0B 00 05 00 
Swapping bytes and reorganizing: 
000F 08 0002 74 68 69 73 20 69 73 20 72 65 64 20 69 6E 6B 
0008 0006 000B 0005 
This rgb field of the SST record parses as follows: 

Data 

Description 

000F 

String is 15 characters long. 

08 

The grbit is set to 08h, which indicates a rich string. 

0002 

Count of formatting runs (runs follow the string and are not 
included in the character count; if there are no formatting 
runs, this field does not exist). 

74 68 69 73 20 69 73 20 
72 65 64 20 69 6E 6B 

The string characters; Note: in this case, each character is 
one byte. 

0008 0006 

Run number 1: index to FONT record 6 (ifnt, 0-based) for 
characters beginning with character number 8 (0-based). 




Data 

Description 

000B 0005 

Run number 2: index to FONT record 5 (ifnt, 0-based) for 
characters beginning with character number B (0-based). 



 

Extended Strings in East Asian Versions 

In East Asian versions (for example, Japanese Microsoft Excel), extended strings 
may appear in the SST record (fExtSt is set in the grbit field). These strings 
store additional fields with phonetic, language ID, or keyboard ID information. The 
first two fields of extended strings (cch and grbit) are identical to the nonextended 
strings described in the preceding text. 
Extended strings contain the following fields. 
Extended strings (not rich: fRichSt is not set) 

Offset 

Field Name 

Size 

Contents 

0 

cch 

2 

Count of characters in the string data (Note: this is the 
number of characters, NOT the number of bytes) 

2 

grbit 

1 

Option flags (see grbit field definition table above) 

3 

cchExtRst 

4 

Length of ExtRst data 

7 

rgb 

var 

String data 

var 

ExtRst 

var 

ExtRst data (not documented; length of this field is 
given by cchExtRst) 



 
Extended strings (rich: fRichSt is set) 

Offset 

Field Name 

Size 

Contents 

0 

cch 

2 

Count of characters in the string data (Note: this is the 
number of characters, NOT the number of bytes) 

2 

grbit 

1 

Option flags (see grbit field definition table above) 

3 

crun 

2 

Count of formatting runs 

5 

cchExtRst 

4 

Length of ExtRst data 

9 

rgb 

var 

String data 

var 

rgSTRUN 

var 

Array of formatting run structures; length is equal to 
(crun x 4) bytes 

var 

ExtRst 

var 

ExtRst data (not documented; length of this field is 
given by cchExtRst) 



 

Other Microsoft Excel File Formats 

 Excel creates several other files, some of which are documented in this material. 
The workspace file (.XLW extension in Microsoft Windows) and the toolbar file (.XLB 
extension in Microsoft Windows) are not covered in this document. The files are 
used to configure Excel‘s UI and do not contain user data. 
This document contains BIFF documentation for Excel version 5.0, Excel 95, Excel 
97, Excel 2000, Excel 2002, Office Excel 2003 and Office Excel 2007 only 


BIFF Record Information 

Although different BIFF record types contain different information, every record has 
the same basic format. All BIFF records consist of the following three sections: 

Record Number 

This 16-bit word identifies the record. The hexadecimal value of the record number 
is included in parentheses in the heading of the record description. For example, the 
EOF record‘s heading appears in this article as .EOF: End of File (0Ah).. 

Record Data Length 

This 16-bit word equals the length of the following record data, in bytes. The record 
length depends on the type of data in the record. For example, the EOF record is 
always the same length, while a FORMULA record varies in length depending on the 
length of the formula itself. 

Record Data 

This is the portion of the record containing the actual data that describes the 
formula, window, object, and so on. 
The format for all BIFF records is: 

Offset 

Length (bytes) 

Contents 

0 

2 

Record number 

2 

2 

Record data length 

4 

variable 

Record data 



 
In BIFF8, a BIFF record has a length limit of 8,228 bytes, including the record type 
and record length fields. Therefore, the record data field must be no longer than 
8,224 bytes. 
In BIFF7 and earlier, a BIFF record has a length limit of 2,084 bytes, including the 
record type and record length fields. Therefore, the record data field must be no 
longer than 2,080 bytes. 
In all BIFF versions, if the record exceeds the maximum length, then one or more 
CONTINUE records must follow the parent record. For example, embedded bitmap 
graphic objects often use a parent IMDATA record and several CONTINUE records. 
If a field (or a bit in a field) is marked .Reserved,. then your application should treat 
the field or bit as a .don‘t-care. when you read or write the BIFF file. If a field (or bit 
in a field) is marked .Reserved; must be zero,. then you must write zeros to the field 
or bit when you write a BIFF file. 

Byte Swapping 

Excel BIFF files are transportable across the MS-DOS/Windows and Apple Macintosh 
operating systems, among others. To support transportability, Excel writes BIFF files 
where the low-order byte of the word appears first in the file, followed by the high-
order byte. 
Whenever Excel for the Macintosh reads or writes a BIFF file, it calls a function that 
swaps the high- and low-order bytes of every 16-bit word in every record in the file. 
For 32-bit longs, the bytes in each 16-bit word are swapped first, and then the two 
16-bit words are swapped. Be sure to include a byte-swap function in any custom 
BIFF utility written for the Macintosh. 


Indexing in BIFF Records 

In BIFF files, rows and columns are always stored 0-based, rather than with an offset 
of 1 as they appear in a sheet. For example, cell A1 is stored as row 0 (rw=00h), 
column 0 (col=00h); cell B3 is row 2 (rw=02h), column 1 (col=01h), and so on. 
In most cases, you can use the variable-naming conventions in this document to 
determine if a variable is 0-based. Variable names beginning with the letter i are 
usually indexes, which are 0-based. For example, the variable ixfe occurs in every 
cell record; it is a 0-based index into the table of XF records. Variable names 
beginning with the letter c are usually counts, which are 1-based. For example, 
many records contain a cch, which is a count of characters in the following string. 

Undefined Cells in the Sheet 

To reduce file size, cells without values or formulas and are not referenced by 
formulas in any other cell are considered to be .undefined. cells. Such undefined 
cells do not appear in the BIFF file. 
For example, if a worksheet has a value in cell A3, and the formula =A3+A4 in cell 
B10, then the only defined cells on the worksheet are A3, A4, and B10. No other 
cells need to exist. 
Using this technique, entire rows can be undefined if they have no defined cells in 
them. In the preceding example, only rows 3, 4, and 10 are defined, so the file 
contains only three ROW records. 

Cell Records 

The term .cell records. refers to the BIFF record types with actual cell data. Cell 
records that appear in BIFF5/BIFF7/BIFF8 files are shown in the following table. 

Record 

Contents 

ARRAY 

An array-entered formula 

BLANK 

An empty cell 

BOOLERR 

A Boolean or error value 

FORMULA 

A cell formula, stored as parse tokens 

LABEL 

A string constant 

LABELSST 

String constant that uses BIFF8 shared string table (new to BIFF8) 

NUMBER 

An IEEE floating-point number 

MULBLANK 

Multiple empty cells (new to BIFF5) 

MULRK 

Multiple RK numbers (new to BIFF5) 

RK 

An RK number 

RSTRING 

Cell with character formatting 

SHRFMLA 

A shared formula (new to BIFF5) 

STRING 

A string that represents the result of a formula 



 

Excel stores cell records in blocks with no more than 32 rows. Each row that
contains cell records has a corresponding ROW record in the block, and each
block contains a DBCELL record at the end of the block. For more information
about row blocks and optimizing code when searching for cell records, see
Finding Cell Records in BIFF Files. 


BIFF Record Order 

BIFF record order has changed as the file format has evolved. The simplest way
to determine BIFF record order is to create a workbook in Excel and then use
the BiffView utility to examine the record order. 

BIFF Records: Alphabetical Order 

# *** BIFF Records: Alphabetical Order (START) ################################

Record 

Number 

1904: 1904 Date System 

22h 

ADDIN: Workbook Is an Add-in Macro 

87h 

ADDMENU: Menu Addition 

C2h 

ARRAY: Array-Entered Formula 

221h 

AUTOFILTER: AutoFilter Data 

9Eh 

AUTOFILTER12: AutoFilter Data Introduced in Excel 2007 

87Eh 

AUTOFILTERINFO: Drop-Down Arrow Count 

9Dh 

BACKUP: Save Backup Version of the File 

40h 

BLANK: Cell Value, Blank Cell 

201h 

BOF: Beginning of File 

809h 

BOOKBOOL: Workbook Option Flag 

DAh 

BOOKEXT: Extra Book Info 

863h 

BOOLERR: Cell Value, Boolean or Error 

205h 

BOTTOMMARGIN: Bottom Margin Measurement 

29h 

BOUNDSHEET: Sheet Information 

85h 

CALCCOUNT: Iteration Count 

0Ch 

CALCMODE: Calculation Mode 

0Dh 

CELLWATCH: Cell Watch 

86Ch 

CF: Conditional Formatting Conditions 

1B1h 

CF12: Conditional Formatting Condition 12 

87Ah 

CFEX: Conditional Formatting Extension 

87Bh 

CODENAME: VBE Object Name 

42h 

CODEPAGE: Default Code Page 

42h 

COLINFO: Column Formatting Information 

7Dh 

COMPAT12: Compatibility Checker 12 

88Ch 

COMPRESSPICTURES: Automatic Picture Compression Mode 

89Bh 

CONDFMT: Conditional Formatting Range Information 

1B0h 

CONDFMT12: Conditional Formatting Range Information 12 

879h 

CONTINUE: Continues Long Records 

3Ch 

CONTINUEFRT: Continued FRT 

812h 

CONTINUEFRT11: Continue FRT 11 

875h 

CONTINUEFRT12: Continued FRT 12 

87Fh 

COORDLIST: Polygon Object Vertex Coordinates 

A9h 

COUNTRY: Default Country and WIN.INI Country 

8Ch 

CRASHRECERR: Crash Recovery Error 

865h 

CRN: Nonresident Operands 

5Ah 

CRTCOOPT: Color options for Chart series in Mac Office 11 

8cbh 




Record 

Number 

DATALABEXT: Chart Data Label Extension 

86Ah 

DATALABEXTCONTENTS: Chart Data Label Extension Contents 

86Bh 

DBCELL: Stream Offsets 

D7h 

DBQUERYEXT: Database Query Extensions 

803h 

DCON: Data Consolidation Information 

50h 

DCONBIN: Data Consolidation Information 

1B5h 

DCONN: Data Connection 

876h 

DCONNAME: Data Consolidation Named References 

52h 

DCONREF: Data Consolidation References 

51h 

DEFAULTROWHEIGHT: Default Row Height 

225h 

DEFCOLWIDTH: Default Width for Columns 

55h 

DELMENU: Menu Deletion 

C3h 

DELTA: Iteration Increment 

10h 

DIMENSIONS: Cell Table Size 

200h 

DOCROUTE: Routing Slip Information 

B8h 

DROPDOWNOBJIDS: Drop Down Object 

874h 

DSF: Double Stream File 

161h 

DV: Data Validation Criteria 

1BEh 

DVAL: Data Validation Information 

1B2h 

DXF: Differential XF 

88Dh 

EDG: Edition Globals 

88h 

EOF: End of File 

0Ah 

EXCEL9FILE: Excel 9 File 

1C0h 

EXTERNCOUNT: Number of External References 

16h 

EXTERNNAME: Externally Referenced Name 

223h 

EXTERNSHEET: External Reference 

17h 

EXTSST: Extended Shared String Table 

FFh 

EXTSTRING: FRT String 

804h 

FEAT: Shared Feature Record 

868h 

FEAT11: Shared Feature 11 Record 

872h 

FEAT12: Shared Feature 12 Record 

878h 

FEATHEADR: Shared Feature Header 

867h 

FEATHEADR11: Shared Feature Header 11 

871h 

FEATINFO: Shared Feature Info Record 

86dh 

FEATINFO11: Shared Feature Info 11 Record 

873h 

FILEPASS: File Is Password-Protected 

2Fh 

FILESHARING: File-Sharing Information 

5Bh 

FILESHARING2: File-Sharing Information for Shared Lists 

1A5h 

FILTERMODE: Sheet Contains Filtered List 

9Bh 

FMQRY: Filemaker queries 

8c6h 

FMSQRY: File maker queries 

8c7h 




Record 

Number 

FNGROUP12: Function Group 

898h 

FNGROUPCOUNT: Built-in Function Group Count 

9Ch 

FNGROUPNAME: Function Group Name 

9Ah 

FONT: Font Description 

231h 

FOOTER: Print Footer on Each Page 

15h 

FORCEFULLCALCULATION: Force Full Calculation Mode 

8A3h 

FORMAT: Number Format 

41Eh 

FORMULA: Cell Formula 

406h 

GCW: Global Column-Width Flags 

ABh 

GRIDSET: State Change of Gridlines Option 

82h 

GUIDTYPELIB: VB Project Typelib GUID 

897h 

GUTS: Size of Row and Column Gutters 

80h 

HCENTER: Center Between Horizontal Margins 

83h 

HEADER: Print Header on Each Page 

14h 

HEADERFOOTER: Header Footer 

89Ch 

HFPicture: Header / Footer Picture 

866h 

HIDEOBJ: Object Display Options 

8Dh 

HLINK: Hyperlink 

1B8h 

HLINKTOOLTIP: Hyperlink Tooltip 

800h 

HORIZONTALPAGEBREAKS: Explicit Row Page Breaks 

1Bh 

IMDATA: Image Data 

7Fh 

INDEX: Index Record 

20Bh 

INTERFACEEND: End of User Interface Records 

E2h 

INTERFACEHDR: Beginning of User Interface Records 

E1h 

ITERATION: Iteration Mode 

11h 

LABEL: Cell Value, String Constant 

204h 

LABELSST: Cell Value, String Constant/SST 

FDh 

LEFTMARGIN: Left Margin Measurement 

26h 

LHNGRAPH: Named Graph Information 

95h 

LHRECORD: .WK? File Conversion Information 

94h 

LIST12: Extra Table Data Introduced in Excel 2007 

877h 

LISTCF: List Cell Formatting 

8c5h 

LISTCONDFMT: List Conditional Formatting 

8c4h 

LISTDV: List Data Validation 

8c3h 

LISTFIELD: List Field 

8c2h 

LISTOBJ: List Object 

8c1h 

LNEXT: Extension information for borders in Mac Office 11 

8c9h 

LPR: Sheet Was Printed Using LINE.PRINT() 

98h 

MDTB: Block of Metadata Records 

88Ah 

MDTINFO: Information about a Metadata Type 

884h 

MDXPROP:Member Property MDX Metadata 

888h 

MDXKPI:Key Performance Indicator MDX Metadata 

889h 




Record 

Number 

MDXSET:Set MDX Metadata 

887h 

MDXSTR: MDX Metadata String 

885h 

MDXTUPLE: Tuple MDX Metadata 

886h 

MERGECELLS: Merged Cells 

E5h 

MKREXT: Extension information for markers in Mac Office 11 

8cah 

MMS: ADDMENU/DELMENU Record Group Count 

C1h 

MSODRAWING: Microsoft Office Drawing 

ECh 

MSODRAWINGGROUP: Microsoft Office Drawing Group 

EBh 

MSODRAWINGSELECTION: Microsoft Office Drawing Selection 

EDh 

MTRSETTINGS: Multi-Threaded Calculation Settings 

89Ah 

MULBLANK: Multiple Blank Cells 

BEh 

MULRK: Multiple RK Cells 

BDh 

NAME: Defined Name 

218h 

NAMECMT: Name Comment 

894h 

NAMEFNGRP12: Extra Function Group 

899h 

NAMEPUBLISH: Publish to Excel Server Data for Name 

893h 

NOTE: Comment Associated with a Cell 

1Ch 

NUMBER: Cell Value, Floating-Point Number 

203h 

OBJ: Describes a Graphic Object 

5Dh 

OBJPROTECT: Objects Are Protected 

63h 

OBPROJ: Visual Basic Project 

D3h 

OLEDBCONN: OLE Database Connection 

80Ah 

OLESIZE: Size of OLE Object 

DEh 

PALETTE: Color Palette Definition 

92h 

PANE: Number of Panes and Their Position 

41h 

PARAMQRY: Query Parameters 

DCh 

PASSWORD: Protection Password 

13h 

PLS: Environment-Specific Print Record 

4Dh 

PLV: Page Layout View in Mac Excel 11 

8c8h 

PLV: Page Layout View Settings in Excel 2007 

88Bh 

PRECISION: Precision 

0Eh 

PRINTGRIDLINES: Print Gridlines Flag 

2Bh 

PRINTHEADERS: Print Row/Column Labels 

2Ah 

PROTECT: Protection Flag 

12h 

PROT4REV: Shared Workbook Protection Flag 

1AFh 

PROT4REVPASS: Shared Workbook Protection Password 

1BCh 

PUB: Publisher 

89h 

QSI: External Data Range 

1ADh 

QSIF: Query Table Field Formatting 

807h 

QSIR: Query Table Formatting 

806h 

QSISXTAG: PivotTable and Query Table Extensions 

802h 

REALTIMEDATA: Real-Time Data (RTD) 

813h 




Record 

Number 

RECALCID: Recalc Information 

1C1h 

RECIPNAME: Recipient Name 

B9h 

REFMODE: Reference Mode 

0Fh 

REFRESHALL: Refresh Flag 

1B7h 

RIGHTMARGIN: Right Margin Measurement 

27h 

RK: Cell Value, RK Number 

7Eh 

ROW: Describes a Row 

208h 

RSTRING: Cell with Character Formatting 

D6h 

SAVERECALC: Recalculate Before Save 

5Fh 

SCENARIO: Scenario Data 

AFh 

SCENMAN: Scenario Output Data 

AEh 

SCENPROTECT: Scenario Protection 

DDh 

SCL: Window Zoom Magnification 

A0h 

SELECTION: Current Selection 

1Dh 

SETUP: Page Setup 

A1h 

SHEETEXT: Extra Sheet Info 

862h 

SHRFMLA: Shared Formula 

BCh 

SORT: Sorting Options 

90h 

SORTDATA12: Sort Data 12 

895h 

SOUND: Sound Note 

96h 

SST: Shared String Table 

FCh 

STANDARDWIDTH: Standard Column Width 

99h 

STRING: String Value of a Formula 

207h 

STYLE: Style Information 

293h 

STYLEEXT: Named Cell Style Extension 

892h 

SUB: Subscriber 

91h 

SUPBOOK: Supporting Workbook 

1AEh 

SXADDL: Pivot Table Additional Info 

864h 

SXADDL12: Additional Workbook Connections Information 

881h 

SXDB: PivotTable Cache Data 

C6h 

SXDBEX: PivotTable Cache Data 

122h 

SXDI: Data Item 

C5h 

SXDXF: Pivot Table Formatting 

F4h 

SXEX: PivotTable View Extended Information 

F1h 

SXEXT: External Source Information 

DCh 

SXFDBTYPE: SQL Datatype Identifier 

1BBh 

SXFILT: PivotTable Rule Filter 

F2h 

SXFMLA: Pivot Table Parsed Expression 

F9h 

SXFORMAT: PivotTable Format Record 

FBh 

SXFORMULA: PivotTable Formula Record 

103h 

SXIDSTM: Stream ID 

D5h 

SXITM: Pivot Table Item Indexes 

F5h 




Record 

Number 

SXIVD: Row/Column Field IDs 

B4h 

SXLI: Line Item Array 

B5h 

SXNAME: PivotTable Name 

F6h 

SXPAIR: PivotTable Name Pair 

F8h 

SXPI: Page Item 

B6h 

SXPIEX: OLAP Page Item Extensions 

80Eh 

SXRULE: PivotTable Rule Data 

F0h 

SXSELECT: PivotTable Selection Information 

F7h 

SXSTRING: String 

CDh 

SXTBL: Multiple Consolidation Source Info 

D0h 

SXTBPG: Page Item Indexes 

D2h 

SXTBRGIITM: Page Item Name Count 

D1h 

SXTH: PivotTable OLAP Hierarchy 

80Dh 

SXVD: View Fields 

B1h 

SXVDEX: Extended PivotTable View Fields 

100h 

SXVDTEX: View Dimension OLAP Extensions 

80Fh 

SXVI: View Item 

B2h 

SXVIEW: View Definition 

B0h 

SXVIEWEX: Pivot Table OLAP Extensions 

80Ch 

SXVIEWEX9: Pivot Table Extensions 

810h 

SXVS: View Source 

E3h 

TABID: Sheet Tab Index Array 

13Dh 

TABIDCONF: Sheet Tab ID of Conflict History 

EAh 

TABLE: Data Table 

236h 

TABLESTYLE: Table Style 

88Fh 

TABLESTYLEELEMENT: Table Style Element 

890h 

TABLESTYLES: Table Styles 

88Eh 

TEMPLATE: Workbook Is a Template 

60h 

THEME: Theme 

896h 

TOPMARGIN: Top Margin Measurement 

28h 

TXO: Text Object 

1B6h 

TXTQUERY: Text Query Information 

805h 

UDDESC: Description String for Chart Autoformat 

DFh 

UNCALCED: Recalculation Status 

5Eh 

USERBVIEW: Workbook Custom View Settings 

1A9h 

USERSVIEWBEGIN: Custom View Settings 

1AAh 

USERSVIEWEND: End of Custom View Records 

1ABh 

USESELFS: Natural Language Formulas Flag 

160h 

VCENTER: Center Between Vertical Margins 

84h 

VERTICALPAGEBREAKS: Explicit Column Page Breaks 

1Ah 

WEBPUB: Web Publish Item 

801h 

WINDOW1: Window Information 

3Dh 




Record 

Number 

WINDOW2: Sheet Window Information 

23Eh 

WINDOWPROTECT: Windows Are Protected 

19h 

WOPT: Web Options 

80Bh 

WRITEACCESS: Write Access User Name 

5Ch 

WRITEPROT: Workbook Is Write-Protected 

86h 

WSBOOL: Additional Workspace Information 

81h 

XCT: CRN Record Count 

59h 

XF: Extended Format 

E0h 

XFCRC: XF Extensions Checksum 

87Ch 

XFEXT: XF Extension 

87Dh 

XL5MODIFY: Flag for DSF 

162h 

# *** #########################################################################
# *** тези по някаква причина ги няма споменати, но са описани като съдържание

FONT:Font Description (FIXME not documented)
31h

# *** #########################################################################

# *** BIFF Records: Alphabetical Order (END) ##################################

BIFF Records: Record Number Order 

Number 

Record 

0Ah 

EOF: End of File 

0Ch 

CALCCOUNT: Iteration Count 

0Dh 

CALCMODE: Calculation Mode 

0Eh 

PRECISION: Precision 

0Fh 

REFMODE: Reference Mode 

10h 

DELTA: Iteration Increment 

11h 

ITERATION: Iteration Mode 

12h 

PROTECT: Protection Flag 

13h 

PASSWORD: Protection Password 

14h 

HEADER: Print Header on Each Page 

15h 

FOOTER: Print Footer on Each Page 

16h 

EXTERNCOUNT: Number of External References 

17h 

EXTERNSHEET: External Reference 

19h 

WINDOWPROTECT: Windows Are Protected 

1Ah 

VERTICALPAGEBREAKS: Explicit Column Page Breaks 

1Bh 

HORIZONTALPAGEBREAKS: Explicit Row Page Breaks 

1Ch 

NOTE: Comment Associated with a Cell 

1Dh 

SELECTION: Current Selection 

22h 

1904: 1904 Date System 

26h 

LEFTMARGIN: Left Margin Measurement 

27h 

RIGHTMARGIN: Right Margin Measurement 

28h 

TOPMARGIN: Top Margin Measurement 

29h 

BOTTOMMARGIN: Bottom Margin Measurement 

2Ah 

PRINTHEADERS: Print Row/Column Labels 

2Bh 

PRINTGRIDLINES: Print Gridlines Flag 

2Fh 

FILEPASS: File Is Password-Protected 

3Ch 

CONTINUE: Continues Long Records 

3Dh 

WINDOW1: Window Information 

40h 

BACKUP: Save Backup Version of the File 

41h 

PANE: Number of Panes and Their Position 

42h 

CODENAME: VBE Object Name 




Number 

Record 

42h 

CODEPAGE: Default Code Page 

4Dh 

PLS: Environment-Specific Print Record 

50h 

DCON: Data Consolidation Information 

51h 

DCONREF: Data Consolidation References 

52h 

DCONNAME: Data Consolidation Named References 

55h 

DEFCOLWIDTH: Default Width for Columns 

59h 

XCT: CRN Record Count 

5Ah 

CRN: Nonresident Operands 

5Bh 

FILESHARING: File-Sharing Information 

5Ch 

WRITEACCESS: Write Access User Name 

5Dh 

OBJ: Describes a Graphic Object 

5Eh 

UNCALCED: Recalculation Status 

5Fh 

SAVERECALC: Recalculate Before Save 

60h 

TEMPLATE: Workbook Is a Template 

63h 

OBJPROTECT: Objects Are Protected 

7Dh 

COLINFO: Column Formatting Information 

7Eh 

RK: Cell Value, RK Number 

7Fh 

IMDATA: Image Data 

80h 

GUTS: Size of Row and Column Gutters 

81h 

WSBOOL: Additional Workspace Information 

82h 

GRIDSET: State Change of Gridlines Option 

83h 

HCENTER: Center Between Horizontal Margins 

84h 

VCENTER: Center Between Vertical Margins 

85h 

BOUNDSHEET: Sheet Information 

86h 

WRITEPROT: Workbook Is Write-Protected 

87h 

ADDIN: Workbook Is an Add-in Macro 

88h 

EDG: Edition Globals 

89h 

PUB: Publisher 

8Ch 

COUNTRY: Default Country and WIN.INI Country 

8Dh 

HIDEOBJ: Object Display Options 

90h 

SORT: Sorting Options 

91h 

SUB: Subscriber 

92h 

PALETTE: Color Palette Definition 

94h 

LHRECORD: .WK? File Conversion Information 

95h 

LHNGRAPH: Named Graph Information 

96h 

SOUND: Sound Note 

98h 

LPR: Sheet Was Printed Using LINE.PRINT( 

99h 

STANDARDWIDTH: Standard Column Width 

9Ah 

FNGROUPNAME: Function Group Name 

9Bh 

FILTERMODE: Sheet Contains Filtered List 

9Ch 

FNGROUPCOUNT: Built-in Function Group Count 

9Dh 

AUTOFILTERINFO: Drop-Down Arrow Count 

9Eh 

AUTOFILTER: AutoFilter Data 

A0h 

SCL: Window Zoom Magnification 

A1h 

SETUP: Page Setup 




Number 

Record 

A9h 

COORDLIST: Polygon Object Vertex Coordinates 

ABh 

GCW: Global Column-Width Flags 

AEh 

SCENMAN: Scenario Output Data 

AFh 

SCENARIO: Scenario Data 

B0h 

SXVIEW: View Definition 

B1h 

SXVD: View Fields 

B2h 

SXVI: View Item 

B4h 

SXIVD: Row/Column Field IDs 

B5h 

SXLI: Line Item Array 

B6h 

SXPI: Page Item 

B8h 

DOCROUTE: Routing Slip Information 

B9h 

RECIPNAME: Recipient Name 

BCh 

SHRFMLA: Shared Formula 

BDh 

MULRK: Multiple RK Cells 

BEh 

MULBLANK: Multiple Blank Cells 

C1h 

MMS: ADDMENU/DELMENU Record Group Count 

C2h 

ADDMENU: Menu Addition 

C3h 

DELMENU: Menu Deletion 

C5h 

SXDI: Data Item 

C6h 

SXDB: PivotTable Cache Data 

CDh 

SXSTRING: String 

D0h 

SXTBL: Multiple Consolidation Source Info 

D1h 

SXTBRGIITM: Page Item Name Count 

D2h 

SXTBPG: Page Item Indexes 

D3h 

OBPROJ: Visual Basic Project 

D5h 

SXIDSTM: Stream ID 

D6h 

RSTRING: Cell with Character Formatting 

D7h 

DBCELL: Stream Offsets 

DAh 

BOOKBOOL: Workbook Option Flag 

DCh 

PARAMQRY: Query Parameters 

DCh 

SXEXT: External Source Information 

DDh 

SCENPROTECT: Scenario Protection 

DEh 

OLESIZE: Size of OLE Object 

DFh 

UDDESC: Description String for Chart Autoformat 

E0h 

XF: Extended Format 

E1h 

INTERFACEHDR: Beginning of User Interface Records 

E2h 

INTERFACEEND: End of User Interface Records 

E3h 

SXVS: View Source 

E5h 

MERGECELLS: Merged Cells 

EAh 

TABIDCONF: Sheet Tab ID of Conflict History 

EBh 

MSODRAWINGGROUP: Microsoft Office Drawing Group 

ECh 

MSODRAWING: Microsoft Office Drawing 

EDh 

MSODRAWINGSELECTION: Microsoft Office Drawing Selection 

F0h 

SXRULE: PivotTable Rule Data 

F1h 

SXEX: PivotTable View Extended Information 




Number 

Record 

F2h 

SXFILT: PivotTable Rule Filter 

F4h 

SXDXF: Pivot Table Formatting 

F5h 

SXITM: Pivot Table Item Indexes 

F6h 

SXNAME: PivotTable Name 

F7h 

SXSELECT: PivotTable Selection Information 

F8h 

SXPAIR: PivotTable Name Pair 

F9h 

SXFMLA: Pivot Table Parsed Expression 

FBh 

SXFORMAT: PivotTable Format Record 

FCh 

SST: Shared String Table 

FDh 

LABELSST: Cell Value, String Constant/SST 

FFh 

EXTSST: Extended Shared String Table 

100h 

SXVDEX: Extended PivotTable View Fields 

103h 

SXFORMULA: PivotTable Formula Record 

122h 

SXDBEX: PivotTable Cache Data 

13Dh 

TABID: Sheet Tab Index Array 

160h 

USESELFS: Natural Language Formulas Flag 

161h 

DSF: Double Stream File 

162h 

XL5MODIFY: Flag for DSF 

1A5h 

FILESHARING2: File-Sharing Information for Shared Lists 

1A9h 

USERBVIEW: Workbook Custom View Settings 

1AAh 

USERSVIEWBEGIN: Custom View Settings 

1ABh 

USERSVIEWEND: End of Custom View Records 

1ADh 

QSI: External Data Range 

1AEh 

SUPBOOK: Supporting Workbook 

1AFh 

PROT4REV: Shared Workbook Protection Flag 

1B0h 

CONDFMT: Conditional Formatting Range Information 

1B1h 

CF: Conditional Formatting Conditions 

1B2h 

DVAL: Data Validation Information 

1B5h 

DCONBIN: Data Consolidation Information 

1B6h 

TXO: Text Object 

1B7h 

REFRESHALL: Refresh Flag 

1B8h 

HLINK: Hyperlink 

1BBh 

SXFDBTYPE: SQL Datatype Identifier 

1BCh 

PROT4REVPASS: Shared Workbook Protection Password 

1BEh 

DV: Data Validation Criteria 

1C0h 

EXCEL9FILE: Excel 9 File 

1C1h 

RECALCID: Recalc Information 

200h 

DIMENSIONS: Cell Table Size 

201h 

BLANK: Cell Value, Blank Cell 

203h 

NUMBER: Cell Value, Floating-Point Number 

204h 

LABEL: Cell Value, String Constant 

205h 

BOOLERR: Cell Value, Boolean or Error 

207h 

STRING: String Value of a Formula 

208h 

ROW: Describes a Row 

20Bh 

INDEX: Index Record 




Number 

Record 

218h 

NAME: Defined Name 

221h 

ARRAY: Array-Entered Formula 

223h 

EXTERNNAME: Externally Referenced Name 

225h 

DEFAULTROWHEIGHT: Default Row Height 

231h 

FONT: Font Description 

236h 

TABLE: Data Table 

23Eh 

WINDOW2: Sheet Window Information 

293h 

STYLE: Style Information 

406h 

FORMULA: Cell Formula 

41Eh 

FORMAT: Number Format 

800h 

HLINKTOOLTIP: Hyperlink Tooltip 

801h 

WEBPUB: Web Publish Item 

802h 

QSISXTAG: PivotTable and Query Table Extensions 

803h 

DBQUERYEXT: Database Query Extensions 

804h 

EXTSTRING: FRT String 

805h 

TXTQUERY: Text Query Information 

806h 

QSIR: Query Table Formatting 

807h 

QSIF: Query Table Field Formatting 

809h 

BOF: Beginning of File 

80Ah 

OLEDBCONN: OLE Database Connection 

80Bh 

WOPT: Web Options 

80Ch 

SXVIEWEX: Pivot Table OLAP Extensions 

80Dh 

SXTH: PivotTable OLAP Hierarchy 

80Eh 

SXPIEX: OLAP Page Item Extensions 

80Fh 

SXVDTEX: View Dimension OLAP Extensions 

810h 

SXVIEWEX9: Pivot Table Extensions 

812h 

CONTINUEFRT: Continued FRT 

813h 

REALTIMEDATA: Real-Time Data (RTD) 

862h 

SHEETEXT: Extra Sheet Info 

863h 

BOOKEXT: Extra Book Info 

864h 

SXADDL: Pivot Table Additional Info 

865h 

CRASHRECERR: Crash Recovery Error 

866h 

HFPicture: Header / Footer Picture 

867h 

FEATHEADR: Shared Feature Header 

868h 

FEAT: Shared Feature Record 

86Ah 

DATALABEXT: Chart Data Label Extension 

86Bh 

DATALABEXTCONTENTS: Chart Data Label Extension Contents 

86Ch 

CELLWATCH: Cell Watch 

86dh 

FEATINFO: Shared Feature Info Record 

871h 

FEATHEADR11: Shared Feature Header 11 

872h 

FEAT11: Shared Feature 11 Record 

873h 

FEATINFO11: Shared Feature Info 11 Record 

874h 

DROPDOWNOBJIDS: Drop Down Object 

875h 

CONTINUEFRT11: Continue FRT 11 

876h 

DCONN: Data Connection 




Number 

Record 

877h 

LIST12: Extra Table Data Introduced in Excel 2007 

878h 

FEAT12: Shared Feature 12 Record 

879h 

CONDFMT12: Conditional Formatting Range Information 12 

87Ah 

CF12: Conditional Formatting Condition 12 

87Bh 

CFEX: Conditional Formatting Extension 

87Ch 

XFCRC: XF Extensions Checksum 

87Dh 

XFEXT: XF Extension 

87Eh 

EZFILTER12: AutoFilter Data Introduced in Excel 2007 

87Fh 

CONTINUEFRT12: Continue FRT 12 

881h 

SXADDL12: Additional Workbook Connections Information 

884h 

MDTINFO: Information about a Metadata Type 

885h 

MDXSTR: MDX Metadata String 

886h 

MDXTUPLE: Tuple MDX Metadata 

887h 

MDXSET: Set MDX Metadata 

888h 

MDXPROP: Member Property MDX Metadata 

889h 

MDXKPI: Key Performance Indicator MDX Metadata 

88Ah 

MDTB: Block of Metadata Records 

88Bh 

PLV: Page Layout View Settings in Excel 2007 

88Ch 

COMPAT12: Compatibility Checker 12 

88Dh 

DXF: Differential XF 

88Eh 

TABLESTYLES: Table Styles 

88Fh 

TABLESTYLE: Table Style 

890h 

TABLESTYLEELEMENT: Table Style Element 

892h 

STYLEEXT: Named Cell Style Extension 

893h 

NAMEPUBLISH: Publish To Excel Server Data for Name 

894h 

NAMECMT: Name Comment 

895h 

SORTDATA12: Sort Data 12 

896h 

THEME: Theme 

897h 

GUIDTYPELIB: VB Project Typelib GUID 

898h 

FNGRP12: Function Group 

899h 

NAMEFNGRP12: Extra Function Group 

89Ah 

MTRSETTINGS: Multi-Threaded Calculation Settings 

89Bh 

COMPRESSPICTURES: Automatic Picture Compression Mode 

89Ch 

HEADERFOOTER: Header Footer 

8A3h 

FORCEFULLCALCULATION: Force Full Calculation Settings 

8c1h 

LISTOBJ: List Object 

8c2h 

LISTFIELD: List Field 

8c3h 

LISTDV: List Data Validation 

8c4h 

LISTCONDFMT: List Conditional Formatting 

8c5h 

LISTCF: List Cell Formatting 

8c6h 

FMQRY: Filemaker queries 

8c7h 

FMSQRY: File maker queries 

8c8h 

PLV: Page Layout View in Mac Excel 11 

8c9h 

LNEXT: Extension information for borders in Mac Office 11 

8cah 

MKREXT: Extension information for markers in Mac Office 11 




Number 

Record 

8cbh 

CRTCOOPT: Color options for Chart series in Mac Office 11 



 
# *** #########################################################################
# *** Record Descriptions (START)
# *** #########################################################################

The first two fields in every BIFF record are record number and record length.
Because these fields have the same offset and size in every BIFF record, they
are not documented in the following descriptions. For more information about
the record number and record length fields, see .BIFF Record Information.. 

1904: 1904 Date System (22h) 

The 1904 record stores the date system used by Excel. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

f1904 

2 

=1 if the 1904 date system is used 



 

ADDIN: Workbook Is an Add-in Macro (87h) 

This record has no record data field. If the ADDIN record is present in the BIFF file, 
it signifies that the macro is an add-in macro. The ADDIN record, if present, must 
immediately follow the first BOF record in the Book stream. 

ADDMENU: Menu Addition (C2h) 

The ADDMENU record stores a menu addition. When a menu object (a menu bar, a 
menu, a menu item, or a submenu item) is added to the user interface, Excel writes 
a group of ADDMENU records for each object. The first record stores the menu bar, 
the second stores the menu, the third stores the menu item, and the fourth stores 
the submenu item (Note: this is identical to the menu hierarchy in the user 
interface). The number of records in the group depends on the level of the menu 
structure at which the addition occurs. For example, adding a menu to a menu bar 
causes two ADDMENU records to be written. Adding a submenu item to a menu item 
causes four records to be written. 
If fInsert is true (equal to 01h), the menu object is added at this level of the 
hierarchy. For example, if fInsert is true in the second ADDMENU record of the 
group, Excel adds a new menu to an existing menu bar. If fInsert is false (equal 
to 00h), the record is a placeholder, and one of the following ADDMENU records in the 
group defines the menu addition. 
For menu items and submenu items, the icetab field stores the index to the added 
command, if the item is attached to a built-in command. The icetabBefore field 
stores the index to the existing command prior to where the new command was 
insertd in the list. If either of these indexes equals FFFFh, the corresponding string 
from the rgch field is used instead of a built-in command. 
The caitm field is equal to the number of following ADDMENU records to insert at this 
level of the menu hierarchy. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

icetabItem 

2 

icetab of the command 




Offset 

Field Name 

Size 

Contents 

6 

icetabBefore 

2 

icetab of the existing command prior to where the 
new command was inserted 

8 

caitm 

1 

Number of ADDMENU records at the next level of the 
menu hierarchy 

9 

fInsert 

1 

=1, insert this menu object 
=0, this is a placeholder record 

10 

rgch 

var 

stItem, stBefore, stMacro, stStatus, stHelp 
strings (see text) 



 
The rgch field stores five concatenated strings, as described in the following table. 
Null strings appear in the rgch field as a single byte (00h). 

String 

Contents 

stItem 

Text of the menu object 

stBefore 

Text of the item this item was added ahead of 

stMacro 

Macro name, encoded using a technique similar to the encoded file 
names in the EXTERNSHEET record 

stStatus 

Status bar text (for add-ins) 

stHelp 

Help file name and context ID (for add-ins) 



 

ARRAY: Array-Entered Formula (221h) 

An ARRAY record describes a formula that was array-entered into a range of cells. 
The range of cells in which the array is entered is defined by the rwFirst, rwLast, 
colFirst, and colLast fields. 
The ARRAY record occurs directly after the FORMULA record for the cell in the upper-
left corner of the array — that is, the cell defined by the rwFirst and colFirst 
fields. 

The parsed expression is the array formula, stored in the Excel internal format. For 
an explanation of the parsed format, see .Microsoft Excel Formulas.. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

rwFirst 

2 

First row of the array 

6 

rwLast 

2 

Last row of the array 

8 

colFirst 

1 

First column of the array 

9 

colLast 

1 

Last column of the array 

10 

grbit 

2 

Option flags 

12 

chn 

4 

(See text) 

16 

cce 

2 

Length of the parsed expression 

18 

rgce 

var 

Parsed formula expression 



 
Ignore the chn field when reading the BIFF file. If a BIFF file is written, the chn field 
must be 00000000h. 
The grbit field contains the following option flags: 


Offset 

Bits 

Mask 

Flag Name 

Contents 

0 

0 

01h 

fAlwaysCalc 

Always calculate the formula. 

 

1 

02h 

fCalcOnLoad 

Calculate the formula when the file is opened. 

 

7–2 

FCh 

(unused) 

 

1 

7–0 

FFh 

(unused) 

 



 

AUTOFILTER: AutoFilter Data (9Eh) 

This record stores data for an active AutoFilter. 
Record Data — BIFF7 and Later 

Offset 

Name 

Size 

Contents 

4 

iEntry 

2 

Index of the active AutoFilter 

6 

grbit 

2 

Option flags 

8 

doper1 

10 

DOPER structure for the first filter condition 

18 

doper2 

10 

DOPER structure for the second filter condition 

28 

rgch 

var 

String storage for vtString DOPER 



 
The grbit field contains the following option flags: 

Offset 

Bits 

Mask 

Name 

Contents 

0 

1 – 0 

0003h 

wJoin 

=1 if the custom filter conditions are ANDed 
=0 if the custom filter conditions are ORed 

 

2 

0004h 

fSimple1 

=1 if the first condition is a simple equality (for 
optimization) 

 

3 

0008h 

fSimple2 

=1 if the second condition is a simple equality 
(for optimization) 

 

4 

0010h 

fTop10 

=1 if the condition is a Top 10 AutoFilter 

 

5 

0020h 

fTop 

=1 if the Top 10 AutoFilter shows the top 
items; =0 if it shows the bottom items 

 

6 

0040h 

fPercent 

=1 if the Top 10 AutoFilter shows percentage; 
=0 if it shows items 

 

15 – 7 

FF80h 

wTop10 

The number of items to show (from 1 to 500 
decimal, expressed as a binary number) 



 
Record Data — BIFF5 

Offset 

Field Name 

Size 

Contents 

4 

iEntry 

2 

Index of the active AutoFilter 

6 

grbit 

2 

Option flags 

8 

doper1 

10 

DOPER structure for first filter condition 

18 

doper2 

10 

DOPER structure for the second filter condition 

28 

rgch 

var 

String storage for vtString DOPER 



 
The grbit field contains the following option flags: 

Offset 

Bits 

Mask 

Name 

Contents 

0 

1 – 0 

03h 

wJoin 

=1 if the custom filter conditions are ANDed 
=0 if the custom filter conditions are ORed 




 

2 

04h 

fSimple1 

=1 if the first condition is a simple equality (for 
optimization) 

 

3 

08h 

fSimple2 

=1 if the second condition is a simple equality 
(for optimization) 

 

7 – 4 

F0h 

(Reserved) 

 

1 

7 – 0 

FFh 

(Reserved) 

 



 

DOPER Structures 

The database oper structures (DOPERs) are 10-byte parsed definitions of the filter 
conditions that appear in the Custom AutoFilter dialog box. The DOPER structures 
are defined in the following sections. 
DOPER Structure for RK Numbers (vt=02h) 

Offset 

Field Name 

Size 

Contents 

0 

vt 

1 

Data type 

1 

grbitSgn 

1 

Comparison code 

2 

rk 

4 

RK number 

6 

(Reserved) 

4 

 



 
DOPER Structure for IEEE Floating-Point Numbers (vt=04h) 

Offset 

Field Name 

Size 

Contents 

0 

vt 

1 

Data type 

1 

grbitSgn 

1 

Comparison code 

2 

num 

8 

IEEE floating-point number 



 
DOPER Structure for Strings (vt=06h) 

Offset 

Field Name 

Size 

Contents 

0 

vt 

1 

Data type 

1 

grbitSgn 

1 

Comparison code 

2 

(Reserved) 

4 

 

6 

cch 

1 

Length of the string (the string is stored in the rgch 
field that follows the DOPER structures) 

7 

(Reserved) 

3 

 



 
DOPER Structure for Boolean and Error Values (vt=08h) 

Offset 

Name 

Size 

Contents 

0 

vt 

1 

Data type 

1 

grbitSgn 

1 

Comparison code 

2 

fError 

1 

Boolean/error flag 

3 

bBoolErr 

1 

Boolean value or error value 

4 

(Reserved) 

6 

 



 
The bBoolErr field contains the Boolean or error value, as determined by the 
fError field. If the fError field contains a 0 (zero), the bBoolErr field contains a 
Boolean value; if the fError field contains a 1, the bBoolErr field contains an error 
value. 


Boolean values are 1 for true and 0 for false. 
Error values are listed in the following table. 

Error value 

Value (hex) 

Value (dec.) 

#NULL! 

00h 

0 

#DIV/0! 

07h 

7 

#VALUE! 

0Fh 

15 

#REF! 

17h 

23 

#NAME? 

1Dh 

29 

#NUM! 

24h 

36 

#N/A 

2Ah 

42 



 
The vt field contains the data type of the DOPER, as shown in the following table. 
For the DOPER types 00h, 0Ch, and 0Eh, the remaining 9 bytes of the DOPER are 
ignored. 

vt 

DOPER type 

00h 

Filter condition not used 

02h 

RK number 

04h 

IEEE number 

06h 

String 

08h 

Boolean or error value 

0Ch 

Match all blanks 

0Eh 

Match all non-blanks 



 
The grbitSgn field corresponds to the following comparison operators: 

grbitSgn 

Operator 

01 

< 

02 

= 

03 

<= 

04 

> 

05 

<> 

06 

>= 



 

AUTOFILTER12: Auto-filter Data Introduced in Excel 2007 
(87Eh) 

This record stores data for Excel 2007 new auto-filter types. 
Record Data — BIFF8 only 

Offset 

Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the 
first two bytes of the record; =087Eh 

6 

grbitFrt 

2 

FRT cell reference flag; =0 currently 

8 

(Reserved) 

8 

Currently not used, and set to 0 

16 

iEntry 

2 

The number of the column to which this filter 
applies, 0-based; stored as 2-byte integer 
number 




18 

fHideArrow 

4 

=1 if dropdown arrow is hidden 

22 

ft 

4 

Filter type (see below for details) 

26 

cft 

4 

Custom filter type (see below for details) 

30 

ccriteria 

4 

Number of criteria 

34 

cdategroupings 

4 

Number of date groupings 

38 

grbit 

2 

Auto-filter flags (see below for details) 

40 

wTop10Num 

4 

Top 10 filter type (see below for details). Only 
defined when fTop10 in grbit is =1 

44 

idList 

4 

Table unique ID, =0xFFFFFFFF if this is 
worksheet auto-filter; stored as unsigned 4-
byte integer number 

48 

guidSview 

16 

GUID of the associated custom view, if any; a 
16-byte (128-bit) number 

64 

rgb 

var 

DXF data or cell icon (see below for details) 



 
The ft field contains one of the following values: 

ft 

Filter type 

00h 

Value 

01h 

Cell color 

02h 

Font color 

03h 

Cell icon 



 
The cft field contains one of the following values: 

cft 

Custom filter type 

00h 

Nothing 

01h 

Above average 

02h 

Below average 

03h 

Top 10 

04h 

Equal to date 

05h 

Before date 

06h 

After date 

07h 

Between dates 

08h 

Tomorrow 

09h 

Today 

0Ah 

Yesterday 

0Bh 

Next week 

0Ch 

This week 

0Dh 

Last week 

0Eh 

Next month 

0Fh 

This month 

10h 

Last month 

11h 

Next quarter 

12h 

This quarter 

13h 

Last quarter 




14h 

Next year 

15h 

This year 

16h 

Last year 

17h 

Year-to-date 

18h 

1st quarter 

19h 

2nd quarter 

1Ah 

3rd quarter 

1Bh 

4th quarter 

1Ch 

1st month 

1Dh 

2nd month 

1Eh 

3rd month 

1Fh 

4th month 

20h 

5th month 

21h 

6th month 

22h 

7th month 

23h 

8th month 

24h 

9th month 

25h 

10th month 

26h 

11th month 

27h 

12th month 

28h 

Not equal to date 

29h 

Before or equal to date 

2Ah 

After or equal to date 

2Bh 

Not between dates 



 
The grbit field contains the following flags: 

Offset 

Bits 

Mask 

Name 

Contents 

0 

0 

0001h 

fTop10 

=1 if this is Top 10 criterion 

 

1 

0002h 

fTop 

=1 if top, =0 if bottom 

 

2 

0004h 

fPercent 

=1 if percent, =0 if items 

 

3 

0008h 

fWorksheetAutoFilter 

=1 if this is worksheet 
AutoFilter 

 

4-15 

FFF0h 

(Reserved) 

Currently not used, and set to 0 



The wTop10Num field contains one of the following values: 

wTop10Num 

Top 10 filter type 

00h 

Unknown 

01h 

Count 

02h 

Percent 

03h 

Sum 



 
If ft field contains 00h (value), then there is no data stored in rgb block. All criteria 
and date groupings data is stored in CONTINUEFRT12 (87Fh) records that follow 
EZFILTER12 (87Eh) record as described below. 


First stored are ccriteria CONTINUEFRT12 records of the following form: 
Record Data — BIFF8 only 

 
Criteria records are followed by cdategroupings CONTINUEFRT12 records of the 
following form: 
Record Data — BIFF8 only 

Offset 

Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the 
first two bytes of the record; =087Fh 

6 

grbitFrt 

2 

FRT cell reference flag; =0 currently 

8 

ref 

8 

Area reference (range) to which the AutoFilter 
is applied 

16 

doper 

10 

DOPER structure (described in AUTOFILTER 
(9Eh) record) 

26 

rgch 

var 

String storage for vtString DOPER 



Offset 

Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the 
first two bytes of the record; =087Fh 

6 

grbitFrt 

2 

FRT cell reference flag; =0 currently 



16 

yr 

2 

Year, 4-digit 



8 

ref 

8 

Area reference (range) to which the AutoFilter 
is applied 



18 

mon 

2 

Month, 1-12 

20 

dom 

4 

Day of the month, 1-31 

24 

hour 

2 

Hour, 0-23 

26 

min 

2 

Minute, 0-59 

28 

sec 

2 

Second, 0-59 

30 

wdy 

2 

Day of the week, 1-7 

32 

fracsec 

2 

Fractions of a second 

34 

wRound 

2 

Rounding parameter: 
00h. Round to seconds 
01h. Round to 10th of seconds 
02h. Round to 100th of seconds 
03h. Round to 1000th of seconds 

36 

dnt 

4 

Date node type. Specifies which part of the 
date (Year/Month/Day/Hour/Minute/Second) is 
being used in the filter: 
00h. Year 
01h. Month 
02h. Day 
03h. Hour 
04h. Minute 
05h. Second 



 


If ft field contains 01h or 02h (cell color or font respectively), then the following 
data is stored in rgb block: 

Offset 

Name 

Size 

Contents 

0 

dxf 

var 

Cell or font color DXF 



 
If ft field contains 03h (cell icon), then the following data is stored in rgb block: 

Offset 

Name 

Size 

Contents 

0 

iiconset 

4 

Icon set number 

4 

iicon 

4 

Icon number within the specified set 



AUTOFILTERINFO: Drop-Down Arrow Count (9Dh) 

This record stores the count of AutoFilter drop-down arrows. Each drop-down arrow 
has a corresponding OBJ record. If at least one AutoFilter is active (in other words, 
the range was filtered at least once), there is a corresponding FILTERMODE record in 
the file. There is also one AUTOFILTER record for each active filter. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

cEntries 

2 

Number of AutoFilter drop-down arrows on the sheet 



 

AUTOWEBPUB: Auto web publish storage (8c0h) 

This is a Mac Excel FRT record. It stores the information for auto web publishing. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the first two 
bytes of the record; =08c0h 

6 

grbitFrt 

2 

FRT flags; bitfFrtRef must be set to 1; see FRT Record 
Description 

8 

REF 

8 

REF structure; see FRT Record Description 

16 

tws 

1 

Type of web source 

17 

grbitFlags 

2 

Flags 

19 

id 

2 

Unused 

21 

ref 

8 

REF structure; ref if twsREf 

29 

cchPath 

2 

Where to save 

31 

cchShTitle 

2 

Sheet title; 0 if twsWorkbook 

33 

cchObjToPub 

2 

Object name, if applicable 

35 

rgach 

var 

Path, sheet then object 



 
The grbitFlags field contains the following option flags 

Bits 

Mask 

Flag Name 

Contents 

0 

0001h 

fScheduled 

1= 

1 

0002h 

fWarn 

1= 

2 

0004h 

fMustRegister 

1= 




15-3 

FFF8h 

(Reserved) 

Reserved; must be zero 



BACKUP: Save Backup Version of the File (40h) 

The BACKUP record specifies whether Excel should save backup versions of a file. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

fBackupFile 

2 

=1 if Excel should save a backup version of the file 



 

BLANK: Cell Value, Blank Cell (201h) 

A BLANK record describes an empty cell. The rw field contains the 0-based row 
number. The col field contains the 0-based column number. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

rw 

2 

Row 

6 

col 

2 

Column 

8 

ixfe 

2 

Index to the XF record 



 

BOF: Beginning of File (809h) 

The BOF record marks the beginning of the Book stream in the BIFF file. It also 
marks the beginning of record groups (or .substreams. of the Book stream) for 
sheets in the workbook. For BIFF2 through BIFF4, the BIFF version is found from the 
high-order byte of the record number field, as shown in the following table. For 
BIFF5/BIFF7, and BIFF8 use the vers field at offset 4 to determine the BIFF version. 
BOF Record Number Field 

Offset 

Field Name 

Size 

Contents 

0 

vers 

1 

version: 
=00 BIFF2 
=02 BIFF3 
=04 BIFF4 
=08 BIFF5/BIFF7/BIFF8 

1 

bof 

1 

09h 



 
Record Data — BIFF8 

Offset 

Field Name 

Size 

Contents 

4 

vers 

2 

Version number: 
=0600 for BIFF8 

6 

dt 

2 

Substream type: 
0005h = Workbook globals 
0006h = Visual Basic module 
0010h = Worksheet or dialog sheet 
0020h = Chart 
0040h = Excel 4.0 macro sheet 
0100h = Workspace file 

8 

rupBuild 

2 

Build identifier (=0DBBh for Excel 97) 

10 

rupYear 

2 

Build year (=07CCh for Excel 97) 




12 

bfh 

4 

File history flags 

16 

sfo 

4 

Lowest BIFF version (see text) 



 
The rupBuild and rupYear fields contain numbers that identify the version (build) 
of Excel that wrote the file. If you write a BIFF file, you can use the BiffView utility 
to determine the current values of these fields by examining a BOF record in a 
workbook file. 
The sfo field contains the earliest version (vers field) of Excel that can read all 
records in this file. 
The bfh field contains the following flag bits: 

Bits 

Mask 

Flag Name 

Contents 

0 

00000001h 

fWin 

=1 if the file was last edited by Excel for Windows 

1 

00000002h 

fRisc 

=1 if the file was last edited by Excel on a RISC 
platform 

2 

00000004h 

fBeta 

=1 if the file was last edited by a beta version of 
Excel 

3 

00000008h 

fWinAny 

=1 if the file has ever been edited by Excel for 
Windows 

4 

00000010h 

fMacAny 

=1 if the file has ever been edited by Excel for the 
Macintosh 

5 

00000020h 

fBetaAny 

=1 if the file has ever been edited by a beta version 
of Excel 

7–6 

000000C0h 

(Reserved) 

Reserved; must be 0 (zero) 

8 

00000100h 

fRiscAny 

=1 if the file has ever been edited by Excel on a 
RISC platform 

31 – 9 

FFFFFE00 

(Reserved) 

Reserved; must be 0 (zero) 



 
Record Data — BIFF5 and BIFF7 

Offset 

Field Name 

Size 

Contents 

4 

vers 

2 

Version number (0500 for BIFF5 and BIFF7) 

6 

dt 

2 

Substream type: 
0005h = Workbook globals 
0006h = Visual Basic module 
0010h = Worksheet or dialog sheet 
0020h = Chart 
0040h = Excel 4.0 macro sheet 
0100h = Workspace file 

8 

rupBuild 

2 

Build identifier (internal use only) 

10 

rupYear 

2 

Build year (internal use only) 



 

BOOKBOOL: Workbook Option Flag (DAh) 

This record saves a workbook option flag. 


Record Data 

Offset 

Record Name 

Size 

Contents 

4 

grbit 

2 

See table below 



 
The grbit field contains the following flags: 

Bits 

Mask 

Flag Name 

Contents 

0 

0001h 

fNoSaveSupp 

=1 if the Save External Link Values 
option is turned off (Options dialog box, 
Calculation tab) 

1 

0002h 

(Reserved) 

 

2 

0004h 

fHasEnvelope 

xl9: =1 if book has envelope (File | Send 
To | Mail Recipient) 

3 

0008h 

fEnvelopeVisible 

xl9: =1 if envelope is visible 

4 

0010h 

fEnvelopeInitDone 

xl10: =1 if envelope has been initialized 

6-5 

0060h 

grbitUpdateLinks 

xl10: Update external links: 
0= prompt user to update 
1= do not prompt, do not update 
2= do not prompt, do update 

7 

0080h 

(Reserved) 

 

8 

0100h 

fHideBorderUnsels 

xl11: 1= hide borders of unselected Tables 

15-9 

FE00h 

(Reserved) 

 



BOOKEXT: Extra Book Info (863h) 

Introduced in Excel 10 (2002) this record is an FRT record. This record contains 
workbook-specific information new to Excel 10 (2002) and Excel 11 (2003). The rgf 
and rgf2 fields contain several bit flags and other fields, as described in the tables 
below. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the first two 
bytes of the record; =0863h 

6 

grbitFrt 

2 

FRT flags; must be zero 

8 

(unused) 

8 

Must be zero 

16 

cb 

4 

Record size minus 4 (excludes rt and cb in record header) 
=014h in Excel 10, 
=015h in Excel 11, 
may be larger in future releases 

20 

grbit 

4 

Flags and other fields; see description below 

24 

grbit2 

var 

In Excel 11 this indicates there are more flags if it is set to 
1. In Excel 10 this is 0. This field may be larger in the 
future. 



 
The grbit field contains the following flags and fields: 


Bits 

Mask 

Flag or Field Name 

Contents 

0 

00000001h 

fDontAutoRecover 

=1 if Auto Recover is disabled for 
this workbook; 
=0 otherwise. 

1 

00000002h 

fHidePivotTableFList 

=1 if pivot table field list should be 
hidden for this workbook; 
=0 if it should be shown. 

2 

00000004h 

fFilterPrivacy 

=1 if personal information should be 
removed from File / Properties on 
save; 
=0 otherwise. 

3 

00000008h 

fEmbedSmartTags 

=1 if smart tags should be 
embedded in this workbook on save; 
=0 otherwise. 

5-4 

00000030h 

mdSmartTagsDisplay 

Corresponding to a control in the 
Tools/AutoCorrect Options…./Smart 
Tags dialog tab: 
=0 mdSmartTagsDisplayAll, if 
both button and indicator should be 
shown for each smart tag; 
=1 mdSmartTagsDisplayNone, if 
smart tags should not be shown at 
all; 
=2 
mdSmartTagsDisplayNoIndicator, 
if only the button (but no indicator) 
should be shown for each smart tag. 

6 

00000040h 

fSavedDuringRecovery 

=1 if the workbook was saved during 
auto recovery; 
=0 otherwise 

7 

00000080h 

fCreatedViaMinimalSave 

=1 if the workbook was created by 
means of minimal save; 
=0 otherwise 

8 

00000100h 

fOpenedViaDataRecovery 

=1 if this workbook was opened by 
means of data recovery; 
=0 otherwise 

9 

00000200h 

fOpenedViaSafeLoad 

=1 if the workbook has been opened 
in safe load mode; 
=0 otherwise 

31-10 

FFFFFC00h 

(unused) 

Reserved; must be zero 



 
The grbit2 field contains the following flags: 


Bits 

Mask 

Flag Name 

Contents 

0 

01h 

fBuggedUserAboutSolution 

In Excel 11: 
=1 if the user doesn't want to be 
prompted to load smart doc 
components; 
=0 otherwise 

1 

02h 

fShowInkAnnotation 

In Excel 11: 
=1 if inking annotations should be 
displayed in this workbook; 
=0 otherwise 

7-2 

FCh 

(unused) 

Unused 



BOOLERR: Cell Value, Boolean or Error (205h) 

A BOOLERR record describes a cell that contains a constant Boolean or error value. 
The rw field contains the 0-based row number. The col field contains the 0-based 
column number. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

rw 

2 

Row 

6 

col 

2 

Column 

8 

ixfe 

2 

Index to the XF record 

10 

bBoolErr 

1 

Boolean value or error value 

11 

fError 

1 

Boolean/error flag 



 
The bBoolErr field contains the Boolean or error value, as determined by the 
fError field. If the fError field contains a 0 (zero), the bBoolErr field contains a 
Boolean value; if the fError field contains a 1, the bBoolErr field contains an error 
value. 
Boolean values are 1 for true and 0 for false. 
Error values are listed in the following table. 

Error value 

Value (hex) 

Value (dec.) 

#NULL! 

00h 

0 

#DIV/0! 

07h 

7 

#VALUE! 

0Fh 

15 

#REF! 

17h 

23 

#NAME? 

1Dh 

29 

#NUM! 

24h 

36 

#N/A 

2Ah 

42 



 

BOTTOMMARGIN: Bottom Margin Measurement (29h) 

The BOTTOMMARGIN record specifies the bottom margin in inches when a sheet is 
printed. The num field is in 8-byte IEEE floating-point format. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

num 

8 

Bottom margin 




 

BOUNDSHEET: Sheet Information (85h) 

This record stores the sheet name, sheet type, and stream position. 
BIFF8 Record Data 

Offset 

Field Name 

Size 

Contents 

4 

lbPlyPos 

4 

Stream position of the start of the BOF record for the sheet 

8 

grbit 

2 

Option flags 

10 

cch 

1 

Length of the sheet name (in characters) 

11 

rgch 

var 

Sheet name (grbit/rgb fields of Unicode String) 



 
BIFF7 Record Data 

Offset 

FieldName 

Size 

Contents 

4 

lbPlyPos 

4 

Stream position of the start of the BOF record for the sheet 

8 

grbit 

2 

Option flags 

10 

cch 

1 

Length of the sheet name 

11 

rgch 

var 

Sheet name 



 
The grbit field contains the following options: 

Bits 

Mask 

Option Name 

Contents 

1–0 

0003h 

hsState 

Hidden state: 
00h = visible 
01h = hidden 
02h = very hidden (see text) 

7 – 2 

00FCh 

(Reserved) 

 

15 – 8 

FF00h 

dt 

Sheet type: 
00h = worksheet or dialog sheet 
01h = Excel 4.0 macro sheet 
02h = chart 
06h = Visual Basic module 



 
A Visual Basic procedure can set the Visible property of a sheet to create a very 
hidden sheet. A very hidden sheet can be made visible again by a Visual Basic 
procedure, but there is no way to make the sheet visible through the user interface 
of Excel. 

CALCCOUNT: Iteration Count (0Ch) 

The CALCCOUNT record stores the Maximum Iterations option from the Options 
dialog box, Calculation tab. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

cIter 

2 

Iteration count 



 

CALCMODE: Calculation Mode (0Dh) 

The CALCMODE record stores options from the Options dialog box, Calculation tab. 


Record Data 

Offset 

Flag Name 

Size 

Contents 

4 

fAutoRecalc 

2 

Calculation mode: 
=0 for manual 
=1 for automatic 
=–1 for automatic, except tables 



 

CELLWATCH: Cell Watch (86Ch) 

Introduced in Excel 10 (2002) this BIFF record is an FRT record. Each CELLWATCH 
record stores the fact that a cell is being watched in the Watch Window toolbar. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the first two 
bytes of the record; =086Ch 

6 

grbitFrt 

2 

FRT flags; 
=1 (bitfFrtRef); FRT header includes a REF structure 

8 

refFrt 

8 

REF structure of cell being watched 

16 

cb 

4 

Size of variable length rgb; 
=0 for Excel 10 and Excel 11, but is set up for extension 
and preservation of more data 

20 

rgb 

var 

Extended info goes here. This is empty for Excel 10 and 
Excel 11, but is set up for extension and preservation of 
more data 



 

CF: Conditional Formatting Conditions (1B1h) 

This record stores a conditional formatting condition. 
Record Data — BIFF8 

Offset 

Field Name 

Size 

Contents 

4 

ct 

1 

Conditional Formatting type 
1 = "Cell Value Is" 
2 = "Formula Is" 

5 

cp 

1 

Conditional Formatting operator (applicable when ct=1) 
1 = "between" 
2 = "not between" 
3 = "equal" 
4 = "not equal" 
5 = "greater than" 
6 = "less than" 
7 = "greater than or equal" 
8 = "less than or equal" 

6 

cce1 

2 

Count of bytes in rgce1 

8 

cce2 

2 

Count of bytes in rgce2 

10 

rgbdxf 

var 

Conditional format to apply, stored as a DXF 

var 

rgce1 

var 

First formula for this condition 




var 

rgce2 

var 

Second formula for this condition 



 

CF12: Conditional Formatting Condition 12 (87Ah) 

This record stores a conditional formatting condition with content that is new for 
Office Excel 2007. 


Offset 

Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the 
first two bytes of the record; =087Ah 

6 

grbitFrt 

2 

FRT cell reference flag; =0 currently 

8 

(Reserved) 

8 

Currently not used, and set to 0 

16 

ct 

1 

Conditional Formatting type 
1 = "Cell Value Is" 
2 = "Formula Is" 
3 = .Gradient. 
4 = .Databar. 
5 = .Filter. 
6 = .Multistate (KPI). 

17 

cp 

1 

Conditional Formatting operator (when ct=1) 
1 = "between" 
2 = "not between" 
3 = "equal" 
4 = "not equal" 
5 = "greater than" 
6 = "less than" 
7 = "greater than or equal" 
8 = "less than or equal" 

18 

cce1 

2 

Count of bytes in rgce1 

20 

cce2 

2 

Count of bytes in rgce2 

22 

rgbdxf 

var 

Conditional format to apply, stored as a DXF 

var 

rgce1 

var 

First formula for this condition 

var 

rgce2 

var 

Second formula for this condition 

var 

cce3 

2 

Count of bytes in rgce3 

var 

rgce3 

var 

Third formula if needed 

var 

grbitCF12 

1 

see text below 

var 

ipriority 

2 

condition priority 

var 

icfTemplate 

2 

template index 

var 

cbTemplateParm 

1 

count of template bytes to follow (<=16) 

var 

rgbTemplateParm 

var 

template parameter bytes 

var 

rgbCT 

var 

type specific content follows; see text 



 
The grbitCF12 field is defined as follow: 


Bits 

Mask 

Name 

Contents 

0 

01h 

fActive 

if =1 cfvo evaluation failed so we 
don‘t want to draw this rule. 

1 

02h 

fStopIfTrue 

if =1 stop evaluating conditions 
after this rule if result is true. 

2 

04h 

(Reserved) 

Reserved; must be 0 (zero) 

3 

08h 

(Reserved) 

Reserved; must be 0 (zero) 

4 

10h 

fListCol 

if =1 rule applies to list column 

5-7 

80h 

(Reserved) 

Reserved; unused 



 
rgbCT – This structure contains conditional format type specific information, it is not 
present for ct=1 or ct=2 types. Other types are listed below: 
rgbCT when ct=3 (Gradient) 

Offset 

Name 

Size 

Contents 

0 

cbGradient 

2 

number of bytes to follow 

2 

bZero 

1 

must be zero 

3 

cInterpCurve 

1 

count of structures in rgInterp array 

4 

cGradientCurve 

1 

count of structures in rgCurve array 

5 

grbitGradient 

1 

see text below 

6 

rgInterp 

var 

array of interpolation formula structures 

var 

rgCurve 

var 

array of gradient color curve structures 



 
The grbitGradient field is defined as follow: 

Bits 

Mask 

Name 

Contents 

0 

01h 

fClamp 

Currently always =1 

1 

02h 

fBackground 

Currently always =1 

2..7 

FCh 

(Reserved) 

Reserved; must be 0 (zero) 



 
The rgInterp array interpolation formula structures are defined as follows: 

Offset 

Name 

Size 

Contents 

0 

cfvoInterp 

var 

conditional format value object 

var 

numDomain 

8 

three point linear interpolation 
domain. (Interpolation is used to 
take domain endpoints to range 
endpoints.) 



 
A conditional format value object (cfvo) has the following structure: 


Offset 

Name 

Size 

Contents 

0 

cfvotype 

1 

conditional format value type 
1 = number 
2 = min 
3 = max 
4 = percent 
5 = percentile 
6 = stddev 
7 = formula 

1 

cceFmla 

2 

count of bytes for formula 

3 

rgceFmla 

var 

formula bytes 

var 

numParmValue 

8 

only present if cceFmla = 0 



 
The rgCurve array gradient color structures are defined as follows: 

Offset 

Name 

Size 

Contents 

0 

numGRange 

8 

gradient range 

8 

xclrType 

4 

color type 

12 

xclrValue 

8 

color value – value based on color type 

30 

numTint 

8 

tint and shade value 



 
rgbCT when ct = 4 (Databar) 

Offset 

Name 

Size 

Contents 

0 

cbDataBar 

2 

number of bytes to follow 

2 

bZero 

1 

must be zero 

3 

grbitDatabar 

1 

see text below 

4 

iPercentMin 

1 

min length of data bar as % of cell width 

5 

iPercentMax 

1 

max length of data bar as % of cell width 

6 

xclrType 

4 

color type 

10 

xclrValue 

8 

color value – value based on color type 

18 

numTint 

8 

tint and shade value 

26 

cfvoDB1 

var 

cfvo – formula 1 

var 

cfvoDB2 

var 

cfvo – formula 2 



 
The grbitDatabar field is defined as follow: 

Bits 

Mask 

Name 

Contents 

0 

01h 

fRightToLeft 

direction of bar in cell 

1 

02h 

fShowValue 

if =1 show values in cell 

2..7 

FCh 

(Reserved) 

Reserved; must be 0 (zero) 



 
rgbCT when ct =5 (Filter) 

Offset 

Name 

Size 

Contents 

0 

cbFilter 

2 

number of bytes to follow 




2 

bZero 

1 

must be zero 

3 

grbitFilter 

1 

see text below 

4 

iParam 

2 

top/bottom parameter range 



 
The grbitFilter field is defined as follow: 

Bits 

Mask 

Name 

Contents 

0 

01h 

fTop 

if =1 filter top results 

1 

02h 

fPercent 

if =1 format values that are 
in the given % of the 
selected range 

2..7 

FCh 

(Reserved) 

Reserved; must be 0 (zero) 



 
rgbCT when ct = 6 (Multistate/KPI) 

Offset 

Name 

Size 

Contents 

0 

cbMulti 

2 

number of bytes to follow 

2 

bZero 

1 

must be zero 

3 

csStates 

1 

count of structures in rgStates 
array 

4 

iIconSet 

1 

index of icon set to use 
0 = 3 Arrows 
1 = 3 Arrows Gray 
2 = 3 Flags 
3 = 3 Traffic Lights 1 
4 = 3 Traffic Lights 2 
5 = 3 Signs 
6 = 3 Symbols 
7 = 3 Symbols 2 
8 = 4 Arrows 
9 = 4 Arrows Gray 
10 = 4 Red To Black 
11 = 4 Rating 
12 = 4 Traffic Lights 
13 = 5 Arrows 
14 = 5 Arrows Gray 
15 = 5 Rating 
16 = 5 Quarters 

5 

grbitMulti 

1 

see text below 

6 

rgStates 

var 

array of state structures 



 
The grbitMulti field is defined as follow: 

Bits 

Mask 

Name 

Contents 

0 

01h 

fIconOnly 

if =1 show icon only in cell 

1 

02h 

(Reserved) 

must be 0 

2 

04h 

fReverse 

if =1 reverse icon order 




Bits 

Mask 

Name 

Contents 

3..7 

F8h 

(Reserved) 

reserved; must be 0 (zero) 



 
The rgStates array contains structures with the following format: 

Offset 

Name 

Size 

Contents 

0 

cfvo 

var 

conditional format value object 

var 

fEqual 

1 

if =1 then use icon if .>=. 

var 

(Reserved) 

4 

Not used 



CFEX: Conditional Formatting Extension (87Bh) 

This FRT record saves conditional format condition information that is new for Office 
Excel 2007. This information is used on load to round trip conditional formatting that 
was not supported in previous versions. 


Offset 

Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the 
first two bytes of the record; =087Bh 

6 

grbitFrt 

2 

FRT cell reference flag; =0 currently 

8 

(Reserved) 

8 

Currently not used, and set to 0 

16 

fIsCF12 

4 

if non-zero this is an Office Excel 2007-
specific CF 

20 

nID 

2 

Unique ID of parent CONDFMT 

22 

rgbExt 

var 

only present if fIsCF12 = 0 



 
rgbExt – For conditions that have been already written out as CF records, this 
structure will contain the information needed to restore new for Office Excel 2007 
capabilities. 

Offset 

Name 

Size 

Contents 

0 

icfNon12 

2 

index of this condition out of all the non-
Office-Excel-2007-specific conditions of 
the parent conditional format 

2 

cp 

1 

Conditional formatting operator 

3 

icfTemplate 

1 

template index 

4 

ipriority 

2 

condition priority 

6 

grbitCFEX 

1 

see text below 

7 

fHasDxf 

1 

=1 if dxf structure follows 

8 

rgbdxf 

var 

only present if fHasDxf=1 

var 

cbTemplateParm 

1 

count of template bytes (<=16) 

var 

rgbTemplateParm 

var 

template parameter bytes 



 
The grbitCFEX field is defined as follow: 

Bits 

Mask 

Name 

Contents 

0 

0001h 

fActive 

if =1 cfvo evaluation failed so we don‘t 
want to draw this rule. 




Bits 

Mask 

Name 

Contents 

1 

0002h 

fStopIfTrue 

if =1 stop evaluating conditions after 
this rule if result is true. 

2 

0004h 

(Reserved) 

Reserved; must be 0 (zero) 

3 

0008h 

fListCol 

if =1 rule applies to list column 



 
Note: if the parent conditional format is a filter type format (ct=5) then 
rgbTemplateParm contains the following content: 

Offset 

Name 

Size 

Contents 

0 

grbitFilter 

1 

see text 

1 

iParam 

2 

filter parameter value 

3 

(Reserved) 

13 

Reserved; must be 0 (zero) 



 
The grbitFilter field is defined as follow: 

Bits 

Mask 

Name 

Contents 

0 

01h 

fTop 

if =1 filter top results 

1 

02h 

fPercent 

if =1 format values that are in the 
given % of the selected range 

3..7 

FCh 

(Reserved) 

Reserved; must be 0 (zero) 



CODENAME: VBE Object Name (42h) 

The CODENAME record stores the name for a worksheet object. It is not necessarily 
the same name seen in the workbook sheet tab. It is the name seen in the VBE 
project window for the worksheet. 
Record Data — BIFF8 

Offset 

Field Name 

Size 

Contents 

4 

stCodeName 

var 

The name as a Unicode String. 



 

CODEPAGE: Default Code Page (42h) 

The CODEPAGE record stores the default code page (character set) used when the 
workbook was saved. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

cv 

2 

Code page the file is saved in: 
01B5h (437 dec.) = IBM PC (Multiplan) 
8000h (32768 dec.) = Apple Macintosh 
04E4h (1252 dec.) = ANSI (Microsoft Windows) 



 

COLINFO: Column Formatting Information (7Dh) 

The COLINFO record describes the column formatting for a range of columns. 


Record Data 

Offset 

Field Name 

Size 

Contents 

4 

colFirst 

2 

First formatted column (0-based) 

6 

colLast 

2 

Last formatted column (0-based) 

8 

coldx 

2 

Column width, in 1/256s of a character width 

10 

ixfe 

2 

Index to XF record that contains the default format for 
the column. 

12 

grbit 

2 

Options 

14 

(Reserved) 

2 

Reserved; must be 0 (zero) 



 
The grbit field contains the following options: 

Offset 

Bits 

Mask 

Option Name 

Contents 

0 

0 

01h 

fHidden 

=1 if the column range is hidden 

 

7–1 

FEh 

(unused) 

 

1 

2–0 

07h 

iOutLevel 

Outline level of column range 

 

3 

08h 

(Reserved) 

Reserved; must be 0 (zero) 

 

4 

10h 

fCollapsed 

=1 if the column range is collapsed in outlining 

 

7–5 

E0h 

(Reserved) 

Reserved; must be 0 (zero) 



 

COMPAT12: Compatibility Checker 12 (88Ch) 

This record is saved by Office Excel 2007 and later versions to remember whether or not 
the compatibility checker should be called when saving to BIFF8. 


Offset 

Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the first 
two bytes of the record; =088Ch 

6 

grbitFrt 

2 

FRT cell reference flag; =0 currently 

8 

(Reserved) 

8 

Currently not used, and set to 0 

16 

fNoCompatChk 

4 

If non-zero don‘t call compatibility checker on BIFF8 
save 



 

COMPRESSPICTURES: Automatic Picture Compression 
Mode (89Bh) 

This record stores the status of the automatic picture compression mode for the 
current workbook. 

Offset 

Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in 
the first two bytes of the record; =089Bh 

6 

grbitFrt 

2 

FRT cell reference flag; =0 currently 

8 

(Reserved) 

8 

Currently not used, and set to 0 




16 

fAutoCompressPictures 

4 

=1 if pictures must be compressed for the 
current workbook. Stored as 4-byte 
integer value 



CONDFMT: Conditional Formatting Range Information 
(1B0h) 

This record stores conditional formatting range information. 
Record Data — BIFF8 

Offset 

Field Name 

Size 

Contents 

4 

ccf 

2 

Number of conditional formats 

6 

grbit 

2 

Option flags 

8 

rwFirst 

2 

First row to conditionally format (0-based) 

10 

rwLast 

2 

Last row to conditionally format (0-based) 

12 

colFirst 

2 

First column to conditionally format (0-based) 

14 

colLast 

2 

Last column to conditionally format (0-based) 

16 

rgbSqref 

var 

Array of sqref structures 



 
The grbit field contains the following options: 

Bits 

Mask 

Flag Name 

Contents 

0 

01h 

fToughRecalc 

=1 if the appearance of the cell requires significant 
processing 

15–1 

FFFEh 

nID 

an integer ID which links a CONDFMT record to 
corresponding records of type CONDFMT12 and CFEX, 
which have the same nID value 



 
The sqref structure stores a union of multiple areas on a worksheet. The sqref 
structure is: 

Offset 

Var Name 

Size 

Contents 

0 

irefMac 

2 

Number of areas that follow 

2 

reref 

var 

Array of ref structures 



 
The ref structure is: 

Offset 

Field Name 

Size 

Contents 

0 

rwFirst 

2 

First row in the reference 

2 

rwLast 

2 

Last row in the reference 

4 

colFirst 

2 

First column in the reference 

6 

colLast 

2 

Last column in the reference 



 

CONDFMT12: Conditional Formatting Range Information 12 
(879h) 

Office Excel 2007 introduced new kinds of condition types and formatting for 
conditional formats. When saving a conditional format to BIFF8, Excel will determine 
if any of the format‘s conditions can be supported by previous versions. If the 
conditional format refers to cells completely outside the Office Excel 2003 grid it will 
not be saved. If the format uses conditions or formatting that are only supported in 


Office Excel 2007 then a CONDFMT12 record will be used to persist the format 
followed by one or more CF12 records (both will be ignored by previous versions.) If 
the format contains conditions and formatting that can be supported in previous 
versions then a CONDFMT record (truncating to the smaller grid as needed) will be 
saved. The CONDFMT record will be followed by CF (1B1h) records for the non-Office 
Excel 2007 specific conditions and then CFEX (87Bh) records for conditions only 
supported by Office Excel 2007 or later. 


Offset 

Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the first 
two bytes of the record; =0879h 

6 

grbitFrt 

2 

FRT cell reference flag; =0 currently 

8 

(Reserved) 

8 

Currently not used, and set to 0 

16 

ccf 

2 

Number of CF12 records to follow 

18 

grbitCF 

2 

Option flags 

20 

rwFirst 

2 

First row to conditionally format (0-based) 

22 

rwLast 

2 

Last row to conditionally format (0-based) 

24 

colFirst 

2 

First column to conditionally format (0-based) 

26 

colLast 

2 

Last column to conditionally format (0-based) 

28 

rgbSqref 

var 

Array of sqref structures 



 
The grbitCF field is defined as follow: 

Bits 

Mask 

Name 

Contents 

0 

0001h 

fToughRecalc 

=1 if the appearance of the cell 
requires significant processing 

1..15 

FFFEh 

nID 

unique ID of this conditional format 



CONTINUE: Continues Long Records (3Ch) 

Records longer than 8,228 bytes (2,084 bytes in BIFF7 and earlier) must be split into 
several records. The first section appears in the base record; subsequent sections 
appear in CONTINUE records. 
In BIFF8, the TXO record is always followed by CONTINUE records that store the 
string data and formatting runs. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

 

var 

Continuation of record data 



 
If the continued data is a string, the CONTINUE record also has a field to indicate 
whether the string is compressed or uncompressed unicode. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

grbit 

1 

0= Compressed unicode string 
1= Uncompressed unicode string 

5 

 

var 

Continuation of record data 




CONTINUEFRT: Continued FRT (812h) 

Introduced in Excel 9 (2000) this is a FRT record. It is used to extend a FRT record 
that is larger than the maximum record size. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the first two 
bytes of the record; =0812h 

6 

grbitFrt 

2 

FRT flags; must be zero 

8 

rgb 

var 

Continued data 



 

CONTINUEFRT11: Continue FRT 11 (875h) 

Introduced in Office Excel 2003 this is a FRT record. It is used to extend a FRT 
record that is larger than the maximum record size. This record differs from the 
CONTINUEFRT with an additional ref range. This is because the limitation of Excel 
2000 on FRT causing the CONTINUEFRT to be lost, round-tripping only the parent 
FRT record. 
Hence, for all new features starting from Office Excel 2003, this CONTINUEFRT11 
must be used to write a large feat record instead of CONTINUEFRT. This ensures a 
continued record will round-trip with its FRT record through Excel 2000 and Excel 
2002. 
Special note: to ensure the record will round-trip through Excel 2000 correctly, the 
grbit field of the CONTINUEFRT11 must be zero or the Ref.colLast must not be 
equal to 0xFFFF (the limitation of Excel 2000 FRT handling). Office Excel 2003 sets 
this grbit to be 0, and the ref to be NULL. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

Rt 

2 

Record type; this matches the BIFF rt in the first two 
bytes of the record; =0875h 

6 

grbitFrt 

2 

FRT flags; 

8 

Ref 

8 

The rectangle range (see table below for bits definition) 

16 

Rgb 

var 

Continued data 



 
The grbitFrt field contains the following option flags. 

Bits 

Mask 

Flag Name 

Contents 

0 

0001h 

bitfFrtRef 

1= a REF structure is present in the FRT header 

1 

0002h 

bitfFrtVolatile 

1= Excel should give an alert when saving if 
that version doesn't recognize the FRT 

15-2 

FFFCh 

(Reserved) 

Reserved; must be zero 



 
The REF structure has the following fields. 

Offset 

Field Name 

Size 

Contents 

0 

rwFirst 

2 

The first row of the range associated with the record 

2 

rwLast 

2 

The last row of the range associated with the record 




4 

colFirst 

2 

The first column of the range associated with the record 

6 

colLast 

2 

The last column of the range associated with the record 



 

CONTINUEFRT12: Continued FRT 12 (87Fh) 

This is a FRT record. It is used to extend a FRT record that is larger than the 
maximum record size. This record is used for FRT types that are new to Office Excel 
2007, in particular: DCONN (876h), EZFILTER12 (87Eh), MDTINFO (884h), MDXSTR 
(885h), MDXTUPLE (886h), MDXSET (887h), SORTDATA12 (895h), THEME (896h), 
SHAPEPROPS (8A0h) (chart record), TEXTPROPS (8A1h) (chart record), RICHTEXT 
(8A2h) (chart record), SHAPEPROPSSTREAM (8A4h) (chart record), 
TEXTPROPSSTREAM (8A5h) (chart record), and RICHTEXTSTREAM (8A6h) (chart 
record). 

The structure of CONTINUEFRT12 (87Fh) is the same as of CONTINUEFRT (812h) 
record described elsewhere in this document. 

COORDLIST: Polygon Object Vertex Coordinates (A9h) 

This record stores the coordinates of the vertices in a polygon object. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

rgVTX 

var 

Array of vertex coordinates 



 
The VTX structure is: 
typedef struct _vtx 
{ 
unsigned short int x; 
unsigned short int y; 
} 
VTX; 
The upper-left corner of a polygon‘s bounding rectangle is (x = 0h, y = 0h), and the 
lower-right corner is (x = 4000h, y = 4000h), as shown in the following illustration. 


 After the polygon is drawn, Excel normalizes the coordinates in rgVTX to the 
bounding rectangle. The actual size of the polygon can be derived from the size of 
the bounding rectangle in the common object fields section of the OBJ record. 

COUNTRY: Default Country and WIN.INI Country (8Ch) 

This record contains localization information. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

iCountryDef 

2 

Default country index 

6 

iCountryWinIni 

2 

Country index from the Win.ini file 



 
The default country index, iCountryDef, is determined by the localized version of 
Excel that created the BIFF file. For example, all BIFF files created by the U.S. 
version of Excel have iCountryDef=1. If Microsoft Excel for Windows created the 
BIFF file, iCountryWinIni is equal to the index that corresponds to the country 
setting in the Win.ini file. Country indexes are defined in the following table. 

Index 

Country 

1 

United States 

2 

Canada 

3 

Latin America, except Brazil 

7 

Russia 

20 

Egypt 




Index 

Country 

30 

Greece 

31 

Netherlands 

32 

Belgium 

33 

France 

34 

Spain 

36 

Hungary 

39 

Italy 

41 

Switzerland 

43 

Austria 

44 

United Kingdom 

45 

Denmark 

46 

Sweden 

47 

Norway 

48 

Poland 

49 

Germany 

52 

Mexico 

55 

Brazil 

61 

Australia 

64 

New Zealand 

66 

Thailand 

81 

Japan 

82 

South Korea 

84 

Viet Nam 

86 

Mainland China 

90 

Turkey 

213 

Algeria 

216 

Morocco 

218 

Libya 

351 

Portugal 

354 

Iceland 

358 

Finland 

420 

Czech Republic 

886 

Republic of China 

961 

Lebanon 

962 

Jordan 

963 

Syria 

964 

Iraq 

965 

Kuwait 

966 

Saudi Arabia 

971 

United Arab Emirates 

972 

Israel 

974 

Qatar 

981 

Iran 



 

CRASHRECERR: Crash Recovery Error (865h) 

Introducted in Excel 10 (2002) this record is an FRT record. This BIFF record is used 
by Excel‘s crash recovery mechanism to report to the user errors detected during 
crash recovery of the workbook (BIFF file). The meaningful info in this record is the 
error message text contained in the cch and rgch fields, with possible CONTINUE 
record(s) following, if the error message text spans more than one BIFF record. 


Record Data 

Offset 

Field Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the first two 
bytes of the record; =0865h 

6 

grbitFrt 

2 

FRT flags; must be zero 

8 

(unused) 

8 

Must be zero 

16 

cb 

4 

Fixed size of this record minus 4 bytes for BIFF header 
(rt and cb), plus only 1 byte from rgch. =13h 

20 

cch 

2 

Length of the string containing error message(s); 
number of actual characters. 

22 

rgch 

var 

String containing localized text of one or more line(s) of 
crash recovery error message(s). 
(See section titled Unicode Strings in Biff8 for more 
information about Unicode encodings.) 



 

CRN: Nonresident Operands (5Ah) 

The CRN record describes nonresident operands in a formula. For example, if you 
have a worksheet with the formula =EXT.XLS!A1*A3, where EXT.XLS is not the 
active workbook, the nonresident operand EXT.XLS!A1 generates a CRN record 
describing cell A1. If the nonresident operand contains more than one row, there is 
one CRN record for each row. For example, if the formula =EXT.XLS!A1:A4*4 is an 
array-entered on a worksheet, there will be four CRN records. 
If a worksheet contains two different formulas and each formula has multiple 
nonresident operands, Excel may create one or more CRN records, depending on how 
the nonresident cells are arranged. For example, suppose a worksheet contains two 
formulas (in different cells), =EXT.XLS!A1*2 and =EXT.XLS!B1*2. Because the 
nonresident operands are in a row and are not separated by an empty cell, Excel 
creates only one CRN record containing information about cells A1 and B1. 
If, however, the formulas are =EXT.XLS!A1*2 and =EXT.XLS!C1*2, Excel creates 
two CRN records because an empty cell (B1) separates the two operands, A1 and C1. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

colLast 

1 

Last column of the nonresident operand 

5 

colFirst 

1 

First column of the nonresident operand 

6 

rw 

2 

Row of the nonresident operand 

8 

OPER 

var 

OPER structure; see the following description 



 
The OPER structure repeats for each cell in the nonresident operand. For example, 
the formula =SUM(EXT.XLS!A1:A3) produces one CRN record with three OPER 
structures. 
OPER Structure If the Cell Contains a Number 

Offset 

Field Name 

Size 

Contents 

0 

grbit 

1 

=01h for a cell that contains a number 

1 

num 

8 

IEEE floating-point number 



 


OPER Structure If the Cell Contains a String 

Offset 

Field Name 

Size 

Contents 

0 

grbit 

1 

=02h for a cell that contains a string 

1 

cch 

1 

Number of characters in the string 

2 

rgch 

var 

String 



 
OPER Structure If the Cell Contains a Boolean Value 

Offset 

Field Name 

Size 

Contents 

0 

grbit 

1 

=04h for a cell that contains a Boolean value 

1 

f 

2 

=1 if TRUE 
=0 if FALSE 

3 

(unused) 

6 

 



 
OPER Structure If the Cell Contains an Error Value 

Offset 

Field Name 

Size 

Contents 

0 

grbit 

1 

=10h for a cell that contains an error value 

1 

err 

2 

Error value 

3 

(unused) 

6 

 



 

CRTCOOPT: Color options for Chart series in Mac Office 11 
(8cbh) 

This is a Chart FRT record. It stores the series color options. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the first two 
bytes of the record; =08c9h 

6 

grbitFrt 

2 

FRT flags; must be zero 

8 

padding 

8 

Reserved; must be zero 

16 

iScheme 

4 

Color Scheme 

20 

grbit 

2 

Format flags 



 
The grbit field contains the following option flags. 

Bits 

Mask 

Flag Name 

Contents 

0 

0001h 

fShaded 

1= Vary by shade 

1 

0002h 

fGrayscale 

1= Grayscale shade 

15-2 

FFFCh 

(Reserved) 

Reserved; must be zero 



 

DATALABEXT: Chart Data Label Extension (86Ah) 

Introduced in Excel 10 (2002) this BIFF record is an FRT record for Charts. 
This record is the parent of DATALABEXTCONTENTS, but contains no other 
information. 


Record Data 

Offset 

Field Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the first two 
bytes of the record; =086Ah 

6 

grbitFrt 

2 

FRT flags; must be zero 

8 

(unused) 

8 

Reserved; must be zero 



 

DATALABEXTCONTENTS: Chart Data Label Extension 
Contents (86Bh) 

Introduced in Excel 10 (2002) this BIFF record is an FRT record for Charts. This 
record holds Chart Data Label extensions which are new for Excel 10. Specifically, it 
indicates which chart information is contained in the data labels, and the separator 
string used between parts of the data label. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the first two 
bytes of the record; =086Bh 

6 

grbitFrt 

2 

FRT flags; must be zero 

8 

(unused) 

8 

Reserved; must be zero 

16 

grbit 

2 

Option flags for chart data labels (see description 
below) 

18 

cchSep 

2 

Count of characters in the separator string 

20 

rgchSep 

var 

Separator string for use in chart data labels. 
(See section titled .Unicode Strings in Biff8‘ for more 
information about Unicode encodings.) 



 
The grbit field contains the following data label option flags: 

Bits 

Mask 

Flag Name 

Contents 

0 

0001h 

fSeriesName 

=1 if the data labels contain the series name 
=0 otherwise 

1 

0002h 

fCategoryName 

=1 if the data labels contain the category name (x-
value) 
=0 otherwise 

2 

0004h 

fValue 

=1 if the data labels contain the y-value 
=0 otherwise 

3 

0008h 

fPercent 

=1 if the data labels contain a percentage 
=0 otherwise 

4 

0010h 

fBubbleSizes 

=1 if the data labels contain bubble size 
=0 otherwise 

15-5 

FFE0h 

(unused) 

Reserved; must be zero 



 


DBCELL: Stream Offsets (D7h) 

The DBCELL record stores stream offsets for the BIFF file. There is one DBCELL 
record for each block of ROW records and associated cell records. Each block can 
contain data for up to 32 rows. For more information about the DBCELL record, see 
.Finding Cell Records in BIFF Files.. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

dbRtrw 

4 

Offset from the start of the DBCELL record to the start 
of the first ROW record in the block; this is an offset to 
an earlier position in the stream. 

8 

rgdb 

var 

Array of stream offsets (2 bytes each). 



 

DBQUERYEXT: Database Query Extensions (803h) 

Introduced in Excel 9 (2000) this is a FRT record. It contains extensions to the 
DBQUERY record. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF 
rt in the first two bytes of the 
record; =0803h 

6 

grbitFrt 

2 

FRT flags; must be zero 

8 

dbt 

2 

The database type; this overrides 
the value of dbt in the SXEXT 
record 
1= ODBC data source 
2= DAO recordset 
4= Web Query 
XL9: 5= OLE database 
XL9: 6= Text query 
XL9: 7= ADO query 
XL10: 8= (reserved) 
XL11: 9= Data retrieval service 

10 

grbitDbquery 

4 

DB Query options; see following 
table 

14 

grbitExt 

2 

Extended options; see following 
table 

16 

bVerDbqueryEdit 

1 

The last version of Excel that edited 
the query 
0= Excel 2000 
1= Excel XP 
2= Office Excel 2003 
3=Office Excel 2007 

17 

bVerdbqueryRefreshed 

1 

The last version of Excel that 
refreshed the query (see 
bVerDbqueryEdit for values) 




Offset 

Field Name 

Size 

Contents 

18 

bVerDbqueryRefreshableMin 

1 

The oldest version of Excel that is 
enabled to refresh the query (see 
bVerDbqueryEdit for values) 

19 

(Reserved) 

3 

Reserved; must be zero 

22 

coledb 

2 

Count of OLE DB connection strings; 
each is saved as an OLEDBCONN 
record immediately following the 
DBQUERYEXT record 

24 

cstFuture 

2 

Count of strings from future versions 
of Excel; each is saved as an 
EXTSTRING record immediately 
following the OLEDBCONN records 

26 

wRefreshInterval 

2 

0= Timed refresh is off for this 
query; any other value is the time 
between refreshes measured in 
minutes 

28 

wHtmlFormat 

2 

HTML formatting to apply to the 
imported data for a Web Query; 
1= None 
2= Rich Text Formatting 
3= Full HTML formatting 

30 

cwParamFlags 

2 

Count of pbt flag sets in rgpbt; 
these override the flags from the 
PARAMQRY record 

32 

rgpbt 

var 

Array of pbt flags; each is 2 bytes; 
see following table 

var 

rgbFuture 

var 

Information from future versions of 
Excel 



 
The grbitDbquery field contains the following option flags: 

Offset 

Bits 

Mask 

Flag Name 

Contents 

0 

0 

01h 

fMaintain 

1= Maintain connection to data source 

 

1 

02h 

(Reserved) 

 

 

2 

04h 

fImportXMLSource 

XL10: 1= the query source is XML 

 

3 

08h 

fListSrc 

XL11: 1= the query source is a 
SharePoint list 

 

4 

10h 

fListReinitCache 

XL11: 1= if reinitializing rather than 
refreshing 

 

6-5 

60h 

ExcelOption 

XL11: ExcelOption from List App: 
0= None 
1= Print 
2= Chart 
3= PivotTable 

 

7 

80h 

fSrcIsXML 

XL11: 1= if the source is XML or XSD 




Offset 

Bits 

Mask 

Flag Name 

Contents 

 

7-4 

F0h 

(Reserved) 

 

1 

7-0 

FFh 

(Reserved) 

 

2 

7-0 

FFh 

grbitVar 

Query type-specific bitflags for OLEDB 
queries and Web queries; see following 
table 

3 

7-0 

FFh 

grbitVar2 

Query type-specific bitflags; see text 
below 



 
If the query is an OLEDB query, the grbitVar field has the following option flags: 

Bits 

Mask 

Flag Name 

Contents 

2-0 

07h 

dbost 

OLEDB Command Type; this specifies the context 
for the strings in the SXEXT record 
1= OLAP command; the string is a Cube name 
2= SQL string; use the SQL guid 
3= the string is a Table name 
4= CommandText string; use the default guid; 
this command is executed by the OLEDB provider 
XL11: 5= the string is an XML fragment 
specifying a SharePoint list and view 

3 

08h 

fLocalConn 

0= Refresh from source 
1= Use the local connection when refreshing 

4 

10h 

fNoRefreshCube 

0= Refresh cube in an OLAP PivotTable 
1= Refresh from the local cube in an OLAP 
PivotTable; Excel 2000 always writes 0 

5 

20h 

fUseOfficeLcid 

1=Send user‘s UI locale to Analysis Services 
server on connection. Used for AS member 
translation feature (OLAP only) 

6 

40h 

fSrvFmtNum 

1=Apply server number formatting (OLAP only) 

7 

80h 

fSrvFmtBack 

1=Apply server background color (OLAP only) 

 

 

 

 



 
If the query is a Web query, the grbitVar field contains the following option flags: 

Bits 

Mask 

Flag Name 

Contents 

0 

01h 

fParsePreFormatted 

0= each row of text enclosed in <PRE> tags 
will be imported to a single cell 
1= text enclosed in <PRE> tags will be parsed 
as tables 

1 

02h 

fConsecDelim 

Must be zero if fParsePreFormatted is 0 
0= treat each consecutive delimiter as a 
separate delimiter 
1= treat all consecutive delimiters as one 




Bits 

Mask 

Flag Name 

Contents 

2 

04h 

fSameSettings 

Must be zero if fParsePreFormatted is 0 
0= parse each table inside <PRE> tags 
separately 
1= parse all tables inside a <PRE> block with 
the same width settings as the first row 

3 

08h 

fXL97 

0= Excel 2000 or later web query 
1= Excel 97 web query 

4 

10h 

fNoDateRecog 

0= import dates as date data type 
1= import dates as text 

5 

20h 

fRefreshedInXl9 

1= This query was refreshed in Excel 2000 

7-6 

C0h 

(Reserved) 

Reserved; must be zero 



 
For OLAP connections, the grbitVar2 field has the following option flags: 

Bits 

Mask 

Flag Name 

Contents 

0 

01h 

fSrvFmtFore 

1=Apply server foreground color 

1 

02h 

fSrvFmtFlags 

1= Apply server font formatting 

2 

04h 

fSupportsLangCellProp 

1=Server supports querying for language 
property so that cells can be formatted 
using currency number format sent by the 
server. 

7-3 

F8h 

(Reserved) 

Reserved; must be zero 



 
For non-OLAP connections, the grbitVar2 field contains the following option flags: 

Bits 

Mask 

Flag Name 

Contents 

0 

01h 

fAdoRefreshable 

Must be zero if query type is not ADO 
1= the ADO query can be refreshed 

7-1 

FEh 

(Reserved) 

 



 
The grbitExt field contains the option flags listed in the following table. 

Bits 

Mask 

Flag Name 

Contents 

0 

0001h 

fTextWiz 

1= this is a refreshable text query 

1 

0002h 

fTableNames 

This is always 0 for any non-Web query 
1= The tables to import are specified by name in the 
string contained in the ExtString record following 
the DBQUERYEXT record 

15-2 

FFFCh 

(Reserved) 

Reserved; must be zero 



 
The rgpbt fields each contain the following option flags: 


Bits 

Mask 

Flag Name 

Contents 

2-0 

0007h 

pbt 

0= prompt for parameter on refresh of query 
1= use stored value for the parameter 
2= use the value from a cell 

3 

0008h 

fAutoRefresh 

0= do not refresh automatically when the cell value 
changes 
1= refresh the query when the cell value changes. 
Must be 0 if pbt is not =2 

15-4 

FFF0h 

(Reserved) 

Reserved; must be zero 



 

DCON: Data Consolidation Information (50h) 

The DCON record stores options from the Consolidate dialog box (Data menu). 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

iiftab 

2 

Index to the data consolidation function (see the 
following table) 

6 

fLeftCat 

2 

=1 if the Left Column option is turned on 

8 

fTopCat 

2 

=1 if the Top Row option is turned on 

10 

fLinkConsol 

2 

=1 if the Create Links To Source Data option is 
turned on 



 
The iiftab field, described in the following table, corresponds to the Function 
option in the Consolidate dialog box (Data menu). 

Function 

Iiftab 

Average 

0 

Count Nums 

1 

Count 

2 

Max 

3 

Min 

4 

Product 

5 

StdDev 

6 

StdDevp 

7 

Sum 

8 

Var 

9 

Varp 

10 



 

DCONBIN: Data Consolidation Information (1B5h) 

The DCONBIN record stores a data consolidation reference. DCONBIN is identical to 
DCONNAME, except that DCONBIN is used when the data consolidation reference 
refers to a built-in name (as described by a NAME record). The stFile field contains 
an encoded workbook name. For more information about this field, see 
.EXTERNSHEET.. 


Record Data — BIFF8 

Offset 

Field Name 

Size 

Contents 

4 

cchName 

1 

Length of the named range of the source area 

5 

stName 

var 

Named range of the source area for consolidation 

var 

cchFile 

1 

Length of the workbook name 

var 

stFile 

var 

Workbook name 



 

DCONN: Data Connection (876h) 

This record is used by Office Excel 2007 and later to store information for data 
connection. 
Record Data — BIFF8 only 

Offset 

Name 

Size 

Contents 

4 

Rt 

2 

Record type; this matches the BIFF rt in the 
first two bytes of the record; =0876h 

6 

grbitFrt 

2 

FRT cell reference flag; =0 currently 

8 

Dbt 

2 

Database source types (see below for details) 

10 

Grbit 

2 

Connection flags (see below for details) 

12 

Cparams 

2 

The number of parameters for parameterized 
queries 

14 

(Reserved) 

2 

Currently not used, and set to 0 

16 

grbitDbquery 

2 

Query flags (see below for details) 

18 

grbitDbt 

2 

Query flags specific to the dbt (see below for 
details) 

20 

bVerDbqueryEdit 

1 

The Excel query version that was last used to 
edit the query. 
One of the following version numbers: 
=0 Excel 9 (2000) and earlier 
=1 Excel 10 (XP) 
=2 Excel 11 (2003) 
=3 Excel 12 (2007) 

21 

bVerDbqueryRefreshed 

1 

The Excel query version that last refreshed the 
query. 
One of the following version numbers: 
=0 Excel 9 (2000) and earlier 
=1 Excel 10 (XP) 
=2 Excel 11 (2003) 
=3 Excel 12 (2007) 

22 

bVerDbqueryRefreshableMin 

1 

Minimum Excel query version required to 
refresh the query. 
One of the following version numbers: 
=0 Excel 9 (2000) and earlier 
=1 Excel 10 (XP) 
=2 Excel 11 (2003) 
=3 Excel 12 (2007) 




23 

wRefreshInterval 

2 

How many minutes to wait between automatic 
refreshes of the query 

25 

wHTMLFmt 

2 

How to handle formatting from the HTML 
source (see below for details) 

27 

Rcc 

4 

Reconnection method: 
=0 As required - On refresh use the existing 
connection information and if it ends up being 
invalid then get updated connection 
information, if available 
=1 Always - On every refresh get updated 
connection information, if available, and use 
that instead of the existing connection 
information 
=2 Never - Never get updated reconnection 
information even if it is available and even if 
the existing connection information is invalid 

31 

credMethod 

1 

Reconnection method (see below for details) 

32 

(Reserved) 

1 

Currently not used, and set to 0 

 
Note: from the following variable length field onward the stream of fields will be broken apart and 
continued by CONTINUEFRT12 (87Fh) BIFF8 records as required by the maximum BIFF8 record 
size limit. 


33 

rgchSourceDataFile 

var 

Database file to try and reconnect to if use of 
existing OLE DB connection fails (see below for 
details on these variable length strings) 

var 

rgchSourceConnectionFile 

var 

Connection (ODC) file to try and re-read if use 
of existing connection fails (see below for 
details on these variable length strings) 

var 

rgchConnectionName 

var 

Name of the workbook connection (see below 
for details on these variable length strings) 

var 

rgchConnectionDesc 

var 

User description for the workbook connection 
(see below for details on these variable length 
strings) 

var 

rgchSSOApplicationID 

var 

Single Sign On ID string (see below for details 
on these variable length strings) 

var 

rgchTableNames 

var 

Comma-separated list of table names. Only 
present when fTableNames flag in grbit 
field (see below) is =1 (see below for details 
on these variable length strings) 

var 

rgbParameter 

var 

Only present when cparams is not zero and 
fStandAlone is one. 
rgbParameter will occur cparams times and 
each describes a parameter for a 
parameterized query (see below for details) 

var 

rgbConnection 

var 

Connection data specific to the dbt (see below 
for details) 




var 

rgbSQL 

var 

Sequence of strings representing a SQL 
statement for an ODBC-based source (see 
below for details on these sequence of strings) 

var 

rgbSQLSav 

var 

Sequence of strings representing the original 
(non-parameterized) SQL statement for an 
ODBC-based source for a PivotTable using 
server-based page fields (see below for details 
on these sequence of strings) 

var 

rgbEditWebPage 

var 

Sequence of strings representing the URL for 
the web query edit query dialog (see below for 
details on these sequence of strings) 

var 

rgbID 

var 

ID of the Excel object that the connection is 
associated with (see below for details) 



 
The dbt field contains one of the following values: 

dbt 

Database source type 

00h 

No type specified 

01h 

ODBC-based source 

02h 

DAO-based source 

03h 

Access generated this source 

04h 

Web query 

05h 

OLEDB-based source 

06h 

Text-based source created via the Text Import Wizard 

07h 

ADO record set 

08h 

Reserved 

09h 

DSP 



 
The grbit field contains the following connection flags: 

Offset 

Bits 

Mask 

Name 

Contents 

0 

0 

0001h 

fSavePwd 

=1 if password is cached/saved for this 
connection 

 

1 

0002h 

fTablesOnlyHTML 

=1 if web queries should only work on 
HTML tables 

 

2 

0004h 

fTableNames 

=1 if there are any tables to use 

 

3 

0008h 

fDeleted 

=1 if the associated workbook 
connection has been deleted 

 

4 

0010h 

fStandAlone 

=1 if the connection is not currently in 
use by any Excel feature 

 

5 

0020h 

fAlwaysUseConnectionFile 

=1 indicates whether when the 
connection is refreshed we should 
always and only use the connection 
information in the connection file. 
Applies only to OLE DB and ODBC 




 

6 

0040h 

fBackgroundQuery 

=1 if the connection should be 
refreshed in the background 
(asynchronously) 

 

7 

0080h 

fRefreshOnLoad 

=1 if the connection should be 
refreshed at the end of file load 

 

8 

0100h 

fSaveData 

=1 if the supporting data/records for 
the connection get saved 

 

9-15 

FE00h 

(Reserved) 

Currently not used, and set to 0 



 
The grbitDbquery field contains the following option flags: 

Offset 

Bits 

Mask 

Name 

Contents 

0 

0 

0001h 

fMaintain 

=1 if the connection with the 
database should be kept open 
once established 

 

1 

0002h 

fNewQuery 

=1 if the connection has not been 
refreshed for the first time 

 

2 

0004h 

fImportXMLSource 

=1 if import underlying XML 
Source 

 

3 

0008h 

fSPListSrc 

=1 if and only if the query is using 
the SharePoint List Provider 

 

4 

0010h 

fSPListReinitCache 

=1 if reinitializing rather than 
refreshing 

 

5-6 

0060h 

ExcelOption 

ExcelOption from List App: 
0=None 
1=Print 
2=Chart 
3=PivotTable 

 

7 

0080h 

fSrcIsXML 

=1 if and only if the source is XML 
or XSD 

 

8-15 

FF00h 

(Reserved) 

Currently not used, and set to 0 



 
grbitDbt Variant: dbt = 04h (web query) contains the following option flags: 

Offset 

Bits 

Mask 

Name 

Contents 

0 

0 

0001h 

fParsePreFormatted 

=1 if text enclosed in <PRE> tags will be 
parsed as tables 
=0 if each row of text enclosed in <PRE> 
tags will be imported as a single cell 




 

1 

0002h 

fConsecDelim 

Must be zero if fParsePreFormatted is 0 
=1 if consecutive delimiters should be 
treated as just one delimiter 
=0 if each consecutive delimiters should 
be treated as a separate delimiter 

 

2 

0004h 

fSameSettings 

Must be zero if fParsePreFormatted is 0 
=1 if all tables inside a <PRE> block 
should be parsed with the same width 
settings as the first row 
=0 if each table inside a <PRE> block 
should be parsed separately 

 

3 

0008h 

fXL97Format 

=1 if the query was created by Excel 97 
=0 if the query was created by Excel 
2000 or later 

 

4 

0010h 

fNoDateRecog 

=1 if dates should be imported as text 
=0 if dates should be imported as date 
data type 

 

5 

0020h 

fRefreshedInXl9 

=1 if the query was refreshed in Excel 
2000 

 

6-15 

FFC0h 

(Reserved) 

Currently not used, and set to 0 



 
grbitDbt Variant: dbt = 05h (OLEDB-based source) contains the following option 
flags: 

Offset 

Bits 

Mask 

Name 

Contents 

0 

0-2 

0007h 

dbost 

OLEDB Command Type: 
0=Has not been defined yet 
1=OLAP command; a cube name 
2=SQL string; the SQL guid 
3=Table name 
4=CommandText string; the default guid 
5=SharePoint List Query; an XML 
fragment specifying a SharePoint list and 
view 

 

3 

0008h 

fLocalConn 

=1 if use the local connection when 
refreshing. Only valid for OLAP 
=0 if refresh from the source 

 

4 

0010h 

fNoRefreshCube 

=1 if refresh from the local cube. 
=0 if refresh cube. 
Only valid for OLAP 




 

5 

0020h 

fUseOfficeLcid 

=1 if Excel needs to set the Microsoft 
Office UI locale on the connection. Only 
valid for OLAP 

 

6 

0040h 

fSrvFmtNum 

=1 if a PivotTable based on OLAP source 
should format the data and aggregate 
cells in the PivotTable view using the 
number format from the OLAP source 

 

7 

0080h 

fSrvFmtBack 

=1 if a PivotTable based on OLAP source 
should format the data and aggregate 
cells in the PivotTable view using the 
background color from the OLAP source 

 

8 

0100h 

fSrvFmtFore 

=1 if a PivotTable based on OLAP source 
should format the data and aggregate 
cells in the PivotTable view using the 
font color from the OLAP source 

 

9 

0200h 

fSrvFmtFlags 

=1 if a PivotTable based on OLAP source 
should format the data and aggregate 
cells in the PivotTable view using the 
font style from the OLAP source 

 

10 

0400h 

fSupportsLangCellProp 

=1 if Excel should send the Microsoft 
Office UI locale to the OLAP provider to 
support AS member localization 

 

11-15 

F800h 

(Reserved) 

Currently not used, and set to 0 



 
grbitDbt Variant: dbt = 07h (ADO record set) contains the following option flags: 

Offset 

Bits 

Mask 

Name 

Contents 

0 

0-7 

00FFh 

(Reserved) 

Currently not used, and set to 0 

 

8 

0100h 

fAdoRefreshable 

=1 if the ADO query can be refreshed 

 

9-15 

FE00h 

(Reserved) 

Currently not used, and set to 0 



 
The wHTMLFmt field determines the HTML formatting to apply to the imported data 
for a Web Query: 

wHTMLFmt 

Preserved formatting 

01h 

None 

02h 

Rich text formatting only 

03h 

Full HTML formatting 



 
The credMethod is one of the following values: 

credMethod 

Reconnection method 

00h 

Integrated authentication 

01h 

Use no credentials at all 

02h 

Use stored credentials 




03h 

Prompt for credentials 



 
Note: DCONN (876h) record and possible succeeding CONTINUEFRT12 (87Fh) records 
might be followed up by one or more SXADDL12 (881h) records that are created by 
Excel 14 or newer. The content of these records is not currently defined. 
The rgbParameter is organized as follows: 

Offset 

Name 

Size 

Contents 

0 

rgchName 

var 

Name of the parameter (see below for details 
on these variable length strings) 

var 

wParamFlags 

2 

Option flags (see below for details) 

var 

wTypeSql 

2 

Used for ODBC queries; the parameter SQL 
type 

var 

wParamFlags2 

2 

Option flags (see below for details) 

var 

rgbBinding 

var 

Parameter .value. specific to the pbt (see 
below for details) 



 
The wParamFlags (query parameter flags) is as follows: 

Offset 

Bits 

Mask 

Name 

Contents 

0 

0-2 

0007h 

pbt 

Parameter type: 
=0 Prompt 
=1 Value 

 

3-15 

FFF8h 

(Reserved) 

Currently not used, and set to 0 



 
The wParamFlags2 (query parameter flags) is as follows: 

Offset 

Bits 

Mask 

Name 

Contents 

0 

0 

0001h 

fDefaultName 

=1 if a default name has been assigned to 
the parameter 
=0 if the user has specified a name for the 
parameter 

 

2-15 

FFFEh 

(Reserved) 

Currently not used, and set to 0 



 
rgbBinding Variant: pbt = 00h (prompt) is organized as follows: 

Offset 

Name 

Size 

Contents 

0 

rgchPrompt 

var 

Prompt string for the parameter value (see 
below for details on these variable length 
strings) 



 
rgbBinding Variant: pbt = 01h (value) is organized as follows: 


Offset 

Name 

Size 

Contents 

0 

wBindingValueType 

2 

Data type of the binding value: 
=01h Number 
=02h String 
=04h Boolean 
=0800h Integer 

2 

rgbBindingValue 

var 

Parameter value data specific to the 
wBindingValueType (see below for details) 



 
rgbBindingValue Variant: wBindingValueType = 01h (number) is organized as 
follows: 

Offset 

Name 

Size 

Contents 

0 

numVal 

8 

The binding numeric value. 



 
rgbBindingValue Variant: wBindingValueType = 02h (string) is organized as 
follows: 

Offset 

Name 

Size 

Contents 

0 

rgchVal 

var 

The binding string value (see below for details 
on these variable length strings) 



 
rgbBindingValue Variant: wBindingValueType = 04h (Boolean) is organized as 
follows: 

Offset 

Name 

Size 

Contents 

0 

fVal 

1 

The binding Boolean value. 

1 

(Reserved) 

7 

Currently not used, and set to 0 



 
rgbBindingValue Variant: wBindingValueType = 0800h (integer) is organized 
as follows: 

Offset 

Name 

Size 

Contents 

0 

lVal 

4 

The binding integer value. 

4 

(Reserved) 

4 

Currently not used, and set to 0 



 
rgbConnection Variant: dbt = 01h (ODBC-based source) is organized as follows: 

Offset 

Name 

Size 

Contents 

0 

rgchConnection 

var 

The connection string (see below for details on 
these variable length strings) 



 
rgbConnection Variant: dbt = 04h (web query) is organized as follows: 

Offset 

Name 

Size 

Contents 

0 

rgbURL 

var 

Sequence of strings representing the URL for a 
web query (see below for details on these 
sequence of strings) 




var 

rgbWebPost 

var 

Sequence of strings representing the post 
method for a web query (see below for details 
on these sequence of strings) 



 
rgbConnection Variant: dbt = 05h (OLEDB-based source) is organized as follows: 

Offset 

Name 

Size 

Contents 

0 

nDrillthroughRows 

4 

An unsigned int representing the number of 
drillthrough rows 

4 

coledb 

2 

Can only be non-zero if fStandAlone = 1. 
An unsigned int representing the number of 
connection strings associated with the OLEDB 
connection. Valid range is 0 to 4 inclusive. 

6 

rgioledb 

var 

An array of unsigned ints (2 bytes) of count 
coledb where each element holds the index of 
the connection string in the uncompacted 
array. 

var 

rgConn 

var 

An array of strings of count coledb where each 
element holds a string (see below for details 
on these variable length strings) 



 
rgbConnection Variant: dbt = 06h (Text-based source created via the Text Import 
Wizard) is organized as follows: 

Offset 

Name 

Size 

Contents 

0 

rt 

2 

Record type; =0805h 

2 

grbitFrt 

2 

FRT flags; must be zero 

4 

grbit 

2 

Options; see following table 

6 

rowStartAt 

4 

Row in source file where the query information starts 

10 

delimFlags 

4 

Delimiter flags; see following table 

14 

itwf 

4 

Fields in each row of data 

15 

chDecimal 

1 

ANSI character; which character is used for the 
decimal separator 

16 

chThousSep 

1 

ANSI character, which character is used for the 
thousands separator 

17 

rgtxtwf 

var 

Array of itwf TXTWF structures (see below) 

var 

rgchFile 

var 

Name of the text file that is the source for the query 



 
The grbit field contains following option flags. 

Bits 

Mask 

Name 

Contents 

0 

0001h 

(Reserved) 

Reserved; must be one 

1 

0002h 

fDelimited 

0= The data fields are of fixed size 
1= The data is delimited 




3-2 

000Ch 

iCpid 

File Origin; 
1= Macintosh 
2= Windows (ANSI) 
3= MS-DOS (PC-8) 

4 

0010h 

fPromptForFile 

0= Refresh data from saved file location 
1= Browse for a file to open when refreshing 

14-5 

7FE0h 

iCpidNew 

XL10: File's original codepage 

15 

8000h 

fUseNewiCpid 

XL10: 1= use iCpidNew (iCpid set to 2) 



 
The delimFlags field contains following option flags. 

Offset 

Bits 

Mask 

Name 

Contents 

0 

0 

01h 

fTab 

1= Treat the tab character as a field delimiter 

 

1 

02h 

fSpace 

1= Treat the space character as a field 
delimiter 

 

2 

04h 

fComma 

1= Treat the comma character as a field 
delimiter 

 

3 

08h 

fSemiColon 

1= Treat the semicolon character as a field 
delimiter 

 

4 

10h 

fCustom 

1= Use the custom delimiter character 
specified in the chCustom field 

 

5 

20h 

fConsective 

0= Consecutive delimiters are all treated as 
separate delimiters 
1= Consecutive delimiters are treated as one 
delimiter 

 

7-6 

C0h 

iTextDelm 

Text delimiter; 
0= Quotation mark 
1= Apostrophe 
2-3= No text delimiter 

2-1 

15-0 

FFFFh 

chCustom 

Custom text delimiter character 

3 

7-0 

FFh 

(Reserved) 

Reserved; must be zero 



 
The TXTWF structure is shown in the following table. 

Offset 

Name 

Size 

Contents 

0 

fieldType 

4 

Field data type: 
=00h, Automatic 
=01h, Text 
=02h, Date in the order month, day then year 
=03h, Date in the order day, month then year 
=04h, Date in the order year, month then day 
=05h, Date in the order month, year then day 
=06h, Date in the order day, year then month 
=07h, Date in the order year, day then month 
=08h, Skip importing this field 




4 

fieldStart 

4 

The character position (zero-based) this field starts at if 
delimiters are not being used to determine where fields 
start and end 



 
The rgbID is organized as follows: 

Offset 

Name 

Size 

Contents 

0 

btype 

1 

ID type: 
=0 No associated object 
=1 Index (or numeric ID) of associated object 
=2 Name of associated object 

1 

rgbIDValue 

2 

Value of the ID specific to the btype (see 
below for details) 



 
rgbIDValue Variant: btype = 0 (no associated object) is organized as follows: 

Offset 

Name 

Size 

Contents 

0 

(Empty) 

0 

 



 
rgbIDValue Variant: btype = 1 (index of associated object) is organized as 
follows: 

Offset 

Name 

Size 

Contents 

0 

wID 

2 

An unsigned int representing the ID or index of 
the associated object 



 
rgbIDValue Variant: btype = 2 (name of associated object) is organized as 
follows: 

Offset 

Name 

Size 

Contents 

0 

rgchID 

var 

Name of the associated object (see below for 
details on these variable length strings) 



 
The sequence of strings (used for rgbSQL, rgbSQLSav, etc.) are organized as 
follows: 

Offset 

Name 

Size 

Contents 

0 

cst 

2 

An unsigned int representing the number of 
complete strings that are saved 

2 

rgst 

var 

An array of strings of count cst where each 
element holds a string (see below for details 
on these variable length strings) 



 
The variable length strings (used for rgchSourceDataFile, rgchSource-
ConnectionFile, etc.) are organized as follows: 


Offset 

Name 

Size 

Contents 

0 

cchTotal 

4 

An unsigned int representing the length of the 
saved string in characters 

4 

cchPartial 

2 

An unsigned int representing the length of the 
immediately following string segment 

6 

rgbPartial 

var 

The string segment using Unicode encoding. 
(See section titled Unicode Strings in Biff8 for 
more information about these encodings.) 

var 

rgbRemainder 

var 

Repeated cchPartial-rgbPartial pairs sufficient 
times to save the entire string 



DCONNAME: Data Consolidation Named References (52h) 

The DCONNAME record contains the complete description of a named range of cells for 
the Consolidate command (Data menu). The stFile field contains an encoded 
workbook name. For more information about this field, see .EXTERNSHEET.. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

cchName 

1 

Length of the named range of the source area 

5 

stName 

var 

Named range of the source area for consolidation 

var 

cchFile 

1 

Length of the workbook name 

var 

stFile 

var 

Workbook name 



 

DCONREF: Data Consolidation References (51h) 

The DCONREF record contains the complete description of a range of cells for the 
Consolidate command (Data menu). The rgch field contains an encoded workbook 
name. For more information about this field, see .EXTERNSHEET.. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

rwFirst 

2 

First row of the source area for consolidation 

6 

rwLast 

2 

Last row of the source area for consolidation 

8 

colFirst 

1 

First column of the source area for consolidation 

9 

colLast 

1 

Last column of the source area for consolidation 

10 

cch 

1 

Length of the workbook name 

11 

rgch 

1 

Workbook name 



 

DEFAULTROWHEIGHT: Default Row Height (225h) 

The DEFAULTROWHEIGHT record specifies the height of all undefined rows on the 
sheet. The miyRw field contains the row height in units of 1/20th of a point. This 
record does not affect the row height of any rows that are explicitly defined. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

grbit 

2 

Option flags (see the following table) 

6 

miyRw 

2 

Default row height 



 
The grbit field contains the following option flags: 


Offset 

Bits 

Mask 

Flag Name 

Contents 

0 

0 

01h 

fUnsynced 

=1 if all undefined rows have incompatible 
font height and row height 

 

1 

02h 

fDyZero 

=1 if all undefined rows have 0 (zero) height 

 

2 

04h 

fExAsc 

=1 if all undefined rows have an extra space 
above 

 

3 

08h 

fExDsc 

=1 if all undefined rows have an extra space 
below 

 

7–4 

F0h 

(Unused) 

 

1 

7–0 

FFh 

(Unused) 

 



 

DEFCOLWIDTH: Default Width for Columns (55h) 

The DEFCOLWIDTH record specifies the width, measured in characters, for columns 
not explicitly sized in the COLWIDTH record. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

cchdefColWidth 

2 

Default width of the columns 



 

DELMENU: Menu Deletion (C3h) 

The DELMENU record stores a menu deletion and is very similar to the ADDMENU 
record. For more information about menu system modification, see .ADDMENU.. 
If fDelete is true (equal to 01h), the menu object is deleted at this level of the 
hierarchy. For example, if fDelete is true in the second DELMENU record of the 
group, Excel deletes the specified menu from a menu bar. If fDelete is false (equal 
to 00h), the record is a placeholder, and one of the following DELMENU records in the 
group will define the menu deletion. 
For menu items and submenu items, the icetabItem field stores the index to the 
deleted command if the item is attached to a built-in command. If icetabItem 
equals FFFFh, the stItem string from the rgch field is used instead. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

icetabItem 

2 

icetab of the command 

6 

cditm 

1 

Number of DELMENU records at the next level of the 
menu hierarchy 

7 

fDelete 

1 

=1, delete this menu object 
=0, this is a placeholder record 

8 

fMultiple 

1 

=1 if this item has subitems 

9 

rgch 

var 

stItem (see text) 



 
The first byte of the stItem string is the byte count, and the last byte is reserved. 

DELTA: Iteration Increment (10h) 

The DELTA record stores the Maximum Change value from the Options dialog box, 
Calculation tab. The number is in 8-byte IEEE floating-point format. 


Record Data 

Offset 

Field Name 

Size 

Contents 

4 

numDelta 

8 

Maximum iteration change 



 

DIMENSIONS: Cell Table Size (200h) 

The DIMENSIONS record contains the minimum and maximum bounds of the sheet. 
It provides a concise indication of the sheet size. 
Note: both the rwMac and colMac fields are greater by 1 than the actual last row 
and column. For example, a worksheet that exists between cells B3 and D6 would 
have the following dimensions in the dimensions record (rows and columns are 0-
based in BIFF files in which row 1 and column A are both coded as 0): 

rwMic=2 

indicates that 3 is the first row 

colMic=1 

indicates that B is the first column 

rwMac=6 

indicates that 6 is the last row 

colMac=4 

indicates that D is the last column 



Record Data — BIFF8 

Offset 

Field Name 

Size 

Contents 

4 

rwMic 

4 

First defined row on the sheet 

8 

rwMac 

4 

Last defined row on the sheet, plus 1 

12 

colMic 

2 

First defined column on the sheet 

14 

colMac 

2 

Last defined column on the sheet, plus 1 

16 

(Reserved) 

2 

Reserved; must be 0 (zero) 



 
Record Data — BIFF7 and earlier 

Offset 

Field Name 

Size 

Contents 

4 

rwMic 

2 

First defined row on the sheet 

6 

rwMac 

2 

Last defined row on the sheet, plus 1 

8 

colMic 

2 

First defined column on the sheet 

10 

colMac 

2 

Last defined column on the sheet, plus 1 

12 

(Reserved) 

2 

Reserved; must be 0 (zero) 



 

DOCROUTE: Routing Slip Information (B8h) 

This record stores originator information for a routing slip and other information for 
document routing. The rgch field contains the concatenation of seven null-
terminated strings: Subject, Message, Route ID, Custom Message Type, Book Title, 
Originator‘s Friendly Name, and Originator‘s System-Specific Address. The lengths 
of the strings are contained in the seven fields, cchSubject through ulEIDSize. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

iStage 

2 

Routing stage 

6 

cRecip 

2 

Number of recipients 

8 

delOption 

2 

Delivery option: 
=0, one at a time 
=1, all at once 




10 

wFlags 

2 

Option flags 

12 

cchSubject 

2 

Length of the Subject string 

14 

cchMessage 

2 

Length of the Message string 

16 

cchRouteID 

2 

Length of the Route ID string 

18 

cchCustType 

2 

Length of the Custom Message Type string 

20 

cchBookTitle 

2 

Length of the Book Title string 

22 

cchOrg 

2 

Length of the Originator‘s Friendly Name string 

24 

ulEIDSize 

4 

Length of the Originator‘s System-Specific Address 
string 

28 

rgch 

var 

(See text) 



 
The wFlags field contains the following option flags: 

Offset 

Bits 

Mask 

Flag Name 

Contents 

0 

0 

01h 

fRouted 

=1 if the document has been routed 

 

1 

02h 

fReturnOrig 

=1 if the document should be returned 
to its originator 

 

2 

04h 

fTrackStatus 

=1 if the status message should be 
sent 

 

3 

08h 

fCustomType 

=1 if the status message is a custom 
message type 

 

6–4 

70h 

(Reserved) 

 

 

7 

80h 

fSaveRouteInfo 

=1 if the routing slip information 
should be saved 

1 

7–0 

FFh 

(Reserved) 

 



DROPDOWNOBJIDS: Drop Down Object IDs Record 
(874h) 

Introduced in Excel 11 (2003) the DROPDOWNOBJIDS record stores the drop down 
drawing object ids used for the AutoFilter etc. in a workbook. These ids are 
persisted so the next time the book is loaded, these ids can be re-used. 
This record is created to help ease the issue of limited drawing object ids so the limit 
would not be reached so easily with a huge Table or a Table with many columns. 
In Excel 2003, at the end of the AutoFilter drop down object ids, if there is a total 
row used on any Table(s), its drop down object id is also saved as the last item of 
the array of drop down object ids. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the first two 
bytes of the record; =0874h 

6 

grbitFrt 

2 

FRT cell reference flag 
=0 bitFrtNone 




8 

(Reserved) 

8 

Currently not used, set to 0. 

16 

cidObj 

2 

Count of Object ids 

18 

rgidObj 

var 

Array of cidObj many object ids, 2 bytes each 



 


DSF: Double Stream File (161h) 

The DSF record stores a flag that indicates if the workbook is a double stream file. 
Record Data — BIFF8 

Offset 

Flag Name 

Size 

Contents 

4 

fDSF 

2 

=1 if the workbook is a double stream file 



 

DV: Data Validation Criteria (1BEh) 

This record stores data validation criteria for a range of cells. 
Record Data — BIFF8 

Offset 

Field Name 

Size 

Contents 

4 

dwDvFlags 

4 

Option flags; see following table 

8 

rgb 

var 

Array of data validation criteria (see text) followed by 
Title, Prompt, and Error sts, Min and Max rgces, and 
cref REFs 



 
The dwDvFlags field contains the following option flags: 

Bits 

Mask 

Flag Name 

Contents 

3–0 

0000000Fh 

ValType 

Validation type 

6-4 

00000070h 

ErrStyle 

Error alert style 

7 

00000080h 

fStrLookup 

=1 if this is list-type validation with an 
explicitly expressed list of valid inputs 

8 

00000100h 

fAllowBlank 

=1 suppress an error when any cell 
referenced by the validation formula is blank 

9 

00000200h 

fSuppressCombo 

=1 if this is list-type validation, with no 
drop-down to be displayed in the cell when 
selected 

17–10 

0003FC00h 

mdImeMode 

The IME mode to be used for this cell (East 
Asian versions only) 

18 

00040000h 

fShowInputMsg 

=1 show input message box 

19 

00080000h 

fShowErrorMsg 

=1 show error message box 

23–20 

00F00000h 

typOperator 

Operator type 

3 –24 

FF000000h 

(Reserved) 

Reserved; must be 0 (zero) 



 

DVAL: Data Validation Information (1B2h) 

This record stores data validation information. 


Record Data — BIFF8 

Offset 

Field Name 

Size 

Contents 

4 

wDviFlags 

2 

Option flags; see following table 

6 

xLeft 

4 

The x coordinate of the input window 

10 

yTop 

4 

The y coordinate of the input window 

14 

idObj 

4 

For a Table with in-cell drop-down, the object id of 
drop-down OBJ record 

18 

idvMac 

4 

Number of DV records that follow 



 
The wDviFlags field contains the following option flags: 

Bits 

Mask 

Flag Name 

Contents 

0 

0001h 

fWnClosed 

=1 the input window has been closed 

1 

0002h 

fWnPinned 

=1 the input window is pinned in place 

2 

0004h 

fCached 

=1 if information about a cell‘s data validation has 
been cached 

15–3 

FFF8h 

(Reserved) 

Reserved; must be 0 (zero) 



 

DXF: Differential XF (88Dh) 

The DXF record is used to describe formatting properties that are used by various 
features to modify cell formatting. BIFF8 records such as CF and SXDXF still persist 
DXF information inline (possibly followed by an xfexts structure to round trip post 
BIFF8 formatting). However new feature records (e.g. TABLESTYLEELEMENT) refer 
to DXFs with a dxfID which is the index of this corresponding DXF record as saved 
on disk. 


Offset 

Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the first 
two bytes of the record; =088Dh 

6 

grbitFrt 

2 

FRT cell reference flag; =0 currently 

8 

(Reserved) 

8 

Currently not used, and set to 0 

16 

grbitDxf 

2 

see table below 

18 

xfProps 

var 

Array of formatting properties; see table below 



 
The grbitDxf field contains the flags listed in the following table. 

Bits 

Mask 

Name 

Contents 

0 

0001h 

fUIFill 

=1 default (if 0 forecolor/backcolor swapped) 

1 

0002h 

fNewBorder 

=1 default (if 1 left,right,top,bottom borders 
refer to outline of range instead of per cell) 

2..15 

FFFCh 

(Reserved) 

Reserved; must be 0 (zero) 



 
xfProps – this structure is used by DXF and STYLEEXT records to represent a set of 
XF formatting properties. This header is followed by cprops number of property 
definitions each starting with an xfpropheader. 


Offset 

Name 

Size 

Contents 

0 

version 

2 

xfprops version – currently 0. 

2 

cprops 

2 

count of xfprop entries that follow 



 
xfpropheader - The data for each XF format property starts with a common 
header: 

Offset 

Name 

Size 

Contents 

0 

xfpropType 

2 

Indicates property type 

2 

cb 

2 

Length of this property in bytes with header. 



 
This header is followed by a variable amount of data as determined by the XF 
property type (xfpropType). Unknown property types are skipped on load. BIFF12 
defines the following XF property types. The Data kind describes the actual structure 
used to represent the property type‘s information. If present each property entry will 
modify the corresponding XF property (see XF records definition.) 

xfpropType 

Value 

Data kind 

Fill pattern (Fls) 

0 

xfpropByte 

ForeColor 

1 

xfpropColor 

BackColor 

2 

xfpropColor 

Gradient 

3 

xfpropGradient 

GradientStop 

4 

xfpropGradientStop 

TextColor 

5 

xfpropColor 

BorderTop 

6 

xfpropBorder 

BorderBottom 

7 

xfpropBorder 

BorderLeft 

8 

xfpropBorder 

BorderRight 

9 

xfpropBorder 

BorderDiag 

10 

xfpropBorder 

BorderVertical 

11 

xfpropBorder 

BorderHorizontal 

12 

xfpropBorder 

BorderDiagUp 

13 

xfpropBorder 

BorderDiagDown 

14 

xfpropBorder 

HorizontalAlign 

15 

xfpropByte 

VerticalAlign 

16 

xfpropByte 

TextRotation 

17 

xfpropByte 

TextIndent 

18 

xfpropWord 

ReadingOrder 

19 

xfpropByte 

WrapText 

20 

xfpropByte 

JustifyText 

21 

xfpropByte 




ShrinkToFit 

22 

xfpropByte 

MergeCell 

23 

xfpropByte 

TextName 

24 

xfpropString 

Bold 

25 

xfpropWord 

Underline 

26 

xfpropWord 

SuperSubscript 

27 

xfpropWord 

Italic 

28 

xfpropByte 

StrikeThru 

29 

xfpropByte 

Outline 

30 

xfpropByte 

Shadow 

31 

xfpropByte 

Condense 

32 

xfpropByte 

Extend 

33 

xfpropByte 

CharSet 

34 

xfpropByte 

FontFamily 

35 

xfpropByte 

TextSize 

36 

xfpropDWord 

FontScheme 

37 

xfpropByte 

NumFormat 

38 

xfpropString 

(reserved) 

39 

xfpropDWord 

(reserved) 

40 

xfpropDWord 

NumFormatIndex 

41 

xfpropWord 

TextRelativeIndent 

42 

xfpropWord 

Locked 

43 

xfpropByte 

Hidden 

44 

xfpropByte 



 
xfpropByte –Used for properties defined by a single byte of data: 

Offset 

Name 

Size 

Contents 

0 

xfpropType 

2 

Indicates property type 

2 

cb 

2 

Length of this property in bytes with header. 

4 

data 

1 

Single byte of data 



 
xfpropWord –Used for properties defined by a single word of data: 

Offset 

Name 

Size 

Contents 

0 

xfpropType 

2 

Indicates property type 

2 

cb 

2 

Length of this property in bytes with header. 

4 

data 

2 

Single word (2 bytes) of data 



 
xfpropDWord –Used for properties defined by a single double word of data: 


Offset 

Name 

Size 

Contents 

0 

xfpropType 

2 

Indicates property type 

2 

cb 

2 

Length of this property in bytes with header. 

4 

data 

4 

Single double word (4 bytes) of data 



 
xfpropColor – Used for properties that represent a single color of data: 

Offset 

Name 

Size 

Contents 

0 

xfpropType 

2 

Indicates property type 

2 

cb 

2 

Length of this property in bytes with header. 

4 

grbit 

1 

Bit 0: fValidRGBA 
Bits 1..7: xclrType 

5 

xclrIndex 

1 

Color index if indexed or theme color 

6 

nTintShade 

2 

Tint and shade to apply. Signed short that is 
used to represent how the color should be 
tinted or shaded. This value is mapped to the 
range (-1.0 to 1.0). Positive values make the 
color value lighter, negative values make the 
color value darker. A 0.0 value means do not 
tint/shade the color. 

8 

dwRgba 

4 

RGB color 



 
xclrType – Excel supports the following color types. 

Color type 

Value 

Comments 

xclrAuto 

0 

Automatic foreground/background 
colors 

xclrIndexed 

1 

xclrIndex = BIFF8 indexed palette 
color (icv) 

xclrRGB 

2 

dwRgba = RGB color 

xclrThemed 

3 

xclrIndex = Theme color index 



 
xfpropBorder – Used for properties that represent a single cell border of data 
(extends xfpropColor with single word describing border line type dg): 

Offset 

Name 

Size 

Contents 

0 

xfpropType 

2 

Indicates property type 

2 

cb 

2 

Length of this property in bytes with header. 

4 

grbit 

1 

Bit 0: fValidRGBA 
Bits 1..7: xclrType 

5 

xclrIndex 

1 

Color index if indexed or theme color 

6 

nTintShade 

2 

Tint and shade to apply 

8 

dwRgba 

4 

RGB color 

12 

dgBorder 

2 

Border line style 



 

dgBorder – The border line style corresponds to the options in the Format 
Cells dialog box, Border tab, as shown in the following table. 


dgBorder Value 

Border line style 

0 

None 

1 

Thin 

2 

Medium 

3 

Dashed 

4 

Dotted 

5 

Thick 

6 

Double 

7 

Hairline 

8 

Medium dashed 

9 

Dash-dot 

10 

Medium dash-dot 

11 

Dash-dot-dot 

12 

Medium dash-dot-dot 

13 

Slanted dash-dot 



 
xfpropString – Used for properties that can be represented with a single character 
string of data: 

Offset 

Name 

Size 

Contents 

0 

xfpropType 

2 

Indicates property type 

2 

cb 

2 

Length of this property in bytes with header. 

4 

cchName 

2 

Length of string in 2 byte characters 

6 

rgchName 

var 

The actual string characters 



 
xfpropGradient – Used for properties to represent a gradient fill definition. 

Offset 

Name 

Size 

Contents 

0 

xfpropType 

2 

Indicates property type 

2 

cb 

2 

Length of this property in bytes with 
header. 

4 

type 

4 

Gradient type. Two gradient types are 
currently supported – linear (0) and 
rectangular (1) 

8 

numDegree 

8 

Gradient angle. Used for linear gradients 
to determine the angle at which the 
gradient strokes will be drawn (vertical, 
horizontal, or diagonal) 

16 

numFillToLeft 

8 

Left coordinate. Used for rectangular 
gradients to determine the coordinates of 
the rectangle where the gradient should 
converge 




24 

numFillToRight 

8 

Right coordinate. Used for rectangular 
gradients to determine the coordinates of 
the rectangle where the gradient should 
converge 

32 

numFillToTop 

8 

Top coordinate. Used for rectangular 
gradients to determine the coordinates of 
the rectangle where the gradient should 
converge. 

40 

numFillToBottom 

8 

Bottom coordinate. Used for rectangular 
gradients to determine the coordinates of 
the rectangle where the gradient should 
converge 



 
xfpropGradientStop –Used to define the gradient stops of the preceding 
xfpropGradient. 

Offset 

Name 

Size 

Contents 

0 

xfpropType 

2 

Indicates property type 

2 

cb 

2 

Length of this property in bytes with 
header. 

4 

(Reserved) 

2 

Gradient stop index – not used on load. 

8 

numPosition 

8 

Gradient stop position. Position within the 
gradient range where this gradient stop‘s 
color should begin. 

16 

grbit 

1 

Bit 0: fValidRGBA 
Bits 1..7: xclrType (same as described 
for xfpropColor). 

17 

xclrIndex 

1 

Color index if indexed or theme color 
(same as described for xfpropColor). 

18 

nTintShade 

2 

Tint and shade to apply (same as 
described for xfpropColor). 

20 

dwRgba 

4 

RGB color (same as described for 
xfpropColor). 



 

EDG: Edition Globals (88h) 

The EDG record contains information about the publisher/subscriber feature. This 
record can be created only by Excel for the Macintosh. However, if any other 
platform version of Excel encounters the EDG record in a BIFF file, it leaves the 
record in the file, unchanged, when the file is saved. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

lcsec 

4 

Count of all section records ever created in this 
document, plus 1 (includes published embedded charts) 

8 

crtpub 

2 

Count of all PUB records in the file (includes published 
embedded charts) 




10 

(Reserved) 

2 

Reserved; must be 0 (zero) 



 

EOF: End of File (0Ah) 

The EOF record marks the end of the workbook stream or the end of one of the 
substreams in the workbook stream. It has no record data field and is 0A000000h. 

EXCEL9FILE: Excel 9 File (1C0h) 

The EXCEL9FILE record indicates the file was written by Excel 2000. It has no 
record data field and is C0010000h. Any application other than Excel 2000 that 
edits the file should not write out this record. 

EXTERNCOUNT: Number of External References (16h) 

The EXTERNCOUNT record specifies the number of externally referenced workbooks, 
DDE references, and OLE references contained in an Excel workbook. 
For example, a worksheet contains the following formulas in cells A1:A3: 
=SALES.XLS!Profits 
=Signal|System!Formats 
=Signal|StockInfo!MSFT 
This worksheet would have a value of 3 in the cxals field of the EXTERNCOUNT 
record, corresponding to the three external references SALES.XLS, 
Signal|System, and Signal|StockInfo. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

cxals 

2 

Number of external references 



 

EXTERNNAME: Externally Referenced Name (223h) 

The EXTERNNAME record stores an externally referenced name, DDE link, or OLE link. 
All EXTERNNAME records associated with a supporting workbook must directly follow 
the EXTERNSHEET record for the workbook. The order of EXTERNNAME records in a 
BIFF file should not be changed. 

External Name 

When the EXTERNNAME record stores an external name, fOle and fOleLink are 
both equal to zero (FALSE), and the record has the form shown in the following 
table. 

Offset 

Field Name 

Size 

Contents 

4 

grbit 

2 

Option flags 

6 

(Reserved) 

4 

Reserved; must be 0 (zero) 

10 

cch 

1 

Length of the external name 

11 

rgch 

var 

External name 

var 

cce 

2 

Length of the name definition 

var 

rgce 

var 

Name definition, in parsed expression format; for more 
information, see .Microsoft Excel Formulas.. 



 
The grbit field contains the following option flags: 


Bits 

Mask 

Flag Name 

Contents 

0 

0001h 

fBuiltin 

=1 if the name is a built-in name 

1 

0002h 

fWantAdvise 

N/A for External Names (must be 0 (zero)) 

2 

0004h 

fWantPict 

N/A for External Names (must be 0 (zero)) 

3 

0008h 

fOle 

N/A for External Names (must be 0 (zero)) 

4 

0010h 

fOleLink 

N/A for External Names (must be 0 (zero)) 

15-5 

FFE0h 

(Reserved) 

Reserved; must be 0 (zero) 



 

DDE Link 

When the EXTERNNAME record stores a DDE link, the record has the form: 

Offset 

Field Name 

Size 

Contents 

4 

grbit 

2 

Option flags 

6 

(Reserved) 

4 

Reserved; must be 0 (zero) 

10 

cch 

1 

Length of the external name 

11 

rgch 

var 

External name 

var 

rgoper 

var 

Array of OPERs storing the current value of the name 



 
The grbit field contains the following option flags: 

Bits 

Mask 

Flag Name 

Contents 

0 

0001h 

fBuiltin 

N/A for DDE links (must be 0 (zero)) 

1 

0002h 

fWantAdvise 

=0 for manual DDE links 
=1 for automatic DDE links 

2 

0004h 

fWantPict 

=1 if Excel wants a cfPict clipboard format 
representation of the data; OBJ and IMDATA records 
store the image 

3 

0008h 

fOle 

=1 if this record stores the OLE StdDocumentName 
identifier (no rgoper follows rgch) 

4 

0010h 

fOleLink 

=0 for DDE links 

14–5 

7FE0h 

cf 

The clipboard format for which the DDE Advise 
succeeded; this is used to reduce the time required 
for future Advise cycles 

15 

8000h 

(Reserved) 

Reserved; must be 0 (zero) 



 

OLE Link 

When the EXTERNNAME record stores an OLE link, fWantAdvise and fOleLink are 
equal to 1 (TRUE), and the record has the following form: 

Offset 

Name 

Size 

Contents 

4 

grbit 

2 

Option flags 

6 

lStgName 

4 

OLE 2 storage identifier 

10 

cch 

1 

Length of the link name 

11 

rgch 

var 

Link name 



 
The grbit field contains the following option flags: 


Bits 

Mask 

Flag Name 

Contents 

0 

0001h 

fBuiltin 

N/A for OLE links (must be 0 (zero)) 

1 

0002h 

fWantAdvise 

=0 for manual OLE links 
=1 for automatic OLE links 

2 

0004h 

fWantPict 

=1 if Excel wants a cfPict clipboard format 
representation of the data; OBJ and IMDATA records 
store the image 

3 

0008h 

fOle 

N/A for OLE links (must be 0 (zero)) 

4 

0010h 

fOleLink 

=1 for OLE links 

15–5 

FFE0h 

(Reserved) 

Reserved; must be 0 (zero) 



 

EXTERNSHEET: External Reference (17h) 

The EXTERNSHEET record specifies externally referenced workbooks. In BIFF7 and 
earlier, multiple EXTERNSHEET records form a table in the file. The cxals field of 
the EXTERNCOUNT record specifies the number of EXTERNSHEET records. You should 
not change the order of EXTERNSHEET records. 
In BIFF8, the SUPBOOK record stores the encoded pathname and file name. There is 
one SUPBOOK record for each externally referenced workbook. The EXTERNSHEET 
record contains a table (rgXTI) that points to the SUPBOOK records. Several ptgs in 
a BIFF8 formula contain an ixti field; this is the 0-based index to the rgXTI table 
in the EXTERNSHEET record. 
An externally referenced workbook is called a source workbook. The workbook that 
refers to it is called a dependent workbook. 
Record Data — BIFF8 

Offset 

Field Name 

Size 

Contents 

4 

cXTI 

2 

Number of XTI structures that follow 

6 

rgXTI 

var 

Array of XTI structures 



 
Each 6-byte XTI structure contains the following data. 

Offset 

Field Name 

Size 

Contents 

0 

iSUPBOOK 

2 

Index (0-based) to table of SUPBOOK redcords 

2 

itabFirst 

2 

Index (0-based) to first sheet tab in the reference 

4 

itabLast 

2 

Index (0-based) to last sheet tab in the reference 



 
Record Data — BIFF7 and earlier 

Offset 

Field Name 

Size 

Contents 

4 

cch 

1 

Length of the file name 

5 

rgch 

var 

File name 



 
The cch field contains the length of the source workbook file name. The rgch field 
contains the source workbook file name. 

File name Encoding 

Whenever possible, file names are encoded to make BIFF files transportable across 
file systems. Encoded file names are identified by the first character of the rgch 


field. The first character of the rgch field may be any one of the values listed in the 
following table. 

Name 

Value 

Meaning 

chEmpty 

00 

Reference to an empty workbook name (see text) 

chEncode 

01 

File name has been encoded (see the following table) 

chSelf 

02 

Self-referential external reference (see text) 



 
chEmpty indicates the file name is an external reference to an empty workbook 
name, as in the formula =Sheet1!$A$1. 
chSelf indicates the file name is an external reference in which the dependent and 
source workbooks are the same. An example of this is the workbook SALES.XLS, 
which contains the formula =SALES.XLS!$A$1. 
A chDDE key (03h) can occur in the rgch field; it is not necessarily the first 
character in the field, as are chEmpty, chEncode, and chSelf. This key indicates 
that the external reference is a DDE or OLE link. In a DDE link, the chDDE key 
replaces the | (pipe) character that separates the DDE application and topic. In an 
OLE link, chDDE separates the classname and file name. 
A chEncode at the beginning of rgch indicates the file name of the source workbook 
was encoded to a less system-dependent file name. The special keys listed in the 
following table are recognized in the rgch field. 

Key Name 

Value 

PC file systems 

chVolume 

01 

Represents an MS-DOS drive letter. It is followed by the 
drive letter. For example, the formula 
=‘D:\SALES.XLS’!A1 generates the chVolume key 
when the dependent workbook is not on the D drive. 
UNC file names, such as \\server\share\myfile.xls, 
generate an @ character after the chVolume key; this 
replaces the initial double backslash (\\). 

chSameVolume 

02 

Indicates the source workbook is on the same drive as 
the dependent workbook (the drive letter is omitted). For 
example, the formula =‘\SALES.XLS’!A1 generates the 
chSameVolume key when the dependent workbook is not 
in the root directory. 

ChDownDir 

03 

Indicates the source workbook is in a subdirectory of the 
current directory. For example, the formula 
=‘XL\SALES.XLS’!A1 generates the chDownDir key. 
The subdirectory name precedes the chDownDir key, and 
the file name follows it. 

chUpDir 

04 

Indicates the source workbook is in the parent directory 
of the current directory. For example, the formula 
=‘..\SALES.XLS’!A1 generates the chUpDir key. 

chLongVolume 

05 

(Not used) 

chStartupDir 

06 

Indicates the source workbook is in the startup directory 
(the Xlstart subdirectory of the directory that contains 
Excel.exe). 

chAltStartupDir 

07 

Indicates the source workbook is in the alternate startup 
directory. 




Key Name 

Value 

PC file systems 

chLibDir 

08 

Indicates the source workbook is in the Library directory. 



 

EXTSST: Extended Shared String Table (FFh) 

The EXTSST record contains a hash table that optimizes external copy operations. 
Record Data — BIFF8 

Offset 

Field Name 

Size 

Contents 

4 

Dsst 

2 

Number of strings in each bucket 

6 

Rgisstinf 

var 

Array of ISSTINF structures 



 
Each ISSTINF contains the following: 

Offset 

Field Name 

Size 

Contents 

0 

ib 

4 

The stream position where the strings begin (stream 
pointer into the SST record) 

4 

cb 

2 

Offset into the SST record that points to where the 
bucket begins 

6 

(Reserved) 

2 

Reserved; must be 0 (zero) 



 
When writing a BIFF file, do not write out SST and LABELSST records without 
including the EXTSST record, because this will cause Excel to crash when it performs 
an external copy. 
Although an EXTSST record must be written, do not fill out the entire record. Only 
the fields with nonempty buckets have to be calculated; the rest of the bytes of the 
EXTSST can be garbage. If a BIFF8 file is examined, a few bytes of the EXTSST 
display valid data (assuming the file is a small one with only a few strings). 

EXTSTRING: FRT String (804h) 

Introduced in Excel 9 (2000) this is a FRT record. It contains a string. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the first 
two bytes of the record; =0804h 

6 

grbitFrt 

2 

FRT flags; must be zero 

8 

cch 

2 

Count of characters in the string 

10 

rgach 

var 

string (grbit/rgb fields as defined in .Unicode 
Strings in BIFF8..) 



 

FEAT: Shared Feature Record (868h) 

Introduced in Excel 10 (2002) the Shared Feature (FEAT) record describes specific 
Shared Feature Data such as a Protection setting, or a SmartTag setting (more 
information on SmartTags is available at 
http://www.microsoft.com/downloads/details.aspx?familyid=c6189658-d915-4140-908a-
9a0114953721&displaylang=en). 


Though currently Excel has many different Shared Features such as Formula Error 
Checking, Protection, SmartTag etc only 2 types of Shared Feature (FEAT) may be 
created in Excel 2000: Protection and SmartTag. 
Special note: in Excel 2000, the ref field within the structure of FRTHEADER, which 
is documented in the FRT record description, is used to store the ref range of the 
FEAT data so that round-tripping the BIFF file through an earlier version would not 
damage the FEAT data so easily. But this ref in FRTHEADER is no longer used, and 
is set to NULL for all FEAT data in Excel 2003 and later. 
Special note: In Excel 2003 and later, this FEAT is not used anymore for new 
shared features, such as Tables, since a new record of FEAT11 was introduced for 
better feature data round-tripping scenarios through earlier versions of Excel. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the first 
two bytes of the record; =0868h 

6 

grbitFrt 

2 

FRT cell reference flag (see table below) 

8 

Ref 

8 

Range reference to a worksheet cell region if 
grbitFrt=1 (bitFrtRef). Otherwise blank. 

16 

isf 

2 

Shared feature type index (see table below for 
possible values). 
=2 for Enhanced Protection 
=4 for SmartTag 

18 

fHdr 

1 

=0 since this is for feat not feat header 

19 

(Reserved) 

4 

Reserved for future use 
=0 for Enhanced Protection or SmartTag 

23 

cref 

2 

Count of ref ranges this feature is on 

25 

cbFeatData 

4 

Count of byte for the current feature data 

29 

(Reserved) 

2 

=0, currently not used 

31 

REFs 

8*cref 

REFs are written if cref!=0. 

var 

rgbFeat 

Var 

Variable length byte of feature specific data (see 
section below for detail FEAT structures of each 
shared feature type) 



 
Where the grbitFrt flag has the following bits 

Bits 

Mask 

Bit Name 

Description 

0 

0001h 

bitFrtRef 

The Ref bits have value 

1 

0002h 

bitFrtVolatile 

Alert when saving in earlier versions of Excel 

15-2 

FFFCh 

bitFrtError 

There are errors associated with this record 



 
Since each Shared Feature type has its own specific data structure, each FEAT 
record has a different data structure layout in rgbFeat field according to the Shared 
Feature type (i.e., according to each isf field value). 
The detailed data structure of rgbFeat for the 2 different FEAT types are as follows: 


The rgbFeat structure If the feature type is a Protection (isf=2) 

Offset 

Field Name 

Size 

Contents 

0 

grbit 

4 

=1 if this record has SDRel, the Relative 
Security Descriptor data. 
=0 if has no SDRel data 

4 

wPassword 

4 

The encrypted password 

8 

cbTitle 

2 

Count of bytes of rgbTitle 

10 

rgbTitle 

var 

Title string 

var 

cbSD 

4 –if grbit>0 
0 –otherwise 

Count of byte of the Security Descriptor data 

var 

SD 

var -if grbit>0 
0 -otherwise 

The Security Descriptor data block 



 
The rgbFeat Structure If the feature type is a SmartTag (isf=4) 

Offset 

Field Name 

Size 

Contents 

0 

wHash 

4 

The hash value of the SmartTag Tag or cell string 

4 

cSmartTags 

1 

number of SmartTags in this cell 

5 

rgSmartTags 

var 

Array of cSmartTags of SmartTag data stuctures 



 
The rgFactoid has the following data structure for each of its elements: 

Offset 

Field Name 

Size 

Contents 

0 

grbit 

1 

Flags indicating whether the SmartTag is deleted or is 
XML-based (i.e., no indicator is necessary) 

1 

pBagId 

2 

The property bag Id 

3 

cProp 

2 

Count of properties 

5 

cbUnknown 

2 

Count of byte of Unknown data 

7 

rgProperty 

var 

Array of cProp of properties (see table below for 
property data structure) 



 
The rgProperty has the following data structure for each of its elements: 

Offset 

Field Name 

Size 

Contents 

0 

wKeyIndex 

4 

The property steKey index 

1 

wValueIndex 

4 

The property steValue index 



 
Note: One or more CONTINUEFRT record(s) may be used if rgbFeat is larger than 
the maximum record size which is 8,228 bytes. 

FEAT11: Shared Feature 11 Record (872h) 

Introduced in Excel 11 (2003) the Shared Feature 11 (FEAT11) record describes a 
specific Shared Feature Data such as Tables. 
Since the FEAT record in Excel 2002 does not have as much extensibility for round-
tripping future data structures through earlier versions of Excel, this new record type 
is introduced in Excel 2003 which is similar to FEAT record but has more extensibility 
built in for better round-tripping stories through earlier versions of Excel. 


Hence, starting from Excel 2003, the FEAT record, introduced in Excel 2002, is no-
longer used for new feature data structures. Instead, FEAT11 is used for saving the 
data structure for new features such as Tables. 
Still, Excel has many different Shared Features such as Formula Error Checking, 
Protection, SmartTag etc., and Tables, only 3 types of Shared Feature may be 
created in Excel 2003: Protection, SmartTag, and Tables using either FEAT or 
FEAT11 records. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the first two 
bytes of the record; =0872h 

6 

grbitFrt 

2 

FRT cell reference flag (see table below for details) 

8 

Ref 

8 

Range reference to a worksheet cell region if 
grbitFrt=1 (bitFrtRef). Otherwise blank. 

16 

isf 

2 

Shared feature type index 
=5 for Table 

18 

fHdr 

1 

=0 since this is for feat not feat header 

19 

(Reserved) 

4 

Reserved for future use 
=0 for Table 

23 

cref 

2 

Count of ref ranges this feature is on 

25 

cbFeatData 

4 

Count of byte for the current feature data. 

29 

(Reserved) 

2 

=0 currently not used 

31 

rgbFeat 

var 

Variable length byte of feature specific data (see 
section below for detail FEAT structures of each shared 
feature type) 



 
Where the grbitFrt flags has the following bits 

Bits 

Mask 

Flag Name 

Description 

0 

0001h 

bitFrtRef 

The Ref bits have value 

1 

0002h 

bitFrtVolatile 

Alert when saving in earlier versions of Excel 

15-2 

FFFCh 

bitFrtError 

There are error with this record 



 
However, since each Shared Feature type has its own specific data structure, this 
FEAT record has a different data structure layout in the rgbFeat field according to 
the Shared Feature type (the isf field flags have different Shared Feature types). 
This is because the detailed data structure of rgbFeat for the Protection and Factoid 
are listed in FEAT already. Here, only the Table type is listed, and saved in FEAT11. 
The rgbFeat structure for Excel 11 (2003) - If the feature type is a Table (isf=5) 



Offset 

Field Name 

Size 

Contents 

0 

lt 

4 

Table data source type: 
=0 for Excel Worksheet Table 
=1 for read-write SharePoint linked 
List 
=2 for XML mapper Table 
=3 for Query Table 

4 

idList 

4 

The ID of the Table (unique per 
worksheet) 

8 

crwHeader 

4 

How many header/title rows the 
Table has at the top 

12 

crwTotals 

4 

How many total rows the Table has 
at the bottom 

16 

idFieldNext 

4 

Next id to try when assigning a 
unique id to a new field 

20 

cbFSData 

4 

The size of the Fixed Data portion of 
the Table data structure. 

24 

rupBuild 

2 

the rupBuild that generated the 
record 

26 

unusedShort 

2 

UNUSED short that can be used 
later. The value is reserved during 
round-tripping. 

28 

listFlags 

4 

Collection of bit flags: 
(see listFlags‘ bit setting table 
below for detail.) 

32 

lPosStmCache 

4 

Table data stream position of cached 
data 

36 

cbStmCache 

4 

Count of bytes of cached data 

40 

cchStmCache 

4 

Count of characters of 
uncompressed cached data in the 
stream 

44 

lem 

4 

Table edit mode 
(see List (Table) Editing Mode (lem) 
setting table below for details.) 

48 

rgbHashParam 

16 

Hash value for SharePoint Table 

64 

cchName 

2 

Count of characters in the Table 
name string rgbName 

66 

rgbName 

var 

Table name string using Unicode 
encoding. (See section titled 
Unicode Strings in Biff8 for more 
information about these encodings.) 

var 

cFieldData 

2 

Number of column fields in the Table 




Offset 

Field Name 

Size 

Contents 

Var 

cchCSPName 

2 –if 
listFlags.fLoadCSPName is TRUE 
0 -otherwise 

Count of characters in the 
Cryptographic Service Provider 
Name string 

var 

rgbCSPName 

Var 

Name of the Cryptographic Service 
Provider used to generate 
rgbHashParam, of length 
cbCSPName. String saved using 
Unicode encoding. (See section 
titled Unicode Strings in Biff8 for 
more information about these 
encodings.) 

var 

cchEntryId 

2 –if 
listFlags.fLoadEntryId is TRUE 
0 -otherwise 

Count of characters in the Map Entry 
Id rgbEntryId 

var 

rgbEntryId 

var –if 
listFlags.fLoadEntryId is TRUE 
0 -otherwise 

Map entry ID for XDT‘s using 
Unicode encoding. (See section 
titled Unicode Strings in Biff8 for 
more information about these 
encodings.) 

var 

rgFieldData 

var 

Array of cFieldData many field 
data (see Field Data table for 
rgFieldData below for detail bits 
layout) 

var 

cIdDeleted 

2 –if 
listFlags.fLoadPldwIdDeleted is 
TRUE 
0 –otherwise 

Count of rgIdDeleted, may be 
non-zero only for a SharePoint 
linked Table 

var 

rgIdDeleted 

var –if 
listFlags.cIdDelete>0 
0 –otherwise 

Array of cIdDeleted many, 4-byte 
IDs of rows that were deleted in a 
SharePoint Table. 

var 

cIdChanged 

2 –if 
fLoadPldwIdChange is TRUE 
0 –otherwise 

Count of rgIdChanged, may be 
non-zero only for a SharePoint 
linked Table 

var 

rgIdChanged 

var –if 
cIdChanged>0 
0 –otherwise 

Array of cIdChanged many 4-byte 
IDs of rows in a SharePoint Table 
changed since the last refresh 
operation. 




Offset 

Field Name 

Size 

Contents 

var 

cCellInvalid 

2 –of 
listFlags.fLoadPlstclInvalid is 
TRUE 
0 -otherwise 

Count of rgCellInvalid, may be 
non-zero only for a SharePoint Table 

var 

rgCellInvalid 

var –if 
listFlags.cCellInvalid>0 
0 –otherwise 

Array of cCellInvalid many 8-
byte Cells that contain invalid data 
that wasn‘t caught by normal error 
checking. Each has: 
4 bytes for row index 
4 bytes for field index in a List 



 
Where the listFlags‘ bit setting table is: 

Bits 

Mask 

Flag Name 

Contents 

0 

00000001h 

fActive 

=1 if the Table is Active 

1 

00000002h 

fAutoFilter 

=1 if an autofilter is applied to the Table 

2 

00000004h 

fPersistAutoFilter 

=1 if the autofilter was cached when 
Table is deactivated 

3 

00000008h 

fShowInsertRow 

=1 if the insert row is visible 

4 

00000010h 

fInsertRowInsCells 

=1 if cells were inserted to show the 
insert-row 

5 

00000020h 

fLoadPldwIdDeleted 

=1 if need to load the deleted row IDs 

6 

00000040h 

fShownTotalRow 

=1 if the Table‘s total row has been 
shown before. The total row may not 
be showing on the Table currently 
though. 

7 

00000080h 

fInsNewRwInFilter 

=1 if should insert a new row when in 
filter mode 

8 

00000100h 

fNeedsCommit 

=1 if there are changes made to the 
Table that haven‘t been committed 

9 

00000200h 

fSingleCell 

=1 if the Table is limited to a single cell 

10 

00000400h 

fInDeletion 

=1 if the Table is in Deletion state 

11 

00000800h 

fDoNotApplyFilter 

=1 if should not filter out the records in 
the Table by AutoFiter 

12 

00001000h 

fForceInsertToBeVisible 

=1 if the Table has no data rows and 
the insert row is forced to be visible 

13 

00002000h 

fCompressedXml 

=1 if Table XML data was compressed 
on save 

14 

00004000h 

fLoadCSPName 

=1 if the pstCSPName field exists 

15 

00008000h 

fLoadPldwIdCached 

=1 if need to load the changed row IDs 




Bits 

Mask 

Flag Name 

Contents 

19-16 

000F0000h 

verXL 

the verXLCur generated this LSTD 
=11 for Office Excel 2003 
=12 for Office Excel 2007 

20 

00100000h 

fLoadEntryId 

=1 if the Table has Entry ID 

21 

00200000h 

fLoadPllstcInvalid 

=1 if we need to load the array of 
invalid Table cells 

22 

00400000h 

fGoodRupBld 

=1 if rupBld has been initialized 
correctly 

23 

00800000h 

fDefaultListBdr 

=1 if the Table border is the default 
border, in other words, it has not been 
modified 

24 

01000000h 

fPublished 

=1 if the Table is published 

31-25 

FE000000h 

(Reserved) 

Reserved; Must be zero. 



 
The List (Table) Editing Mode (lem) may take the following values to indicate various 
editing modes: 


Value 

Edit Mode 

Description 

0 

lemNormal 

The Table can be edited as normal 

1 

lemRefreshCopy 

The Table must be refreshed before 
editing is allowed because the user 
copied a Query Table type of Table 

2 

lemRefreshCache 

The Table must be refreshed before 
editing is allowed because caching a 
user change failed 

3 

lemRefreshCacheUndo 

The Table must be refreshed before 
editing is allowed because undoing a 
cached user change failed 

4 

lemRefreshLoaded 

The Table must be refreshed before 
editing is allowed because on load we 
could not re-connect to the Table 
source 

5 

lemRefreshTemplate 

The Table must be refreshed before 
editing is allowed because on load we 
didn't have a cache to load since the 
Query Table was saved without it is 
cell data 

6 

lemRefreshRefresh 

The Table must be refreshed before 
editing is allowed because a previous 
refresh failed 

7 

lemNoInsRowsSPRequired 

Rows can't be inserted into this 
SharePoint Table because there are 
hidden required columns 

8 

lemNoInsRowsSPDocLib 

Rows can't be inserted into this 
SharePoint Table because it is a 




Value 

Edit Mode 

Description 

document library 

9 

lemRefreshLoadDiscarded 

The Table must be refreshed before 
editing is allowed because on load the 
user wanted to discard cached 
changes 

10 

lemRefreshLoadHashValidation 

The Table must be refreshed before 
editing is allowed because on load the 
validation of the Table‘s data area 
failed 

11 

lemNoEditSPModView 

Can't allow the user to edit this Table 
due to the type of moderated view it 
is 

12 

(Reserved) 

Reserved 

13 

(Reserved) 

Reserved 

14 

(Reserved) 

Reserved 



 
And the array rgFiledData of column data following this data structure for each of 
its items: 


Offst 

Field Name 

Size 

Contents 

0 

idField 

4 

The ID of the Field 

4 

lfdt 

4 

data type of List field (see lfdt 
table below for value definition) 

8 

lfxidt 

4 

The Mso Xml Instance Data Type 
(see lfxidt table below for the 
value to data type map) 

12 

ilta 

4 

Aggregate type of the List field 
(see table below for value map). 

16 

cbFmtAgg 

4 

Number of bytes for rgbFmtAgg 

20 

istnAgg 

4 

What style to apply to the field‘s 
aggregate cell. 

24 

colFlags 

4 

Collection of bit flags: 
(see colFlags bit setting table 
below) 

28 

cbFmtInsertRow 

4 

Number of bytes 
rgbFmtInsertRow 

32 

istnInsertRow 

4 

Style for this InsertRow column 

36 

cchFieldName 

2 

Count of characters in the Field 
name rgbFieldName 




Offst 

Field Name 

Size 

Contents 

36 

rgbFieldName 

var 

field name string using Unicode 
encoding. (See section titled 
Unicode Strings in Biff8 for more 
information about these 
encodings.) 

var 

cchCaption 

2 –if 
colFlags.fSingleCell is 
FALSE 
0 -otherwise 

Count of characters in the Field 
Caption string rgbCaption 

var 

rgbCaption 

var -if 
colFlags.fSingleCell is 
FALSE 
0 –if 
colFlags.fSingleCell is 
TRUE 

Column caption string using 
Unicode encoding. (See section 
titled Unicode Strings in Biff8 for 
more information about these 
encodings.) 

var 

rgbFmtAgg 

var 

Array of formats applied to 
aggregation cells, length of 
cbFmtAgg 

var 

rgbFmtInsertRow 

var 

Array of formats applied to insert 
row cells, length of 
cbFmtInsertRow 

var 

cbAutoFilter 

4 –if 
colFlags.fAutoFilter is 
TRUE 
0 -otherwise 

The AutoFitler data for this 
column (See Feat AutoFilter 
section in FEATHEADER record). 

var 

idObj 

2 –if 
colFlags.fAutoFilter is 
TRUE 
0 -otherwise 

The AutoFilter dropdown object 
ID 

var 

AutoFilter 

var –if 
colFlags.fAutoFilter is 
TRUE 
0 -otherwise 

The AutoFilter record of size 
cbAutoFilter (see 
AUTOFILTER record for detail 
bits definition) 

var 

iXmapMac 

2 –if colFlags.fLoadXmapi 
is TRUE 
0 -otherwise 

The count of XMap data in 
rgXMap 

var 

rgXmap 

var –if 
colFlags.fLoadXmapi is 
TRUE 
0 -otherwise 

Array of iXmpMac of XMapData 
structures (see XMapData table 
below for detail structure of each 
XMap data) 

var 

cceFmla 

2 -if colFlags.fLoadFmla 
is TRUE 
0-otherwise 

Count of bytes in the calculated 
column‘s formula. 




Offst 

Field Name 

Size 

Contents 

var 

rgbFmla 

var -if colFlags.fLoadFmla 
is TRUE 
0 -otherwise 

The calculated column formula 
string of length cceFmla (see 
how formulas are generally 
persisted for detail). 

var 

cceFmlaTotal 

2 –if 
colFlags.fLoadTotalFmla 
is TRUE 
0 -otherwise 

Count of bytes in the total row 
cell‘s formula. 

var 

rgbFmlaTotal 

var –if 
colFlags.fLoadTotalFmla 
is TRUE 
0- otherwise 

The total row cell formula string 
of length cceFmlaTotal (see 
how formulas are generally 
persisted for detail). 

var 

cchTotal 

2 –if 
colFlags.fLoadTotalStr 
is TRUE 
0 -otherwise 

Count of characters in the total 
row cell string rgbTotal 

var 

rgbTotal 

var -if 
colFlags.fLoadTotalStr 
is TRUE 
0 –if 
colFlags.fLoadTotalStr 
is FALSE 

Column caption string using 
Unicode encoding. (See section 
titled Unicode Strings in Biff8 for 
more information about these 
encodings.) 

var 

LCID 

4 –if the rgbFeat.lt=1 
0 –otherwise 

The LCID of the currency symbol 
to use 

var 

cDec 

4 –if rgbFeat.lt=1 
0 –otherwise 

The number of decimal places for 
a numeric colum when fDecSet 
is 1 (TRUE) 

var 

FmtSettings 

4 –if rgbFeat.lt=1 
0 -otherwise 

Collection of misc. format 
settings 
(see FmtSettings table below 
for details..) 

var 

DVSettings 

4 –if rgbFeat.lt=1 
0 -otherwise 

Collection of misc. validation 
settings (see table below) 


var 

rgbDV 

var –if 
DVSettings.fDefaultSet 
is TRUE 
0 -otherwise 

The data validation string, whose 
size depends on the lfdt data 
type (see lftd vs. rgbDV size 
table below) 

var 

cchFormula 

2 –if 
DVSettings.fLoadFormula 
is TRUE 
0-otherwise 

Count of characters in the 
validation formula string 
rgbFormula 




Offst 

Field Name 

Size 

Contents 

var 

rgbFormula 

var -if 
DVSettings.fLoadFormula 
is TRUE 
0 -otherwise 

Validation formula string using 
Unicode encoding. (See section 
titled Unicode Strings in Biff8 for 
more information about these 
encodings.) 

var 

cbRtdv 

4 –if rgbFeat.lt=1 
0 –otherwise 

Count of bytes of dv data – only 
used for Excel 2003 Beta1 



 
Where Ilta has value map: 


Value 

Name 

Aggregation Function 

0 

 

No formula 

1 

Average 

Average 

2 

Count 

Count 

3 

CountNum 

Count Numbers 

4 

Max 

Max 

5 

Min 

Min 

6 

Sum 

Sum 

7 

StdDev 

Standard Deviation 

8 

Var 

Variance 

9 

Custom 

Any formula 



 
And the lfxidt of Mso Xml Instance Data Type has the following value map: 

Value 

Name 

Data Type String 

0 

msoxidtInvalid 

NULL 

1 

msoxidtUnknown 

NULL 

0x2400 

msoxidtComplexContent 

NULL 

0x2101 

msoxidtAnyType 

anyType 

0x2102 

msoxidtAnyUri 

anyURI 

0x2103 

msoxidtBase64Binary 

base64Binary 

0x2104 

msoxidtBoolean 

boolean 

0x2105 

msoxidtByte 

byte 

0x2106 

msoxidtDate 

date 

0x2107 

msoxidtDateTime 

dateTime 

0x2108 

msoxidtDay 

gDay 

0x2109 

msoxidtDecimal 

decimal 

0x210A 

msoxidtDouble 

double 

0x210B 

msoxidtDuration 

duration 

0x210C 

msoxidtEntities 

ENTITIES 

0x210D 

msoxidtEntity 

ENTITY 

0x210E 

msoxidtFloat 

float 

0x210F 

msoxidtHexBinary 

hexBinary 




Value 

Name 

Data Type String 

0x2110 

msoxidtId 

ID 

0x2111 

msoxidtIdRef 

IDREF 

0x2112 

msoxidtIdRefs 

IDREFS 

0x2113 

msoxidtInt 

int 

0x2114 

msoxidtInteger 

integer 

0x2115 

msoxidtLanguage 

language 

0x2116 

msoxidtLong 

long 

0x2117 

msoxidtMonth 

gMonth 

0x2118 

msoxidtMonthDay 

gMonthDay 

0x2119 

msoxidtName 

Name 

0x211A 

msoxidtNCName 

NCName 

0x211B 

msoxidtNegativeInteger 

negativeInteger 

0x211C 

msoxidtNmToken 

NMTOKEN 

0x211D 

msoxidtNmTokens 

NMTOKENS 

0x211E 

msoxidtNonNegativeInteger 

nonNegativeInteger 

0x211F 

msoxidtNonPositiveInteger 

nonPositiveInteger 

0x2120 

msoxidtNormalizedString 

normalizedString 

0x2121 

msoxidtNotation 

NOTATION 

0x2122 

msoxidtPositiveInteger 

positiveInteger 

0x2123 

msoxidtQName 

QName 

0x2124 

msoxidtShort 

short 

0x2125 

msoxidtString 

string 

0x2126 

msoxidtTime 

time 

0x2127 

msoxidtToken 

token 

0x2128 

msoxidtUnsignedByte 

unsignedByte 

0x2129 

msoxidtUnsignedInt 

unsignedInt 

0x212A 

msoxidtUnsignedLong 

unsignedLong 

0x212B 

msoxidtUnsignedShort 

unsignedShort 

0x212C 

msoxidtYear 

gYear 

0x212D 

msoxidtYearMonth 

gYearMonth 



 
And the colFlags‘ bit setting table is: 

Bits 

Mask 

Bit Name 

Contents 

0 

00000001h 

fAutoFilter 

=1 if has an AutoFilter 

1 

00000002h 

fAutoFilterHidden 

=1 if the Autofilter is hidden 

2 

00000004h 

fLoadXmapi 

=1 if the data source is XML Maper 

3 

00000008h 

fLoadCalcColFmla 

=1 if has calculated column formula 

4 

00000010h 

(Reserved) 

calculated column refers more than rows for Excel 
2003 Beta1, not used for Excel 2003 

5 

00000020h 

fCalcColRefersTo 

=1 if calculated column depend on this field 

6 

00000040h 

fLoadCalcColArray 

=1 if need to load a calculated column array formula 




Bits 

Mask 

Bit Name 

Contents 

7 

00000080h 

fLoadTotalFmla 

=1 if need to load total row cell formula 

8 

00000100h 

fLoadTotalArray 

=1 if the total row cell formula is an array formula 

9 

00000200h 

fSaveStyleName 

=1 if need to load header row cell style name 

10 

00000400h 

fLoadTotalStr 

=1 if need to load total row cell string constant 

11 

00008000h 

fAutoCreateCalcCol 

=1 if calculated column should be automatically 
created on load 

31-12 

FFFFF000h 

(Reserved) 

Reserved; Must be zero. 



 
The FmtSettings bits are: 

Bits 

Mask 

Bit Name 

Contents 

0 

00000001h 

fPercent 

Whether the numeric values in the column 
are percentages 

1 

00000002h 

fDecSet 

Whether the number of decimal places for a 
numeric column is set 

2 

00000004h 

fDateOnly 

If only the date is displayed for a datetime 
column 

4-3 

00000018h 

iReadingOrder 

Text column direction: context, ltr, rtl 

5 

00000020h 

fRichText 

Whether this column contains rich text 
strings 

6 

00000040h 

fUnkRTFormatting 

Whether there was rich text formatting that 
we didn‘t recognize 

7 

00000080h 

fAlertUnkRTFormatting 

Whether we need to alert the user about 
rich text formatting that we didn‘t recognize 

31-8 

FFFFFF00h 

(unused) 

Currently not used. 



 
The DVSettings bits are: 

Bits 

Mask 

Bit Name 

Contents 

0 

00000001h 

fReadOnly 

Whether the column is read only 

1 

00000002h 

fRequired 

Whether entries in the column are required 

2 

00000004h 

fMinSet 

Whether the minimum value for a numeric 
column is set 

3 

00000008h 

fMaxSet 

Whether the maximum value for a numeric 
column is set 

4 

00000010h 

fDefaultSet 

Whether there is a default value for the column 

5 

00000020h 

fDefaultDateToday 

Whether the default value for the column is 
today‘s date 

6 

00000040h 

fLoadFormula 

TRUE if pstFormula!=NULL on load/save 

7 

00000080h 

fAllowFillIn 

TRUE if the choice field allows custom user 
entries 

31-8 

FFFFFF00h 

(unused) 

Currently not used. 



 


And the array of rgXMap has the following data structure for each of its element: 

Offset 

Name 

Size 

Contents 

0 

grbit 

4 

Collection of bit flags. (see grbit 
setting table below for possible 
values). 

4 

dwMapID 

4 –if grbit. fLoadXMap 
= TRUE 
0 -otherwise 

The XML map item ID 

8 

cbXPath 

2 – if grbit.fLoadXMap 
= TRUE 
0 -otherwise 

Count of bytes of XPath string 
rgbXPath 

8 

rgbXPath 

var 

The XPath, of length cbXPath 



 
Where the grbit has the following possible values: 

Bits 

Mask 

Flag Name 

Size 

Contents 

0 

00000001h 

fFilled 

1 bit 

for data was filled down due to 
flattening 

1 

00000002h 

fLoadXMap 

1 bit 

for pstXMap is non-null 

2 

00000004h 

fCanBeSingle 

1 bit 

for it can be a single cell 

3 

00000008h 

fDefaultSet 

1 bit 

for default value is set for XDT 

4 

FFFFFFF0h 

(unused) 

28 bits 

for currently not used bits 



 
And the value match for the data type lfdt and the corresponding rgbDV size table: 

lfdt 

Data Type 

rgbDV Size 

1 

Short text 

Length-pre-fixed wide character string 

2 

Number 

8 

3 

Yes/No 

4 

4 

Data time 

8 -if DVSettings.fDefaultDateToday = FALSE 
0 –otherwise 

5 

Multi-line text 

0 

6 

Currency 

8 

7 

Lookup 

0 

8 

Choice 

Length-prefixed wide character string 

9 

Hyperlink 

0 

10 

Counter 

0 

11 

Multi-choice 

Length-prefixed wide character string 



 
Note: One or more CONTINUEFRT11 record(s) maybe used if the rgbFeat is larger 
than the maximum record size which is 8,228 bytes. 


FEAT12: Shared Feature 12 Record (878h) 

Introduced in Office Excel 2007 the Shared Feature 12 (FEAT12) record has the 
same data layout as the FEAT11 (Shared Feature 11) record with the benefit that 
Office Excel 2003 doesn‘t understand the contents of a FEAT12 record. For instance 
this is used to save a Table when Office Excel 2007 features make the Table 
unrecognizable and/or unusable in Office Excel 2003. 
See the description of the FEAT11: Shared Feature 11 Record (872h) for a 
description of the record data. 

FEATHEADR: Shared Feature Header (867h) 

Introduced in Excel 10 (2002) the FEATHEADR record describes the common 
information (header) for shared features such as Protection and SmartTag. For 
example, if you have a worksheet that contains Protection, a Shared Feature Header 
(FEATHEADER) record is created for all Protections which may include Sheet 
Protection or Book Protection. Though Sheet Protection and Book Protection may 
have specific data that are different and are saved in the Feature Data (see FEAT 
record for detail) portion, their common settings are stored in this header block 
record. 
A worksheet may contain one or more different types of Shared Feature and each 
type of Shared Feature has its own Shared Feature Header (FEATHEADER) record to 
store common information across all Shared Feature of the same type. This 
FEATHEADER record will have different data structure layout according to the Shared 
Feature type (the isf field flags differentiate Shared Feature types). For example, if 
a Workbook has both Protection and SmartTag, there is one Shared Feature Header 
(FEATHEADER) created for Protection, and another Shared Feature Header 
(FEATHEADER) created for SmartTag. Therefore, the data block of the Shared 
Feature Header (FEATHEADER) may have a different data structure depending on 
which Shared Feature Type the record is for. 
Though Excel currently has many different Shared Features such as Formula Error 
Checking, Protection, SmartTag etc., only 2 types of Shared Feature are persisted in 
Excel 2002: Protection and SmartTag. 
Special note: In Excel 2003, this FEATHEADER is not used for new shared features, 
such as Tables, since a new record of FEATFEADER11 was introduced for better 
feature data round-tripping stories through earlier versions of Excel. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the first two 
bytes of the record; =0867h 

6 

grbitFrt 

2 

FRT cell reference flag 
=0 currently 

8 

(Reserved) 

8 

Currently not used and set to 0. 

16 

isf 

2 

Shared feature type index 
=2 for Enhanced Protection 
=4 for SmatTag 

18 

fHdr 

1 

=1 since this is a feat header 




Offset 

Field Name 

Size 

Contents 

19 

cbHdrData 

4 

Size of rgbHdrSData 
=4 for simple feature headers 
=0 there is no rgbHdrData 
=-1 for complex feature headers, the size of 
rgbHdrData depends on the isf type. 
(prior to Excel 2003, all features saved using 
FEATHEAER use complex features.) 

23 

rgbHdrData 

var 

Byte array of extra info, including from future versions 
of Excel 



 
The rgbHdrData block for Enhanced Protection 

Offset 

Field Name 

Size 

Contents 

0 

grbit 

4 

Bit flag for protection rules setting (see table below for 
detail bit settings) 



 
The bit settings for protection rules settings in the grbit: 

Bits 

Mask 

Bit Name 

Description 

0 

00000001h 

iprotObject 

Edit object 

1 

00000002h 

iprotScenario 

Edit scenario 

2 

00000004h 

iprotFormatCells 

Format cells 

3 

00000008h 

iprotFormatColumns 

Format columns 

4 

00000010h 

iprotFormatrows 

Format rows 

5 

00000020h 

iprotInsertColumns 

Insert columns 

6 

00000040h 

iprotInsertRows 

Insert rows 

7 

00000080h 

iprotInsertHyperlinks 

Insert hyperlinks 

8 

00000100h 

iprotDeleteColumns 

Delete columns 

9 

00000200h 

iprotDeleteRows 

Delete rows 

10 

00000400h 

iprotSelLockedCells 

Select locked cells 

11 

00000800h 

iprotSort 

Sort 

12 

00001000h 

iprotAutoFilter 

Use Autofilter 

13 

00002000h 

iprotPivotTables 

Use PivotTable reports 

14 

00004000h 

iprotSelUnlockedCells 

Select unlocked cells 



 
The rgbHdrData block for SmartTag 

Offset 

Field Name 

Size 

Contents 

0 

cSmartTag 

4 

Count of SmartTags 

4 

rgbSmartTag 

var 

Array of SmartTag header data (see table below). 

var 

cbPropBagData 

2 

Count of bytes in Property Bag store plus unknown 
data, i.e., rest of the data size including this count 
bit 

var 

sVersion 

2 

Version number 

var 

(Reserved) 

4 

Currently not used. 

var 

Cste 

4 

String table entry 




Offset 

Field Name 

Size 

Contents 

var 

cbUnknown 

2 

Count of bytes of unknown data 

var 

pvUnknoan 

var 

The Unknown data 



 
Where the rgbSmartTag, the array of SmartTag header data block, has the fields: 

Offset 

Field Name 

Size 

Contents 

0 

cbSmartTag 

4 

Count of Byte of the SmartTag data 

4 

id 

4 

Id of this SmartTag 

8 

cbUri 

2 

Count of bytes of rgbUri 

10 

rgbUri 

var 

Character string of URI (Universal Resource 
Identifier) which is the name space portion of the 
SmartTag, of length cbUri 
e.g., urn:schemas-microsoft-com:office:smarttags 

var 

cbTag 

2 

Count of bytes of the SmartTag tag name rgbTag 

var 

rgbTag 

var 

Character string of the SmartTag tag name, of length 
cbTag e.g., Stockticker 

var 

cbDownLoadURL 

2 

Count of bytes of Download URL address string: 
rgbDownLoadURL 

var 

rgbDownLoadURL 

var 

Character string of downloading URL 

Var 

pvUnknown 

var 

Additional data in pvUnknown, of length 
cbSmartTag – cbUri – cbTag – cbDownLoadURL – 
10 



 
In Excel 2003, only book level SmartTags‘ headers are saved. Sheet level SmatTag 
headers are not persisted. 

FEATHEADR11: Shared Feature Header 11 (871h) 

Introduced in Excel 11 (2003) the FEATHEADR11 record describes common 
information (header) for shared features such as Tables. For example, if you have a 
worksheet that contains Table(s), a Shared Feature Header (FEATHEADER11) record 
is created for all Tables. Though Tables from the same or different sheets may have 
specific data that are different which are saved in the Feature Data 11 (see FEAT11 
record for detail) portion, their common settings are stored in this header block 
record. 
A worksheet may contain one or more different types of Shared Feature and each 
type of Shared Feature has its own Shared Feature Header (FEATHEADER11) record 
to store common information across all Shared Feature of the same type. For 
example, if a Workbook has both Table and some future shared feature, there is one 
Shared Feature Header (FEATHEADER11) created for Table, and another Shared 
Feature Header (FEATHEADER11) created for the future feature. Therefore, the data 
block of the Shared Feature Header (FEATHEADER11) may have a different data 
structure depending on which Shared Feature Type the record is for. Hence, the 
FEATHEADER11 record will have a different data structure layout according to the 
Shared Feature type (the isf field flags differentiate Shared Feature types). 

Though Excel currently has many different Shared Features such as Formula Error 
Checking, Protection, Factoid (SmartTag etc.), only 3 types of Shared Feature are 
persisted in Excel 2003: Protection, Factoid (SmartTag), and Table. 


In Excel 2003, Table uses the FEATHEADER11 structure, even though the 
FEATHEADER is still used for existing Excel 10 (2002) features such as Protection and 
Factoid (SmartTag) etc. This new record of FEATHEADER11, though it has exactly 
the same structure as FEATHEADER, was introduced to persist header records in 
combination with FEAT11 (introduced to address bugs in round-tripping scenario of 
FEAT) through earlier versions. Therefore, if a shared feature is saved using 
FEAT11, it should be using FEATHEADER11 instead of FEATHEADER. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the first 
two bytes of the record; =0871h 

6 

grbitFrt 

2 

FRT cell reference flag 
=0 bitFrtNone 

8 

(Reserved) 

8 

Currently not used, and set to 0 

16 

isf 

2 

Shared feature type index 
=5 for Table 

18 

fHdr 

1 

=1 since this is a feat header 

19 

cbHdrData 

4 

Size of rgbHdrSData 
=4 for simple feature headers 
=0 there is no rgbHdrData 
=-1 for complex feature headers and the size of 
rgbHdrData depends on the isf type. 
(in Excel 2003, all features saved using 
FEATHEAER11 are complex features.) 

23 

rgbHdrData 

var 

Byte array of extra info, including from future 
versions of Excel; length depends on isf feature 
type. 



 
The rgbHdrData block for Table (isf = 5) 

Offset 

Field Name 

Size 

Contents 

0 

idObjTotal 

4 

The id of the dropdown object for the 
total row 

4 

idListNext 

4 

Next id to use when assigning a unique 
id to a new Table 

8 

cFilterData 

2 

Count of Feat Autofilters 

10 

rgFilterData 

var 

Array of cFilterData many AutoFilter 
data structures (see table below). 

var 

refFilter 

8 –if 
cFilterData>0 
0 -otherwise 

The ref (rwFirst, rwLast, colFirst, 
colLast) of the Feat Autofilter range. 



 
Where the structure for each item in the rgFilterData array has the following 
layout for each filter data item: 

Offset 

Field Name 

Size 

Contents 

0 

cbAutoFilter 

4 

Count of Bytes of the AutoFilter record 

4 

idObj 

2 

Id of the AutoFilter drop down object 




6 

AutoFilter 

var 

The AutoFilter data of length cbAutoFilter (see 
the AutoFilter record section for detailed 
description of AutoFitler data) 



 

FEATINFO: Shared Feature Info Record (86dh) 

Introduced in Excel 10 (2002) the FEATINFO record describes shared feature 
definitions and options or handling instructions for various shared features, such as 
Protection, Factoid etc. 
There should be one FEATINFO record for each shared feature type that exists in a 
workbook. That means, this block of data describes the common handling 
instructions of a shared feature of the same type regardless of whether the features 
are on the same or different sheets of a workbook. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the first two 
bytes of the record; =086dh 

6 

grbitFrt 

2 

FRT cell reference flag 
=0 currently 

8 

(Reserved) 

8 

Currently not used, and set to 0. 

16 

Isf 

4 

The shared feature type 
=2 for Enhanced Protection 
=4 for SmartTag 

20 

grbitFlags 

4 

Bit flags of handling instructions 



 
Currently, grbitFlags only has the following first 13 bits of handling instructions 
defined: 

Bits 

Mask 

Bit Name 

Contents 

0 

00000001h 

bitFFeatHover 

Support hover operation 

1 

00000002h 

bitFFeatSelect 

Support select operation 

2 

00000004h 

bitFFeatScroll 

This feature does not support scrolling 

3 

00000008h 

bitFFeatNoUndo 

This feature does not support undo 

4 

00000010h 

bitFFeatNoCopy 

Copy will not preserve the feature data 

5 

00000020h 

bitFFeatMerge 

Support merge operation 

6 

00000040h 

bitFFeatComplexData 

The feature has complex structure 
instead of default simple structure 

7 

00000080h 

bitFFeatIdle 

Has Idle operation to perform 

8 

00000100h 

bitFFeatSimpleHdr 

The feature has simple default data 
structure 

9 

00000200h 

bitFFeatOneCell 

The feature‘s data array will be sorted 

10 

00000400h 

bitFFeatOverlapRefs 

This feature can have overlapping 
ranges 




Bits 

Mask 

Bit Name 

Contents 

11 

00000800h 

bitFFeatNotifyClear 

Send notification upon clearing all 
settings for the given feature reference 
range 

12 

00001000h 

bitFFeatNoMergeSqref 

Disable merge of feature reference 
ranges 

13 

00002000h 

bitFFeatSort 

Adjusted on Sort. Only valid with 
bitFFeatOneCell 



 

FEATINFO11: Shared Feature Info 11 Record (873h) 

Introduced in Excel 11 (2003) the FEATINFO11 record describes shared feature 
definitions and options or handling instructions for various shared features in Excel 
2003 such as Protection, Factoid (SmartTag) and Table. 
This record is similar to FEATINFO in Excel 2002, but has a better built in 
mechanism for round-tripping through earlier versions of Excel. Hence, starting from 
Excel 2003, FEATINFO is no longer used for saving Shared Features handling 
instructions. Instead, this FEATINFO11 should be used in its place. 
Likewise, there should be one FEATINFO11 record for each shared feature that 
exists in a workbook. This means, this block of data describes the common handling 
instructions of a shared feature of the same type regardless of whether or not the 
features are on the same or different sheets of a workbook. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the first two 
bytes of the record; =0873h 

6 

grbitFrt 

2 

FRT cell reference flag 
=0 currently 

8 

(Reserved) 

8 

Currently not used, and set to 0. 

16 

Isf 

4 

The shared feature type 
=5 for Table 

20 

grbitFlags 

4 

Bit flags of handling instructions (see table below). 



 
Currently, grbitFlags only has the following bits of handling instructions defined: 

Bits 

Mask 

Bit Name 

Contents 

0 

00000001h 

bitFFeatHover 

Support hover operation 

1 

00000002h 

bitFFeatSelect 

Support select operation 

2 

00000004h 

bitFFeatScroll 

This feature doesn‘t support 
scrolling 

3 

00000008h 

bitFFeatNoUndo 

This feature doesn‘t support undo 

4 

00000010h 

bitFFeatNoCopy 

Copy will not preserve the feature 
data 

5 

00000020h 

bitFFeatMerge 

Support merge operation 




Bits 

Mask 

Bit Name 

Contents 

6 

00000040h 

bitFFeatComplexData 

The feature has complex structure 
instead of default simple structure 

7 

00000080h 

bitFFeatIdle 

Has Idle operation to perform 

8 

00000100h 

bitFFeatSimpleHdr 

The feature has simple default data 
structure 

9 

00000200h 

bitFFeatOneCell 

The feature‘s data array will be 
sorted 

10 

00000400h 

bitFFeatOverlapRefs 

This feature can have overlapping 
ranges 

11 

00000800h 

bitFFeatNotifyClear 

Send notification upon clearing all 
settings for the given feature 
reference range 

12 

00001000h 

bitFFeatNoMergeSqref 

Disable merge of feature reference 
ranges 

13 

00002000h 

bitFFeatSort 

Adjusted on Sort. Only valid with 
bitFFeatOneCell 

14 

00004000h 

bitFFeatOneBlock 

Feat reference should only be one 
contiguous block of cells 

15 

00008000h 

bitFFeatDontSplit 

1. Feat reference should not be 
split into multiple references during 
reference adjust. 
2. Also does shrink the Feat when a 
cut-paste is done on an entire edge 
of the Feat. 

16 

00010000h 

bitFFeatNotifyChange 

Notify the feature proc when a data 
or formatting change occurs 

17 

00020000h 

bitFFeatNoEdgeExtend 

1. Feat reference should not be 
extended/adjusted when an insert 
operation is done immediately 
adjacent to but outside the FEAT 
reference. 
2. Also prevents the bottom/right 
edge of the FEAT reference from 
being "permanently anchored" to 
row 65,536 and/or column IV of the 
worksheet. 

18 

00040000h 

bitFFeatImportantUdr 

supports specific type of important 
Undo records 

27-19 

07F80000h 

(Reserved) 

Currently not used. 

28 

08000000h 

bitFFeat11 

Feat load/save through rtFeat11 
etc, is FRT to Excel 2002 and 
earlier 

31-29 

E0000000h 

(Reserved) 

Currently not used. 



 


FILEPASS: File Is Password-Protected (2Fh) 

If you type a protection password (File menu, Save As command, Options dialog 
box), the FILEPASS record appears in the BIFF file. The wProtPass field contains 
the encrypted password. All records after FILEPASS are encrypted (see the Office 
Open XML specification (Ecma Internation Standard 376) for further details). 
http://www.ecma-international.org/publications/standards/ECMA-376.htm 
Note: this record specifies a file protection password, as opposed to the PASSWORD 
record (type 13h), which specifies a sheet-level or workbook-level protection 
password. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

wProtPass 

4 

Encrypted password 



 

FILESHARING: File-Sharing Information (5Bh) 

This record stores file-sharing options selected in the Options dialog box, accessed 
by using the Save As command (File menu). The write reservation password 
entered in the dialog box is encrypted to an integer, wResPass. This record also 
contains the user name of the file‘s creator, stUNWriteRes. 

Changes for BIFF7 

There are minor changes to the behavior of this record in BIFF7. For Excel 7.0 
workbooks without shared lists, this record behaves as it does in BIFF5. 
For Excel 7.0 workbooks with shared lists, there are both FILESHARING and 
FILESHARING2 records in the Book stream. In this case, FILESHARING always 
contains a dummy password. FILESHARING2 contains either a dummy password if 
the workbook is not write-protected or a valid password if the workbook is write-
protected. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

fReadOnlyRec 

2 

=1 if the Read Only Recommended option is 
selected in the Options dialog box 

6 

wResPass 

2 

Encrypted password (if this field is 0 (zero), there is 
no write reservation password) 

8 

cch 

1 

Length of the user name 

9 

stUNWriteRes 

var 

User name 



 

FILESHARING2: File-Sharing Information for Shared Lists 
(1A5h) 

In Excel 7.0 workbooks with shared lists, FILESHARING2 contains either a dummy 
password if the workbook is not write-protected or a valid password if the workbook 
is write-protected. If the workbook does not contain shared lists, this record does 
not appear in the file. 
This record does not appear in BIFF5 files. 


Record Data 

Offset 

Field Name 

Size 

Contents 

4 

fReadOnlyRec 

2 

=1 if the Read Only Recommended option is 
selected in the Options dialog box 

6 

wResPass 

2 

Encrypted password (if this field is 0 (zero), there is 
no write reservation password) 

8 

cch 

1 

Length of the user name 

9 

stUNWriteRes 

var 

User name 



 

FILTERMODE: Sheet Contains Filtered List (9Bh) 

If the sheet contains a filtered list, the file will contain a FILTERMODE record. This 
record has no record data field. 

FMQRY: Filemaker queries (8c6h) 

This is a Mac Excel FRT record. It stores the information for Filemaker queries. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the first two 
bytes of the record; =08c5h 

6 

grbitFrt 

2 

FRT flags; must be zero 

8 

grbit 

4 

Flags 

12 

cchName 

2 

 

14 

rgchName 

var 

 



The grbit field contains the following option flags: 

Offset 

Bits 

Mask 

Flag Name 

Contents 

0 

0 

0001h 

fPrompt 

1= 

0 

15-1 

FFFEh 

(Reserved) 

Reserved; must be zero 

1 

15-0 

FFFFh 

(Reserved) 

Reserved; must be zero 



FMSQRY: Filemaker queries (8c7h) 

This is a Mac Excel FRT record. Same as FMQRY, it stores the information for 
Filemaker Server queries. 

FNGRP12: Function Group (898h) 

This record stores a name of a current function group. 

Offset 

Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the 
first two bytes of the record; =0898h 

6 

grbitFrt 

2 

FRT cell reference flag; =0 currently 

8 

(Reserved) 

8 

Currently not used, and set to 0 

16 

astFnGrp 

var 

Function group name; ASCII string 




FNGROUPCOUNT: Built-in Function Group Count (9Ch) 

This record stores the number of built-in function groups (Financial, Math & Trig, 
Date & Time, and so on) in the current version of Excel. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

cFnGroup 

2 

Number of built-in function groups 



 

FNGROUPNAME: Function Group Name (9Ah) 

This record stores the name of a custom function category. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

cch 

1 

Size of the function category name 

5 

rgch 

var 

Function category name 



 

FONT: Font Description (231h) 

The workbook font table contains at least five FONT records. FONT records are 
numbered as follows: ifnt=00h (the first FONT record in the table), ifnt=01h, 
ifnt=02h, ifnt=03h, ifnt=05h (minimum table), and then ifnt=06h, 
ifnt=07h, and so on. Note: ifnt=04h never appears in a BIFF file. This is for 
backward-compatibility with previous versions of Excel. If you read FONT records, 
remember to index the table correctly, skipping ifnt=04h. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

dyHeight 

2 

Height of the font (in units of 1/20th of a point). 

6 

grbit 

2 

Font attributes (see the following table). 

8 

icv 

2 

Index to the color palette. 

10 

bls 

2 

Bold style; a number from 100dec to 1000dec (64h to 
3E8h) that indicates the character weight (.boldness.). 
The default values are 190h for normal text and 2BCh for 
bold text. 

12 

sss 

2 

Superscript/subscript: 
00h= None 
01h= Superscript 
02h= Subscript 

14 

uls 

1 

Underline style: 
00h= None 
01h= Single 
02h= Double 
21h= Single Accounting 
22h= Double Accounting 

15 

bFamily 

1 

Font family, as defined by the Windows API LOGFONT 
structure. 

16 

bCharSet 

1 

Character set, as defined by the Windows API LOGFONT 
structure. 




17 

(Reserved) 

1 

Reserved; must be 0 (zero). 

18 

cch 

1 

Length of the font name. 

19 

rgch 

var 

Font name. 



 
The grbit field contains the following font attributes: 

Offset 

Bits 

Mask 

Flag Name 

Contents 

0 

0 

01h 

(Reserved) 

Reserved; must be 0 (zero) 

 

1 

02h 

fItalic 

=1 if the font is italic 

 

2 

04h 

(Reserved) 

Reserved; must be 0 (zero) 

0 

3 

08h 

fStrikeout 

=1 if the font is struck out 

 

4 

10h 

fOutline 

=1 if the font is outline style (Macintosh only) 

 

5 

20h 

fShadow 

=1 if the font is shadow style (Macintosh only) 

 

7 – 6 

C0h 

(Reserved) 

Reserved; must be 0 (zero) 

1 

7 – 0 

FFh 

(unused) 

 



 

FOOTER: Print Footer on Each Page (15h) 

The FOOTER record stores a print footer string for a sheet. This string appears at the 
bottom of every page when the sheet is printed. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

cch 

1 

Length of the footer string (bytes) 

5 

rgch 

var 

Footer string 



 

FORCEFULLCALCULATION: Force Full Calculation Mode 
(8A3h) 

This record stores the status of the forced calculation mode for the current 
workbook. 

Offset 

Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the 
first two bytes of the record; =08A3h 

6 

grbitFrt 

2 

FRT cell reference flag; =0 currently 

8 

(Reserved) 

8 

Currently not used, and set to 0 

16 

fNoDeps 

4 

=1 if the workbook is in the forced calculation 
mode, in which case dependencies are ignored, 
and all worksheets are marked to calculate 
fully every time the calculation is triggered. 
Stored as 4-byte integer value 



FORMAT: Number Format (41Eh) 

The FORMAT record describes a number format in the workbook. 

All the FORMAT records should appear together in a BIFF file. The order of FORMAT 
records in an existing BIFF file should not be changed. It is possible to write custom 
number formats in a file, but they should be added at the end of the existing FORMAT 
records. 


Record Data 

Offset 

Field Name 

Size 

Contents 

4 

ifmt 

2 

Format index code (for internal use only) 

6 

cch 

2 

Length of the string 

7 

grbit 

1 

Option Flags (described in Unicode Strings in BIFF8 
section) 

8 

rgb 

var 

Array of string characters 



 

Excel uses the ifmt field to identify built-in formats when it reads a file that was 
created by a different localized version. For more information about built-in formats, 
see .XF.. 

FORMULA: Cell Formula (6h) 

A FORMULA record describes a cell that contains a formula. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

rw 

2 

Row 

6 

col 

2 

Column 

8 

ixfe 

2 

Index to XF record 

10 

num 

8 

Current value of the formula (see text) 

18 

grbit 

2 

Option flags 

20 

chn 

4 

(See text) 

24 

cce 

2 

Length of the parsed expression 

26 

rgce 

var 

Parsed expression 



 
The chn field should be ignored when you read the BIFF file. If you write a BIFF file, 
the chn field must be 00000000h. 
The grbit field contains the following option flags: 

Bits 

Mask 

Flag Name 

Contents 

0 

0001h 

fAlwaysCalc 

Always calculate the formula. 

1 

0002h 

fCalcOnLoad 

Calculate the formula when the file is opened. 

2 

0004h 

(Reserved) 

 

3 

0008h 

fShrFmla 

=1 if the formula is part of shared formula group. 

15–4 

FFF0h 

(Reserved) 

 



 

For more information about shared formulas, see .SHRFMLA.. 
The rw field contains the 0-based row number. The col field contains the 0-based 
column number. 
If the formula evaluates to a number, the num field contains the current calculated 
value of the formula in 8-byte IEEE format. If the formula evaluates to a string, a 
Boolean value, or an error value, the most significant 2 bytes of the num field are 
FFFFh. 

A Boolean value is stored in the num field, as shown in the following table. For more 
information about Boolean values, see .BOOLERR.. 


Offset 

Field Name 

Size 

Contents 

0 

otBool 

1 

=1 always 

1 

(Reserved) 

1 

Reserved; must be 0 (zero) 

2 

f 

1 

Boolean value 

3 

(Reserved) 

3 

Reserved; must be 0 (zero) 

6 

fExprO 

2 

=FFFFh 



 

An error value is stored in the num field, as shown in the following table. For more 
information about error values, see .BOOLERR.. 

Offset 

Field Name 

Size 

Contents 

0 

otErr 

1 

=2 always 

1 

(Reserved) 

1 

Reserved; must be 0 (zero) 

2 

err 

1 

Error value 

3 

(Reserved) 

3 

Reserved; must be 0 (zero) 

6 

fExprO 

2 

=FFFFh 



 
If the formula evaluates to a string, the num field has the structure shown in the 
following table. 

Offset 

Field Name 

Size 

Contents 

0 

otString 

1 

=0 always 

1 

(Reserved) 

5 

Reserved; must be 0 (zero) 

6 

fExprO 

2 

=FFFFh 



 
The string value is not stored in the num field; instead, it is stored in a STRING 
record that immediately follows the FORMULA record. 

The cce field contains the length of the formula. The rgce field contains the 
formula in its parsed format. For more information, see .Microsoft Excel Formulas.. 

GCW: Global Column-Width Flags (ABh) 

This record contains an array of 256 flag bits, where each bit represents a column on 
the sheet. If a bit is true, it means the corresponding column has the Use Standard 
Width option turned on. If a bit is false, it means that the column has the Use 
Standard Width option turned off. If the Standard Width measurement was 
changed (that is, if it is no longer the default), Excel writes a STANDARDWIDTH 
record. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

cb 

2 

Number of bytes in the global column-width flags 

6 

grbitGCW 

2 

Global column-width flags for columns A through P 

8 

grbitGCW 

2 

Global column-width flags for columns Q through AF 

... 

... 

... 

... 

4+cb 

grbitGCW 

2 

Global column-width flags for columns IG through IV 



 
The grbitGCW field contains the following option flags: 

Bits 

Mask 

Flag Name 

Contents 

0 (LSB) 

0001h 

fGCWcol1 

Flag for column 1 (for example, column A) 




1 

0002h 

fGCWcol2 

Flag for column 2 (for example, column B) 

2 

0004h 

fGCWcol3 

Flag for column 3 (for example, column C) 

... 

... 

... 

... 

15 

8000h 

fGCWcol16 

Flag for column 16 (for example, column P) 



 

GRIDSET: State Change of Gridlines Option (82h) 

This record indicates the user changed the state of the Gridlines option in the Page 
Setup dialog box, Sheet tab. 
Record Data 

Offset 

Flag Name 

Size 

Contents 

4 

fGridSet 

2 

=1 if the user has ever changed the setting of the 
Gridlines option 



 

GUIDTYPELIB: VB Project TypeLib GUID (897h) 

This record stores TypeLib GUID corresponding to the compiled version of VB project. 

Offset 

Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the 
first two bytes of the record; =0897h 

6 

grbitFrt 

2 

FRT cell reference flag; =0 currently 

8 

(Reserved) 

8 

Currently not used, and set to 0 

16 

guid 

16 

TypeLib GUID corresponding to the compiled 
version of VB project. Stored as 16-byte (128-
bit) number 



GUTS: Size of Row and Column Gutters (80h) 

This record contains the size of the row and column gutters, measured in screen 
units. The row and column gutters are the spaces that contain outline symbols. 
They are located above column headings and to the left of row headings. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

dxRwGut 

2 

Size of the row gutter that appears to the left of the 
rows 

6 

dyColGut 

2 

Size of the column gutter that appears above the 
columns 

8 

iLevelRwMac 

2 

Maximum outline level (for the row gutter) 

10 

iLevelColMac 

2 

Maximum outline level (for the column gutter) 



 

HCENTER: Center Between Horizontal Margins (83h) 

If the Horizontally option is selected on the Margins tab in the Page Setup dialog 
box, fHCenter=1. 


Record Data 

Offset 

Field Name 

Size 

Contents 

4 

fHCenter 

2 

=1 if the sheet is to be centered between horizontal 
margins when printed 



 

HEADER: Print Header on Each Page (14h) 

The HEADER record specifies a print header string for a sheet. This string appears at 
the top of every page when the sheet is printed. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

cch 

1 

Length of the header string (bytes) 

5 

rgch 

var 

Header string 



 

HEADERFOOTER: Header Footer (89Ch) 

The HEADERFOOTER record stores information added in Office Excel 2007 for 
headers/footers. 


Offset 

Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the 
first two bytes of the record; =089Ch 

6 

grbitFrt 

2 

FRT cell reference flag; =0 currently 

8 

(Reserved) 

8 

Currently not used, and set to 0 

16 

guidSview 

16 

If this header FRT belongs to a specific sheet 
view (sview), the sheet view‘s GUID will be 
saved here. 

32 

grbitFlags 

2 

see text 

34 

cchHeaderEven 

2 

length of even header text 

36 

cchFooterEven 

2 

length of even footer text 

38 

cchHeaderFirst 

2 

length of first page header text 

40 

cchFooterFirst 

2 

length of first page footer text 

42 

rgchHeaderEven 

var 

even header text if non-zero length 

var 

rgchFooterEven 

var 

even footer text if non-zero length 

var 

rgchHeaderFirst 

var 

first page header text if non-zero length 

var 

rgchFooterFirst 

var 

first page footer text if non-zero length 



 
The grbitFlags field contains the fields listed in the following table. 

Bits 

Mask 

Name 

Contents 

0 

0001h 

fHFDiffOddEven 

=1 if different odd/even pages 

1 

0002h 

fHFDiffFirst 

=1 if different first page 

2 

0004h 

fHFScaleWithDoc 

=1 scales header/footer with 
document 

3 

0008h 

fHFAlignMargins 

=1 align header/footer with page 
margins 




Bits 

Mask 

Name 

Contents 

4..15 

FFF0h 

(Reserved) 

Reserved; must be 0 (zero) 



HFPicture: Header / Footer Picture (866h) 

Introducted in Excel 10 (2002) this BIFF record is an FRT record. It includes an 
embedded encoding of the contents of the picture, which may be in MSODRAWING or 
MSODRAWINGGROUP record format. Pictures contain large amounts of data and may 
be continued across multiple HFPICTURE records (see fContinue flag). 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the first two 
bytes of the record; =0866h 

6 

grbitFrt 

2 

FRT flags; must be zero 

8 

(unused) 

8 

Must be zero 

16 

rgf 

1 

Bit flags, see description below. 

15 

rgb 

var 

An embedded encoding of the contents of the picture; 
May be in MSODRAWING or MSODRAWINGGROUP record 
format as indicated in rgf flags listed below. 



 
The rgf field contains the following option flags: 

Bits 

Mask 

Flag Name 

Contents 

0 

01h 

fIsDrawing 

0= if the rgb portion of this record does not 
use MSODRAWING record format 
1= if this record uses MSODRAWING record 
format 

1 

02h 

fIsDrawingGroup 

0= if this record does not use 
MSODRAWINGGROUP record format 
1= if this record uses MSODRAWINGGROUP 
record format 

2 

04h 

fContinue 

0= if this record is the last or only record 
containing HFPicture data for this picture. 
1= if more of the HFPicture data is 
contained in additional HFPicture records 
following this record. 

3-7 

FCh 

(unused) 

Reserverd; must be zero 



 

HIDEOBJ: Object Display Options (8Dh) 

The HIDEOBJ record stores options selected in the Options dialog box, View tab. 
Record Data 

Offset 

Flag Name 

Size 

Contents 

4 

fHideObj 

2 

=2 if the Hide All option is turned on 
=1 if the Show Placeholders option is turned on 
=0 if the Show All option is turned on 



 


HLINK: Hyperlink (1B8h) 

The HLINK record stores a hyperlink. 
Record Data — BIFF8 

Offset 

Field Name 

Size 

Contents 

4 

rwFirst 

2 

First row of the hyperlink 

6 

rwLast 

2 

Last row of the hyperlink 

8 

colFirst 

2 

First column of the hyperlink 

10 

colLast 

2 

Last column of the hyperlink 

12 

rgbHlink 

var 

Hyperlink stream (from the Microsoft Office DLL; this 
stream is not documented) 



 

HLINKTOOLTIP: Hyperlink Tooltip (800h) 

Introduced in Excel 9 (2000) this is a FRT record. It contains the tooltip that 
appears when the mouse hovers over the hyperlink at the workbook location pointed 
to by the REF structure. Note: grbitFrt is omitted. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the first 
two bytes of the record; =0800h 

8 

REF 

8 

REF structure; see FRT Record Information 

16 

rgb 

var 

The hyperlink tooltip; a null-terminated unicode 
string 



 

HORIZONTALPAGEBREAKS: Explicit Row Page Breaks 
(1Bh) 

The HORIZONTALPAGEBREAKS record contains a list of explicit row page breaks. 
Record Data — BIFF8 

Offset 

Field Name 

Size 

Contents 

4 

cbrk 

2 

Number of page breaks 

6 

rgbrk 

var 

Array of brk structures 



 
The cbrk field contains the number of page breaks. Each element of the rgbrk 
structure contains three 2-byte integers: the first specifies the row of the break, the 
second specifies the starting column, and the third specifies the ending column for 
the break. All row and column numbers are 1-based, and the breaks occur after the 
row or column. This array is sorted by row, and then by the starting/ending column. 
No two page breaks may overlap. 
Record Data — BIFF7 and earlier 

Offset 

Field Name 

Size 

Contents 

4 

cbrk 

2 

Number of page breaks 

6 

rgrw 

var 

Array of rows 



 


The cbrk field contains the number of page breaks. The rgrw field is an array of 2-
byte integers that specifies rows. Excel sets a page break before each row contained 
in the list of rows in the rgrw field. The rows must be sorted in ascending order. 

IMDATA: Image Data (7Fh) 

The IMDATA record contains the complete description of a bitmapped graphic object, 
such as a drawing created by a graphics tool. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

cf 

2 

Image format: 
=02h, Windows metafile or Macintosh PICT format 
=09h, Windows bitmap format 
=0Eh, Native format (see text) 

6 

env 

2 

Environment from which the file was written: 
=1, Microsoft Windows 
=2, Apple Macintosh 

8 

lcb 

4 

Length of the image data 

12 

data 

var 

Image data 



 

For more information about the Apple Macintosh PICT file format, see 
http://developer.apple.com/documentation/mac/QuickDraw/QuickDraw-2.html. 
If the image is in Microsoft Windows bitmap format (cf=09h), the data field consists 
of a BITMAPCOREINFO data structure followed by the actual bitmap. The 
BITMAPCOREINFO data structure consists of a BITMAPCOREHEADER structure, 
followed by an array of RGBTRIPLE structures that define the color table. For more 
information about these structures, see the documentation for the Microsoft Windows 
Software Development Kit. 
Native format (cf=0Eh) stores an embedded object from another application. The 
image data is in the foreign application‘s format and cannot be directly processed by 
Excel. 

INDEX: Index Record (20Bh) 

Excel writes an INDEX record immediately after the BOF record for each worksheet 
substream in a BIFF file. For more information about the INDEX record, see .Finding 
Cell Records in BIFF Files.. 
Record Data — BIFF8 

Offset 

Field Name 

Size 

Contents 

4 

(Reserved) 

4 

Reserved; must be 0 (zero) 

8 

rwMic 

4 

First row that exists on the sheet 

12 

rwMac 

4 

Last row that exists on the sheet, plus 1 

16 

(Reserved) 

4 

Reserved; must be 0 (zero) 

20 

rgibRw 

var 

Array of file offsets to the DBCELL records for each 
block of ROW records. A block contains ROW records 
for up to 32 rows. For more information, see .Finding 
Cell Records in BIFF Files.. 



 


Record Data — BIFF7 and earlier 

Offset 

Field Name 

Size 

Contents 

4 

(Reserved) 

4 

Reserved; must be 0 (zero) 

8 

rwMic 

2 

First row that exists on the sheet 

10 

rwMac 

2 

Last row that exists on the sheet, plus 1 

12 

(Reserved) 

4 

Reserved; must be 0 (zero) 

16 

rgibRw 

var 

Array of file offsets to the DBCELL records for each 
block of ROW records. A block contains ROW records 
for up to 32 rows. For more information, see .Finding 
Cell Records in BIFF Files.. 



 
The rwMic field contains the number of the first row in the sheet that contains a 
value or a formula that is referenced by a cell in some other row. Because rows (and 
columns) are always stored 0-based rather than 1-based (as they appear on the 
screen), cell A1 is stored as row 0, cell A2 is row 1, and so on. The rwMac field 
contains the 0-based number of the last row in the sheet, plus 1. 

INTERFACEEND: End of User Interface Records (E2h) 

This record marks the end of the user interface section of the Book stream. It has 
no record data field. 

INTERFACEHDR: Beginning of User Interface Records 
(E1h) 

This record marks the beginning of the user interface section of the Book 
(Workbook) stream. In BIFF7 and earlier, it has no record data field. In BIFF8 and 
later, the INTERFACEHDR record data field contains a 2-byte word that is the code 
page. This is exactly the same as the cv field of the the CODEPAGE record. 
Record Data — BIFF8 

Offset 

Field Name 

Size 

Contents 

4 

Cv 

2 

Code page the file is saved in: 
01B5h (437 dec.) = IBM PC (Multiplan) 
8000h (32768 dec.) = Apple Macintosh 
04E4h (1252 dec.) = ANSI (Microsoft Windows) 



 

ITERATION: Iteration Mode (11h) 

The ITERATION record stores the Iteration option from the Options dialog box, 
Calculation tab. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

fIter 

2 

=1 if the Iteration option is on 



 

LABEL: Cell Value, String Constant (18h) 

A LABEL record describes a cell that contains a pre-BIFF8 string constant. Note: 
this was replaced in BIFF8 by LABELSST. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

rw 

2 

Row (0-based) 




6 

col 

2 

Column (0-based) 

8 

ixfe 

2 

Index to the XF record 

10 

cch 

2 

Length of the string (must be <= 255) 

12 

grbit 

1 

Option flags 

13 

rgb 

var 

Array of string characters 



 

LABELSST: Cell Value, String Constant/SST (FDh) 

A LABELSST record describes a cell that contains a string constant from the shared 
string table, which is new to BIFF8. 
Record Data — BIFF8 

Offset 

Field Name 

Size 

Contents 

4 

rw 

2 

Row (0-based) 

6 

col 

2 

Column (0-based) 

8 

ixfe 

2 

Index to the XF record 

10 

isst 

4 

Index into the SST record where actual string is stored 



 

LEFTMARGIN: Left Margin Measurement (26h) 

The LEFTMARGIN record specifies the width of the left margin, in inches. The num 
field is in 8-byte IEEE floating-point format. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

num 

8 

Left margin 



 

LHNGRAPH: Named Graph Information (95h) 

Record Data 
This record is similar to the .WKS NGRAPH record, except that the first 13 references 
are not written. Instead, there are 13 integers indicating whether the references X, 
A–F, and Data Label A–F are defined. 

LHRECORD: .WK? File Conversion Information (94h) 

This record contains information that Excel uses when it converts an .XLS file to a 
.WKS, .WK1, or .WK3 file, or vice versa. 
Record Data 
LHRECORD contains subrecords that resemble BIFF records. Each subrecord consists 
of the three fields described in the following table. 

Offset 
(within 
subrecord) 

 
Length 
(bytes) 

 
Contents 

0 

2 

Subrecord type (rtlh) 

2 

2 

Length of the subrecord data 

4 

var 

Subrecord data 



 
The following table describes the subrecords. 


rtlh 

Subrecord name 

Contents 

01h 

(Reserved) 

Reserved for future use. 

02h 

lhrtHpstGrHeader 

Header string for the /Graph Save Print help 
command. 

03h 

lhrtHpstGrFooter 

Footer string for the /Graph Save Print help command. 

04h 

lhrtNumGrLftMgn 

Left margin for the /Graph Save Print help command 
(IEEE number). 

05h 

lhrtNumGrRgtMgn 

Right margin for the /Graph Save Print help command 
(IEEE number). 

06h 

lhrtNumGrTopMgn 

Top margin for the /Graph Save Print help command 
(IEEE number). 

07h 

lhrtNumGrBotMgn 

Bottom margin for the /Graph Save Print help 
command (IEEE number). 

08h 

lhrtGrlh 

Current /Graph View data. Structure similar to the 
.WKS GRAPH record except that the first 13 references 
are not written. Instead, there are 13 integers that 
indicate whether the references X, A–F, and Data Label 
A–F are defined. 

09h 

lhrtcchGlColWidth 

Current global column width (integer). 

0Ah 

(Reserved) 

Reserved for future use. 

0Bh 

lhrttblType 

Current table type: 
=0, none (default) 
=1, table1 
=2, table2 

0Ch 

(Reserved) 

Reserved for future use. 



 

LIST12: Extra Table Data Introduced in Excel 2007 (877h) 

This record stores additional information about a specified Table. 
Record Data — BIFF8 only 

Offset 

Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the 
first two bytes of the record; =0877h 

6 

grbitFrt 

2 

FRT cell reference flag; =0 currently 

8 

(Reserved) 

8 

Currently not used, and set to 0 

16 

lsd 

2 

Type of Table data contained in this record 
(see below for details) 

18 

idList 

4 

Table unique ID 

22 

rgb 

var 

Data of the record (see below for details) 



 
The lsd field contains one of the following values: 

lsd 

Table data type 

00h 

Block-level formatting 

01h 

Table style client information 




02h 

Display name 



 
If lsd field contains 00h (block-level formatting), then the following data is stored in 
rgb block: 

Offset 

Name 

Size 

Contents 

0 

cbdxfHeader 

4 

Count of bytes in the Table header 
cells‘ DXF, =0 if no DXFis recorded in 
dxfHeader below; stored as 4-byte 
integer 

4 

istnHeader 

4 

The Table header cells‘ style number, 
=-1 if no style name is recorded in 
stHeader below; stored as 4-byte 
integer 

8 

cbdxfData 

4 

Count of bytes in the Table data cells‘ 
DXF, =0 if no DXFis recorded in 
dxfData below; stored as 4-byte 
integer 

12 

istnData 

4 

The Table data cells‘ style number, =-1 
if no style name is recorded in stData 
below; stored as 4-byte integer 

16 

cbdxfAgg 

4 

Count of bytes in the Table aggregate 
cells‘ DXF, =0 if no DXFis recorded in 
dxfAgg below; stored as 4-byte 
integer 

20 

istnAgg 

4 

The Table aggregate cells‘ style 
number, =-1 if no style name is 
recorded in stAgg below; stored as 4-
byte integer 

24 

cbdxfBorder 

4 

Count of bytes in the Table data cells 
border‘s DXF, =0 if no DXFis recorded 
in dxfBorder below; stored as 4-byte 
integer 

28 

cbdxfHeaderBorder 

4 

Count of bytes in the Table header 
cells border‘s DXF, =0 if no DXFis 
recorded in dxfHeaderBorder below; 
stored as 4-byte integer 

32 

cbdxfAggBorder 

4 

Count of bytes in the Table aggregate 
cells border‘s DXF, =0 if no DXFis 
recorded in dxfAggBorder below; 
stored as 4-byte integer 

36 

dxfHeader 

var 

The Table header cells‘ DXF 

var 

dxfData 

var 

The Table data cells‘ DXF 

var 

dxfAgg 

var 

The Table aggregated cells‘ DXF 

var 

dxfBorder 

var 

The Table data cells border‘s DXF 

var 

dxfHeaderBorder 

var 

The Table header cells border‘s DXF 

var 

dxfAggBorder 

var 

The Table aggregate cells border‘s DXF 

var 

stHeader 

var 

The Table header cells‘ style; string 

var 

stData 

var 

The Table data cells‘ style; string 




var 

stAgg 

var 

The Table aggregate cells‘ style; string 



 
If lsd field contains 01h (Table style information), then the following data is stored 
in rgb block: 

Offset 

Name 

Size 

Contents 

0 

grbitListStyleClient 

2 

The Table style client flags (see below 
for details) 

2 

stListStyleName 

var 

The Table style name; string 



 
The grbitListStyleClient field contains the following flags: 

Offset 

Bits 

Mask 

Name 

Contents 

0 

0 

0001h 

fFirstColumn 

=1 if the first column style is enabled 

 

1 

0002h 

fLastColumn 

=1 if the last column style is enabled 

 

2 

0004h 

fRowStripes 

=1 if the row banding is enabled 

 

3 

0008h 

fColumnStripes 

=1 if the column banding is enabled 

 

4 

0010h 

fRowHeaders 

=1 if the row header style is enabled 

 

5 

0020h 

fColumnHeaders 

=1 if the column header style is 
enabled 

 

6 

0040h 

fDefaultStyle 

=1 if this is the default Table style 

 

7-15 

FF80h 

(Reserved) 

Currently not used, and set to 0 



 
If lsd field contains 02h (display name), then the following data is stored in rgb 
block: 

Offset 

Name 

Size 

Contents 

0 

stListName 

var 

The Table name 

var 

stListComment 

var 

The Table comment 



LISTCF: List Cell Formatting (8c5h) 

This is a Mac Excel FRT record. Same as a CF but wrapped in an FRT header. This 
describes the cell formatting for the preceding listfield, if present. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the first two 
bytes of the record; =08c5h 

6 

grbitFrt 

2 

FRT flags; bitfFrtRef must be set to 1; see FRT Record 
Description 

8 

REF 

8 

REF structure; see FRT Record Description. 

16 

rtcf 

var 

CF structure; 



LISTCONDFMT: List Conditional Formatting (8c4h) 

This is a Mac Excel FRT record. Same as a CONDFMT but wrapped in an FRT header. 
This describes the conditional formatting for the preceding listfield, if present. 


Record Data 

Offset 

Field Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the first two 
bytes of the record; =08c4h 

6 

grbitFrt 

2 

FRT flags; bitfFrtRef must be set to 1; see FRT 
Record Description 

8 

REF 

8 

REF structure; see FRT Record Description. 

16 

rtcondfmt 

var 

CONDFMT structure; 



 

LISTDV: List Data Validation (8c3h) 

This is a Mac Excel FRT record. Same as a DV but wrapped in an FRT header. This 
describes the data validation for the preceding listfield, if present. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the first two 
bytes of the record; =08c3h 

6 

grbitFrt 

2 

FRT flags; bitfFrtRef must be set to 1; see FRT 
Record Description 

8 

REF 

8 

REF structure; see FRT Record Description. 

16 

rtdv 

var 

DV structure; 



 

LISTFIELD: List Field (8c2h) 

This is a Mac Excel FRT record. It stores one record for each field in the parent list 
object. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the first two 
bytes of the record; =08c2h 

6 

grbitFrt 

2 

FRT flags; bitfFrtRef must be set to 1; see FRT 
Record Description 

8 

REF 

8 

REF structure; see FRT Record Description. Contains a 
REF that can be adjusted by a non-list-aware version of 
Excel 

16 

wFileFlags 

2 

Flags 

18 

ref 

8 

REF structure; location of field on sheet as known by list-
aware version of Excel 

26 

rwCount 

4 

Rw to calc against (offset from 
frtheader.ref.ewFirst) or max count 

30 

wFieldFlags 

2 

 

32 

cchName 

2 

 

38 

cchFmla 

2 

 




40 

Rgb 

var 

Name, fmla, xfmtr 



 
The wFileFlags field contains the following option flags: 

Bits 

Mask 

Flag Name 

Contents 

0 

0001h 

fHasDval 

1= 

1 

0002h 

fHasCondFmt 

1= 

15-2 

FFFCh 

(Reserved) 

Reserved; must be zero 



 

LISTOBJ: List Object (8c1h) 

This is a Mac Excel FRT record. It stores the information for list object. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the first two 
bytes of the record; =08c1h 

6 

grbitFrt 

2 

FRT flags; bitfFrtRef must be set to 1; see FRT 
Record Description 

8 

REF 

8 

REF structure; see FRT Record Description. Contains 
a REF that can be adjusted by a non-list-aware version 
of Excel 

16 

cFields 

2 

 

18 

cRecords 

2 

 

20 

ref 

8 

REF structure; location of field on sheet as known by a 
list-aware version of Excel 

28 

wListFlags1 

2 

 

30 

wListFlags2 

2 

 

32 

Rgsortflags 

6 

 

38 

cchName 

2 

Size of rgbName 

40 

rgbName 

var 

The name of the list. 



 

LNEXT: Extension information for borders in Mac Office 11 
(8c9h) 

This is a Chart FRT record. It stores the extended properties for a line or border. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the first two 
bytes of the record; =08c9h 

6 

grbitFrt 

2 

FRT flags; must be zero 

8 

padding 

8 

Reserved; must be zero 

16 

cvRGB 

4 

Line color in RGB format 

20 

lOpacity 

4 

Line opacity (from 0 to 65,536) 




24 

lnw 

4 

Line width 



 

LPR: Sheet Was Printed Using LINE.PRINT() (98h) 

If this record appears in a file, it indicates that the sheet was printed using the 
LINE.PRINT() macro function. The LPR record stores options associated with this 
function. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

grbit 

2 

Option flags 

6 

cchMargLeft 

2 

Left margin, expressed as a count of characters 

8 

cchMargRight 

2 

Right margin, expressed as a count of characters 

10 

cliMargTop 

2 

Top margin, expressed as a count of lines 

12 

cliMargBot 

2 

Bottom margin, expressed as a count of lines 

14 

cliPg 

2 

Number of lines per page 

16 

cch 

1 

Length of the printer setup string 

17 

rgch 

var 

Printer setup string 



 
The grbit field contains the following option flags: 

Offset 

Bits 

Mask 

Flag Name 

Contents 

0 

0 

01h 

fWait 

=1, alert the user after each sheet is printed 

 

1 

02h 

fFormatted 

=1, print headers and footers 

 

2 

04h 

fAutoLF 

=1, write only the carriage return (CR) 
character (no line feed) at the end of the line 

 

7–3 

F8h 

(unused) 

 

1 

7–0 

FFh 

(unused) 

 



 

MDTB: Block of Metadata Records (88Ah) 

This record stores a block of metadata records. 
Record Data — BIFF8 only 

Offset 

Name 

Size 

Contents 

4 

Rt 

2 

Record type; this matches the BIFF rt in the 
first two bytes of the record; =088Ah 

6 

grbitFrt 

2 

FRT cell reference flag; =0 currently 

8 

(Reserved) 

8 

Currently not used, and set to 0 

16 

rgmdir 

var 

Block of metadata records 



 
The rgmdir field contains an array of 8-byte long metadata records of the following 
structure: 

Offset 

Name 

Size 

Contents 

0 

imdt 

4 

Index of metadata record type amongst 
MDTINFO records; 1-based index stored as a 
4-byte integer value 




4 

mdd 

4 

Index of metadata record value in the storage 
corresponding to record type 



 

MDTINFO: Information about a Metadata Type (884h) 

This record stores information about a single metadata type. 
Record Data — BIFF8 only 

Offset 

Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the 
first two bytes of the record; =0884h 

6 

grbitFrt 

2 

FRT cell reference flag; =0 currently 

8 

(Reserved) 

8 

Currently not used, and set to 0 

16 

grbit 

4 

Metadata type flags 

20 

stName 

var 

Metadata type name; string 



 
The grbit field contains the following metadata type flags: 

Offset 

Bits 

Mask 

Name 

Contents 

0 

0 

00000001h 

ghostRow 

=1 if metadata is copied 
to/from a ghost row 

 

1 

00000002h 

ghostCol 

=1 if metadata is copied 
to/from a ghost column 

 

2 

00000004h 

edit 

=1 if metadata survives editing 
of a cell value 

 

3 

00000008h 

delete 

=1 if metadata survives 
deletion of a cell value 

 

4 

00000010h 

copy 

=1 if metadata is copied with a 
cell 

 

5 

00000020h 

pasteAll 

=1 if metadata is populated by 
"Paste Special: All" 

 

6 

00000040h 

pasteFormulas 

=1 if metadata is populated by 
"Paste Special: Formulas" 

 

7 

00000080h 

pasteValues 

=1 if metadata is populated by 
"Paste Special: Values" 

 

8 

00000100h 

pasteFormats 

=1 if metadata is populated by 
"Paste Special: Formats" 

 

9 

00000200h 

pasteComments 

=1 if metadata is populated by 
"Paste Special: Comments" 

 

10 

00000400h 

pasteDataValidation 

=1 if metadata is populated by 
"Paste Special: Validation" 

 

11 

00000800h 

pasteBorders 

=1 if metadata is populated 
with borders 

 

12 

00001000h 

pasteColWidths 

=1 if metadata is populated by 
"Paste Special: Column widths" 




 

13 

00002000h 

pasteNumberFormats 

=1 if metadata is populated 
with number formats 

 

14 

00004000h 

merge 

=1 if metadata survives cell 
merge 

 

15 

00008000h 

splitFirst 

=1 if when a merged cell is 
split its metadata is copied to 
the first resulting cell 

 

16 

00010000h 

splitAll 

=1 if when a merged cell is 
split its metadata is copied to 
all of the resulting cells 

 

17 

00020000h 

rowColShift 

=1 if metadata survives 
shifting due to row/column 
insertion/deletion 

 

18 

00040000h 

clearAll 

=1 if metadata survives "Clear: 
All" 

 

19 

00080000h 

clearFormats 

=1 if metadata survives "Clear: 
Formats" 

 

20 

00100000h 

clearContents 

=1 if metadata survives "Clear: 
Contents" 

 

21 

00200000h 

clearComments 

=1 if metadata survives "Clear: 
Comments" 

 

22 

00400000h 

assign 

=1 if metadata is propagated 
by formula assignment 
operation 

 

23-
27 

0F800000h 

(Reserved) 

Currently not used, and set to 
0 

 

28 

10000000h 

coerce 

=1 if value metadata is safe to 
strip away on coercion 

 

29 

20000000h 

adjust 

=1 if metadata is location-
aware: needs adjustment, 
cannot be shared 

 

30 

40000000h 

cellMeta 

=1 if cell metadata type; 
=0 if value metadata type 

 

31 

80000000h 

(Reserved) 

Currently not used, and set to 
0 



MDXKPI: Key Performance Indicator Mdx Metadata (889h) 

This record stores key performance indicator mdx metadata. 
Record Data — BIFF8 only 

Offset 

Name 

Size 

Contents 

4 

Rt 

2 

Record type; this matches the BIFF rt in the 
first two bytes of the record; =0889h 

6 

grbitFrt 

2 

FRT cell reference flag; =0 currently 

8 

(Reserved) 

8 

Currently not used, and set to 0 




16 

istrConnName 

4 

Index of connection name in string store 

20 

tfnSrc 

1 

Tag of the Cube function producing mdx 
metadata 

21 

kpiprop 

1 

Key performance indicator property 

22 

istrKPIName 

4 

Index of member unique name in string store 

26 

istrMbrKPI 

4 

Index of key performance indicator name in 
string store 



 
The tfnSrc field contains one of the following values: 

tfnSrc 

Cube function 

07h 

CUBEKPIMEMBER 



 
The kpiprop field contains one of the following values: 

kpiprop 

Key performance indicator property 

01h 

Value 

02h 

Goal 

03h 

Status 

04h 

Trend 

05h 

Weight 

06h 

Current time member 



MDXPROP: Member Property Mdx Metadata (888h) 

This record stores member property mdx metadata. 
Record Data — BIFF8 only 

Offset 

Name 

Size 

Contents 

4 

Rt 

2 

Record type; this matches the BIFF rt in the 
first two bytes of the record; =0888h 

6 

grbitFrt 

2 

FRT cell reference flag; =0 currently 

8 

(Reserved) 

8 

Currently not used, and set to 0 

16 

istrConnName 

4 

Index of connection name in string store 

20 

tfnSrc 

1 

Tag of the Cube function producing mdx 
metadata 

21 

istrMbr 

4 

Index of member unique name in string store 

25 

istrProp 

4 

Index of property name in string store 



 
The tfnSrc field contains one of the following values: 

tfnSrc 

Cube function 

06h 

CUBEMEMBERPROPERTY 



MDXSET: Set Mdx Metadata (887h) 

This record stores set mdx metadata. 
Record Data — BIFF8 only 

Offset 

Name 

Size 

Contents 

4 

Rt 

2 

Record type; this matches the BIFF rt in the 
first two bytes of the record; =0887h 




6 

grbitFrt 

2 

FRT cell reference flag; =0 currently 

8 

(Reserved) 

8 

Currently not used, and set to 0 

16 

istrConnName 

4 

Index of connection name in string store 

20 

tfnSrc 

1 

Tag of the Cube function producing mdx 
metadata 

21 

sso 

1 

Set sort order 

22 

istrSetDef 

4 

Index of mdx set definition in string store 

26 

cistr 

4 

Number of member indices 

30 

rgistr 

var 

Indices of member unique names in string 
store, an array of 4 byte integer values of the 
length cistr 



 
The tfnSrc field contains one of the following values: 

tfnSrc 

Cube function 

03h 

CUBESET 

04h 

CUBESETCOUNT 



 
The sso field contains one of the following values: 

sso 

Cube function 

00h 

Unsorted 

01h 

Ascending 

02h 

Descending 

03h 

Alpha ascending 

04h 

Alpha descending 

05h 

Natural ascending 

06h 

Natural descending 



MDXSTR: MDX metadata string (885h) 

This record stores mdx metadata string. 
Record Data — BIFF8 only 

Offset 

Name 

Size 

Contents 

4 

Rt 

2 

Record type; this matches the BIFF rt in the 
first two bytes of the record; =0885h 

6 

grbitFrt 

2 

FRT cell reference flag; =0 currently 

8 

(Reserved) 

8 

Currently not used, and set to 0 

16 

St 

var 

Mdx metadata string; string 



MDXTUPLE: Tuple Mdx Metadata (886h) 

This record stores tuple mdx metadata. 
Record Data — BIFF8 only 

Offset 

Name 

Size 

Contents 

4 

Rt 

2 

Record type; this matches the BIFF rt in the 
first two bytes of the record; =0886h 

6 

grbitFrt 

2 

FRT cell reference flag; =0 currently 




8 

(Reserved) 

8 

Currently not used, and set to 0 

16 

istrConnName 

4 

Index of connection name in string store 

20 

tfnSrc 

1 

Tag of the Cube function producing mdx 
metadata 

21 

cistr 

4 

Number of member indices 

25 

rgistr 

var 

Indices of member unique names in string 
store, an array of 4 byte integer values of the 
length cistr 



 
The tfnSrc field contains one of the following values: 

tfnSrc 

Cube function 

01h 

CUBEMEMBER 

02h 

CUBEVALUE 

05h 

CUBERANKEDMEMBER 



MERGECELLS: Merged Cells (E5h) 

This record stores all merged cells. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

cmcs 

2 

Count of REF structures 

6 

rgRef 

var 

Array of REF structures 



 

MKREXT: Extension information for markers in Mac Office 
11 (8cah) 

This is a Chart FRT record. It stores the extended properties for markers. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the first two 
bytes of the record; =08CAh 

6 

grbitFrt 

2 

FRT flags; must be zero 

8 

padding 

8 

Reserved; must be zero 

16 

cvRGBFore 

4 

Marker foreground color in RGB format 

20 

cvRGBBack 

4 

Marker background color in RGB format 

24 

lOpacity 

4 

Marker opacity (from 0 to 65,536) 



 

MMS: ADDMENU/DELMENU Record Group Count (C1h) 

This record stores the number of ADDMENU groups and DELMENU groups in the Book 
stream. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

caitm 

1 

Number of ADDMENU record groups 

5 

cditm 

1 

Number of DELMENU record groups 



 


MSODRAWING: Microsoft Office Drawing (ECh) 

This record contains a drawing object provided by the Microsoft Office Drawing tool. 
For more information on this file format, see Microsoft Office Drawing Binary File 
Format specification. 
Record Data — BIFF8 

Offset 

Field Name 

Size 

Contents 

4 

rgMSODrawing 

var 

Microsoft Office Drawing data 



 

MSODRAWINGGROUP: Microsoft Office Drawing Group 
(EBh) 

This record contains a group drawing object provided by the Microsoft Office Drawing 
tool. For more information on this file format, see Microsoft Office Drawing Binary 
File Format specification. 
Record Data — BIFF8 

Offset 

Field Name 

Size 

Contents 

4 

rgMSODrawiGr 

var 

Microsoft Office Drawing group data 



 

MSODRAWINGSELECTION: Microsoft Office Drawing 
Selection (EDh) 

This record contains a selection of drawing objects. The objects are provided by the 
Microsoft Office Drawing tool. For more information on this file format, see Microsoft 
Office Drawing Binary File Format specification. 
Record Data — BIFF8 

Offset 

Field Name 

Size 

Contents 

4 

rgMSODrSelr 

var 

Microsoft Office Drawing selection data 



 

MTRSETTINGS: Multi-threaded Calculation Settings (89Ah) 

This record stores multi-threaded calculation settings. 

Offset 

Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in 
the first two bytes of the record; =089Ah 

6 

grbitFrt 

2 

FRT cell reference flag; =0 currently 

8 

(Reserved) 

8 

Currently not used, and set to 0 

16 

fMTREnabled 

4 

=1 if multi-threaded calculation is 
enabled; stored as 4-byte integer value 

20 

fUserSetThreadCount 

4 

=1 if the thread count was manually 
specified by the user; stored as 4-byte 
integer value 

24 

cUserThreadCount 

4 

The count of calc threads as specified by 
the user; stored as 4-byte integer value 



MULBLANK: Multiple Blank Cells (BEh) 

The MULBLANK record stores up to the equivalent of 256 BLANK records; the 
MULBLANK record is a file size optimization. The number of ixfe fields can be 


determined from the ColLast field and is equal to (colLast-colFirst+1). The 
maximum length of the MULBLANK record is (256x2+10)=522 bytes, because Excel 
can have at most 256 columns. Note: storing 256 blank cells in the MULBLANK 
record takes 522 bytes as compared with 2,560 bytes for 256 BLANK records. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

rw 

2 

Row number (0-based) 

6 

colFirst 

2 

Column number (0-based) of the first column of the 
multiple RK record 

8 

rgixfe 

var 

Array of indexes to XF records 

10 

colLast 

2 

Last column containing the BLANKREC structure 



 

MULRK: Multiple RK Cells (BDh) 

The MULRK record stores up to the equivalent of 256 RK records; the MULRK record is 
a file size optimization. The number of 6-byte RKREC structures can be determined 
from the ColLast field and is equal to (colLast-colFirst+1). The maximum 
length of the MULRK record is (256x6+10)=1546 bytes, because Excel has at most 
256 columns. Note: storing 256 RK numbers in the MULRK record takes 1,546 bytes 
as compared with 3,584 bytes for 256 RK records. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

rw 

2 

Row number (0-based) 

6 

colFirst 

2 

Column number (0-based) of the first column of the 
multiple RK record 

8 

rgrkrec 

var 

Array of 6-byte RKREC structures 

var 

colLast 

2 

Last column containing the RKREC structure 



 
The RKREC structure is defined as follows: 
typedef struct rkrec 
{ 
SHORT ixfe; /* index to XF record */ 
long RK; /* RK number */ 
} 
RKREC; 


NAME: Defined Name (218h) 

The NAME record describes a defined name in the workbook. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

grbit 

2 

Option flags 

6 

chKey 

1 

Keyboard shortcut 

7 

cch 

1 

Length of the name text (in characters) 

8 

cce 

2 

Length of the name definition 




Offset 

Field Name 

Size 

Contents 

10 

ixals 

2 

Index to the sheet that contains this name, if the 
name is a local name (see text) 

12 

itab 

2 

1-based index into the sheets in the current book, 
where the list is arranged by the visible order of 
the tabs. 

14 

cchCustMenu 

1 

Length of the custom menu text 

15 

cchDescription 

1 

Length of the description text 

16 

cchHelptopic 

1 

Length of the help topic text 

17 

cchStatustext 

1 

Length of the status bar text 

18 

rgch 

var 

Name text (grbit/rgb fields as defined in 
.Unicode Strings in BIFF8..) 

var 

rgce 

var 

Name definition (see text) 

var 

rgchCustMenu 

var 

Custom menu text 

var 

rgchDescr 

var 

Description text 

var 

rgchHelptopic 

var 

Help topic text 

var 

rgchStatustext 

var 

Status bar text 



 
The grbit field contains the following option flags: 

Bits 

Mask 

Flag Name 

Contents 

0 

0001h 

fHidden 

=1 if the name is hidden 

1 

0002h 

fFunc 

=1 if the name is a function 

2 

0004h 

fOB 

=1 if the name is a Visual Basic procedure 

3 

0008h 

fProc 

=1 if the name is a function or command name on a 
macro sheet 

4 

0010h 

fCalcExp 

=1 if the name contains a complex function 

5 

0020h 

fBuiltin 

=1 if the name is a built-in name 

11–6 

0FC0h 

fgrp 

Function group index 

12 

1000h 

fBig 

=1 if the name refers to binary data (see text) 

15–13 

C000h 

(Reserved) 

 



 
If the fBig bit in the grbit field is equal to 1, the NAME record contains a name 
attached to binary data. These names can be created only by calling the 
xlDefineBinaryName function from the Microsoft Excel C API. The first byte is the 
length of the name, which is followed by the name string. Following the name string 
is the data to which the name refers. The data can be up to 232 bytes long and can 
span multiple CONTINUE records. 
The fCalcExp bit is set if the name definition contains a function that returns an 
array (for example, TREND, MINVERSE), contains a ROW or COLUMN function, or 
contains a user-defined function. 


The chKey byte is significant only when the fProc bit is set in the grbit field. 
chKey is the keyboard shortcut for a command macro name. If the name is not a 
command macro name or has no keyboard shortcut, chKey is meaningless. 
The cch field contains the length of the name text, and the rgch field contains the 
text itself. The cce field contains the length of the name definition, and the rgce 
field contains the definition itself. The location of rgce within the record depends on 
the length of the name text (rgch) field. 

The name definition (rgce) is stored in the Excel parsed format. For more 
information, see .Microsoft Excel Formulas.. 
The NAME record stores two types of names: global names and local names. A global 
name is defined for an entire workbook, and a local name is defined on a single 
sheet. For example, MyName is a global name, whereas Sheet1!MyName is a local 
name. The ixals field in the NAME record is nonzero for local names and will index 
the list of EXTERNSHEET records for the sheets in the workbook. 
All NAME records should appear together in a BIFF file. The order of NAME records in 
an existing BIFF file should not be changed. You can add new names to a file, but 
you should add them at the end of the NAME list (block of NAME records). Excel 
saves the names to the BIFF file in alphabetic order, but this is not a requirement; 
Excel will sort the name list, if necessary, when it loads a BIFF file. 

Built-in Names 

Excel contains several built-in names — such as Criteria, Database, Auto_Open, and 
so on — for which the NAME records do not contain the actual name. Instead, cch 
always equals 1, and a single byte is used to identify the name as shown in the 
following table. 

Built-in name 

rgch 

Consolidate_Area 

00 

Auto_Open 

01 

Auto_Close 

02 

Extract 

03 

Database 

04 

Criteria 

05 

Print_Area 

06 

Print_Titles 

07 

Recorder 

08 

Data_Form 

09 

Auto_Activate 

0A 

Auto_Deactivate 

0B 

Sheet_Title 

0C 



 

NAMECMT: Name Comment (894h) 

This record stores a comment associated with a specified name. 

Offset 

Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the 
first two bytes of the record; =0894h 




6 

grbitFrt 

2 

FRT cell reference flag; =0 currently 

8 

(Reserved) 

8 

Currently not used, and set to 0 

16 

cachName 

2 

Number of characters in the name; 2-byte 
unsigned integer value 

18 

cachComment 

2 

Number of characters in the comment; 2-byte 
unsigned integer value 

20 

rgach 

var 

ASCII name string of length cachName 
immediately followed by ASCII comment string 
of length cachComment 



NAMEFNGRP12: Extra Function Group (899h) 

This record stores a name of a function group, which is beyond 32 groups supported 
by Excel 2003 and earlier. 

Offset 

Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the 
first two bytes of the record; =0899h 

6 

grbitFrt 

2 

FRT cell reference flag; =0 currently 

8 

(Reserved) 

8 

Currently not used, and set to 0 

16 

cachName 

2 

Number of characters in the name; 2-byte 
unsigned integer value 

18 

fgrp 

2 

Number of the function group; 2-byte unsigned 
integer value 

20 

rgach 

var 

ASCII name string of length cachName 



NAMEPUBLISH: Publish to Excel Server Data for Name 
(893h) 

This record stores data concerning a name published to Excel Server. 

Offset 

Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in 
the first two bytes of the record; =0893h 

6 

grbitFrt 

2 

FRT cell reference flag; =0 currently 

8 

(Reserved) 

8 

Currently not used, and set to 0 

16 

grbitPublishFlags 

2 

Publish data flags (see below for details) 

18 

cachName 

2 

Number of characters in the name 

20 

rgach 

var 

ASCII name string of length cachName 



 
The grbitPublishFlags field contains the following flags: 

Offset 

Bits 

Mask 

Name 

Contents 

0 

0 

0001h 

fPublished 

=1 if the name is published to 
Excel Server 

 

1 

0002h 

fWorkbookParam 

=1 if the name is a workbook 
parameter on Excel Server 

 

2-15 

FFC0h 

(Reserved) 

Currently not used, and set to 0 




NOTE: Comment Associated with a Cell (1Ch) 

The NOTE record specifies a comment associated with a particular cell. In Excel 95 
(BIFF7) and earlier versions, this record stores a note (cell note). This feature was 
significantly enhanced in Excel 97, so the name was changed to .comment.. 
Record Data — BIFF8 

Offset 

Field Name 

Size 

Contents 

4 

rw 

2 

Row of the comment 

6 

col 

2 

Column of the comment 

8 

grbit 

2 

Options flag (see table below) 

10 

idObj 

2 

Object id for OBJ record that contains the comment 

12 

stAuthor 

var 

Name of the original comment author (as Unicode 
string) 



 
The grbit field contains the following option flags: 

Bits 

Mask 

Name 

Contents 

0 

0001h 

(Reserved) 

Reserved; must be 0 (zero) 

1 

0002h 

fShow 

=0 if the comment does not show when a mouse is not 
hovering over the cell (default) 

15 – 2 

FFFCh 

(Reserved) 

Reserved; must be 0 (zero) 



 
The rw and col fields specify the cell that contains the comment. The rw field 
contains the 0-based row number; the col field contains the 0-based column 
number. 
The idObj field denotes the id of the graphic object (OBJ record) that contains the 
comment. Each comment has a corresponding OBJ record in which the ot field 
specifies the object type as a Comment Shape. The text of the comment (as well as 
the formatting information) is in the corresponding OBJ record and its supporting 
records. 
The stAuthor field contains the name of the original author of the comment, as a 
byte-counted string; the count is an unsigned short (2-bytes) that precedes the 
string. The string itself is padded with NULL bytes until it is word-aligned. The 
NULLs appear after the count and before the string data. 
Record Data — BIFF7 and earlier 

Offset 

Field Name 

Size 

Contents 

4 

rw 

2 

Row of the note 

6 

col 

2 

Column of the note 

8 

cch 

2 

Length of the note (bytes) 

10 

rgch 

var 

Text of the note 



 
The cell is denoted by the rw and col fields. The rw field contains the 0-based row 
number. The col field contains the 0-based column number. 
The cch field contains the length of the note in bytes. The rgch field contains the 
text of the note in ASCII format. 
Notes longer than 2,048 characters (bytes) must be divided into several NOTE 
records, with each record containing no more than 2,048 characters. In this case, 
the first NOTE record contains the fields listed in the following table. 


Offset 

Field Name 

Size 

Contents 

4 

rw 

2 

Row of the note 

6 

col 

2 

Column of the note 

8 

cch 

2 

Total length of the note 

10 

rgch 

2048 

First 2,048 characters of the note 



 
Each successive NOTE record contains the following fields: 

Offset 

Field Name 

Size 

Contents 

4 

rw 

2 

=–1 always (FFFFh) 

6 

(Reserved) 

2 

Reserved; must be 0 (zero) 

8 

cch 

2 

Length of this section of the note 

10 

rgch 

var 

This section of the note 



 

NUMBER: Cell Value, Floating-Point Number (203h) 

A NUMBER record describes a cell containing a constant floating-point number. The 
rw field contains the 0-based row number. The col field contains the 0-based 
column number. The number is contained in the num field in 8-byte IEEE floating-
point format. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

rw 

2 

Row 

6 

col 

2 

Column 

8 

ixfe 

2 

Index to the XF record 

10 

num 

8 

Floating-point number value 



 

OBJ: Describes a Graphic Object (5Dh) 

BIFF files may contain several different variations of the OBJ record. They 
correspond to the graphic objects and dialog box controls available in Excel: line 
object, rectangle object, check box object, and so on. 

Record Data-BIFF8 

In BIFF8, the OBJ record contains a partial description of a drawing object, and the 
MSODRAWING, MSODRAWINGGROUP, and MSODRAWINGSELECTION records contain the 
remaining drawing object data. 
To store an OBJ record in BIFF8, Excel writes a collection of subrecords. The 
structure of a subrecord is identical to the structure of a BIFF record. Each 
subrecord begins with a 2-byte id number, ft (see the following table). Next a 2-
byte length field, cb, specifies the length of the subrecord data field. The subrecord 
data field follows the length field. 
The first subrecord is always ftCmo (common object data), and the last subrecord is 
always ftEnd. 

Subrecord 

Number 

Description 

ftEnd 

00h 

End of OBJ record 

(Reserved) 

01h 

 

(Reserved) 

02h 

 




Subrecord 

Number 

Description 

(Reserved) 

03h 

 

ftMacro 

04h 

Fmla-style macro 

ftButton 

05h 

Command button 

ftGmo 

06h 

Group marker 

ftCf 

07h 

Clipboard format 

ftPioGrbit 

08h 

Picture option flags 

ftPictFmla 

09h 

Picture fmla-style macro 

ftCbls 

0Ah 

Check box link 

ftRbo 

0Bh 

Radio button 

ftSbs 

0Ch 

Scroll bar 

ftNts 

0Dh 

Note structure 

ftSbsFmla 

0Eh 

Scroll bar fmla-style macro 

ftGboData 

0Fh 

Group box data 

ftEdoData 

10h 

Edit control data 

ftRboData 

11h 

Radio button data 

ftCblsData 

12h 

Check box data 

ftLbsData 

13h 

List box data 

ftCblsFmla 

14h 

Check box link fmla-style macro 

ftCmo 

15h 

Common object data 



 

ftCmo (15h) 

Offset 

Field Name 

Size 

Contents 

0 

ft 

2 

=ftCmo (15h) 

2 

cb 

2 

Length of ftCmo data 

4 

ot 

2 

Object type (see following table) 

6 

id 

2 

Object ID number 

8 

grbit 

2 

Option flags (see following table) 

14 

(Reserved) 

12 

Reserved; must be 0 (zero) 



 
The grbit field at byte 8 contains the following flag bits: 

Bits 

Mask 

Flag Name 

Contents 

0 

0001h 

fLocked 

=1 if the object is locked when the sheet is protected 

3 – 1 

000Eh 

(Reserved) 

Reserved; must be 0 (zero) 

4 

0010h 

fPrint 

=1 if the object is printable 

12–5 

1FE0h 

(Reserved) 

Reserved; must be 0 (zero) 

13 

2000h 

fAutoFill 

=1 if the object uses automatic fill style 

14 

4000h 

fAutoLine 

=1 if the object uses automatic line style 

15 

8000h 

(Reserved) 

Reserved; must be 0 (zero) 



 
The ot field contains the object type. 

ot 

Object type 

00 

Group 




01 

Line 

02 

Rectangle 

03 

Oval 

04 

Arc 

05 

Chart 

06 

Text 

07 

Button 

08 

Picture 

09 

Polygon 

0A 

(Reserved) 

0B 

Check box 

0C 

Option button 

0D 

Edit box 

0E 

Label 

0F 

Dialog box 

10 

Spinner 

11 

Scroll bar 

12 

List box 

13 

Group box 

14 

Combo box 

15 

(Reserved) 

16 

(Reserved) 

17 

(Reserved) 

18 

(Reserved) 

19 

Comment 

1A 

(Reserved) 

1B 

(Reserved) 

1C 

(Reserved) 

1D 

(Reserved) 

1E 

Microsoft Office drawing 



 

ftEnd (00h) 

The ftEnd file type marks the end of an OBJ record. 

Offset 

Name 

Size 

Contents 

0 

ft 

2 

=ftEnd (00h) 

2 

cb 

2 

Length of ftEnd (=00h) 



 

ftMacro (04h) 

Offset 

Name 

Size 

Contents 

0 

ft 

2 

=ftMacro (04h) 

2 

cb 

2 

Length of ftMacro 

4 

(Reserved) 

var 

 



 


ftButton (05h) 

Offset 

Name 

Size 

Contents 

0 

ft 

2 

=ftButton (05h) 

2 

cb 

2 

Length of ftButton 

4 

(Reserved) 

var 

 



 

ftGmo (06h) 

Offset 

Name 

Size 

Contents 

0 

ft 

2 

=ftGmo (06h) 

2 

cb 

2 

Length of ftGmo 

4 

(Reserved) 

var 

 



 

ftCf (07h) 

Offset 

Name 

Size 

Contents 

0 

ft 

2 

=ftCf (07h) 

2 

cb 

2 

Length of ftCf 

4 

(Reserved) 

var 

Reserved 



 

ftPioGrbit (08h) 

Offset 

Name 

Size 

Contents 

0 

ft 

2 

=ftPioGrbit (08h) 

2 

cb 

2 

Length of ftPioGrbit 

4 

(Reserved) 

var 

Reserved 



 

ftPictFmla (09h) 

Offset 

Name 

Size 

Contents 

0 

ft 

2 

=ftPictFmla (09h) 

2 

cb 

2 

Length of ftPictFmla 

4 

(Reserved) 

var 

Reserved 



 

ftCbls (0Ah) 

Offset 

Name 

Size 

Contents 

0 

ft 

2 

=ftCbls (0Ah) 

2 

cb 

2 

Length of ftCbls 

4 

(Reserved) 

var 

Reserved 



 

ftRbo (0Bh) 

Offset 

Name 

Size 

Contents 

0 

ft 

2 

=ftRbo (0Bh) 

2 

cb 

2 

Length of ftRbo 

4 

(Reserved) 

var 

Reserved 



 


ftSbs (0Ch) 

Offset 

Name 

Size 

Contents 

0 

ft 

2 

=ftSbs (0Ch) 

2 

cb 

2 

Length of ftSbs 

4 

(Reserved) 

var 

Reserved 



 

ftNts (0Dh) 

Offset 

Name 

Size 

Contents 

0 

ft 

2 

=ftNts (0Dh) 

2 

cb 

2 

Length of ftNts 

4 

(Reserved) 

var 

Reserved 



 

ftSbsFmla (0Eh) 

Offset 

Name 

Size 

Contents 

0 

ft 

2 

=ftSbsFmla (0Eh) 

2 

cb 

2 

Length of ftSbsFmla 

4 

(Reserved) 

var 

Reserved 



 

ftGboData (0Fh) 

The ftGboData file type contains group box object data. 

Offset 

Name 

Size 

Contents 

0 

ft 

2 

=ftGboData (0Fh) 

2 

cb 

2 

Length of ftGboData 

4 

(Reserved) 

var 

Reserved 



 

ftEdoData (10h) 

Offset 

Name 

Size 

Contents 

0 

ft 

2 

=ftEdoData (10h) 

2 

cb 

2 

Length of ftEdoData 

4 

(Reserved) 

var 

Reserved 



 

ftRboData (11h) 

Offset 

Name 

Size 

Contents 

0 

ft 

2 

=ftRboData (11h) 

2 

cb 

2 

Length of ftRboData 

4 

(Reserved) 

var 

Reserved 



 

ftCblsData (12h) 

Offset 

Name 

Size 

Contents 

0 

ft 

2 

=ftCblsData (12h) 

2 

cb 

2 

Length of ftCblsData 




4 

(Reserved) 

var 

Reserved 



 

ftLbsData (13h) 

Offset 

Name 

Size 

Contents 

0 

ft 

2 

=ftLbsData (13h) 

2 

cb 

2 

Length of ftLbsData 

4 

(Reserved) 

var 

Reserved 



 

ftCblsFmla (14h) 

Offset 

Name 

Size 

Contents 

0 

ft 

2 

=ftCblsFmla (14h) 

2 

cb 

2 

Length of ftCblsFmla 

4 

(Reserved) 

var 

Reserved 



 

Record Data — BIFF5 and BIFF7 

The first 36 bytes of every OBJ record are fields that are common to all object types. 
The remaining fields are object-specific and are described in separate sections 
following the common object fields. 
Common Object Fields 

Offset 

Name 

Size 

Contents 

4 

cObj 

4 

Count (1-based) of the objects in the file 

8 

OT 

2 

Object type - 
Group object: 
Line object: 
Rectangle object: 
Oval object: 
Arc object: 
Chart object: 
Text object: 
Button object: 
Picture object: 
Polygon object: 
Check box object: 
Option button object: 
Edit box object: 
Label object: 
Dialog frame object: 
Spinner object: 
Scroll bar object: 
List box object: 
Group box object: 
Drop-down object: 

 
OT = 00h 
OT = 01h 
OT = 02h 
OT = 03h 
OT = 04h 
OT = 05h 
OT = 06h 
OT = 07h 
OT = 08h 
OT = 09h 
OT = 0Bh 
OT = 0Ch 
OT = 0Dh 
OT = 0Eh 
OT = 0Fh 
OT = 10h 
OT = 11h 
OT = 12h 
OT = 13h 
OT = 14h 

10 

id 

2 

Object identification number 

12 

grbit 

2 

Option flags (see the following table) 

14 

colL 

2 

Column containing the upper-left corner of the object‘s 
bounding rectangle 




Offset 

Name 

Size 

Contents 

16 

dxL 

2 

X (horizontal) position of the upper-left corner of the 
object‘s bounding rectangle, relative to the left side of 
the underlying cell, expressed as 1/1024th of the cell‘s 
width 

18 

rwT 

2 

Row containing the upper-left corner of the object‘s 
bounding rectangle 

20 

dyT 

2 

Y (vertical) position of the upper-left corner of the 
object‘s bounding rectangle, relative to the top of the 
underlying cell, expressed as 1/1024th of the cell‘s height 

22 

colR 

2 

Column containing the lower-right corner of the object‘s 
bounding rectangle. 

24 

dxR 

2 

X (horizontal) position of the lower-right corner of the 
object‘s bounding rectangle, relative to the left side of 
the underlying cell, expressed as 1/1024th of the cell‘s 
width. 

26 

rwB 

2 

Row containing the lower-right corner of the object‘s 
bounding rectangle. 

28 

dyB 

2 

Y (vertical) position of the lower-right corner of the 
object‘s bounding rectangle, relative to the top of the 
underlying cell, expressed as 1/1024th of the cell‘s 
height. 

30 

cbMacro 

2 

Length of the FMLA structure that stores the definition of 
the attached macro; see FMLA Structure. Some objects 
may store the length of the FMLA structure in a cbFmla 
that immediately preceded the FMLA; in these objects, 
cbMacro is ignored. 

32 

(Reserved) 

6 

Reserved; must be 0 (zero). 



 
The grbit field at byte 12 contains the following flag bits: 

Offset 

Bits 

Mask 

Name 

Contents 

0 

0 

01h 

fSel 

=1 if the object is selected 

 

1 

02h 

fAutoSize 

=1 if the object moves and sizes with the cells 

 

2 

04h 

fMove 

=1 if the object moves with the cells (Format 
Object dialog box, Properties tab) 

 

3 

08h 

(Reserved) 

Reserved; must be 0 (zero) 

 

4 

10h 

fLocked 

=1 if the object is locked when the sheet is 
protected 

 

5 

20h 

(Reserved) 

Reserved; must be 0 (zero) 

 

6 

40h 

(Reserved) 

Reserved; must be 0 (zero) 

 

7 

80h 

fGrouped 

=1 if the object is part of a group of objects 

1 

0 

01h 

fHidden 

=1 if the object is hidden (this can be done 
only from a macro) 




 

1 

02h 

fVisible 

=1 if the object is visible 

 

2 

04h 

fPrint 

=1 if the object is printable 

 

7 – 3 

F8h 

(Reserved) 

Reserved; must be 0 (zero) 



 
Line Object Fields 

Offset 

Name 

Size 

Contents 

38 

icv 

1 

Index to the color palette for line color. 

39 

lns 

1 

Line style - 
Solid: lns = 0 
Dash: lns = 1 
Dot: lns = 2 
Dash-dot: lns = 3 
Dash-dot-dot: lns = 4 
Null (unused): lns = 5 
Dark gray: lns = 6 
Medium gray: lns = 7 
Light gray: lns = 8 

40 

lnw 

1 

Line weight - 
Hairline: lnw = 0 
Single: lnw = 1 
Double: lnw = 2 
Thick: lnw = 3 

41 

fAuto 

1 

Bit 0 = 1 if Automatic Border option is turned on 
(Format Object dialog box, Patterns tab). All 
other bits in fAuto are don‘t-care. 

42 

es 

2 

End style structure (see the following table). 

44 

iqu 

1 

Quadrant index (direction of line): 
Starts upper left, ends lower right: iqu = 0 
Starts upper right, ends lower left: iqu = 1 
Starts lower right, ends upper left: iqu = 2 
Starts lower left, ends upper right: iqu = 3 

45 

(Reserved) 

1 

Reserved; must be 0 (zero). 

46 

cchName 

1 

Length of the name (null if no name). 

47 

stName 

var 

Name (null if no name; may contain a padding byte 
to force word-boundary alignment). 

var 

fmla 

var 

FMLA structure (see the following section). 



 
The end style structure (es) describes the arrowheads on the end point of the line. 
The structure contains four 4-bit fields, as described in the following table. 

Offset 

Bits 

Mask 

Name 

Contents 

0 

3–0 

0Fh 

sest 

Arrowhead style - 
None: sest = 0 
Open: sest = 1 
Filled: sest = 2 
Double-ended open: sest = 3 
Double-ended filled: sest = 4 




 

7–4 

F0h 

sesw 

Arrowhead width - 
Narrow: sesw = 0 
Medium: sesw = 1 
Wide: sesw = 2 

1 

3–0 

0Fh 

sesl 

Arrowhead length - 
Short: sesl = 0 
Medium: sesl = 1 
Long: sesl = 2 

 

7–4 

F0h 

(unused) 

 



 

FMLA Structure 

The FMLA structure stores a parsed expression for the macro attached to the object. 
For more information about parsed expressions, see .Microsoft Excel Formulas.. The 
FMLA structure is null if the object does not have a macro attached. 
In some object types, the FMLA structure length is given by cbMacro in the common 
object fields. In other object types, the FMLA structure length is given by a cbFmla 
that immediately precedes the FMLA. In these object types, ignore cbMacro. There 
may be an optional padding byte at the end of the FMLA to force it to end on a word 
boundary. The FMLA structure has the following form: 

Offset 

Name 

Size 

Contents 

0 

cce 

2 

Length of the parsed expression. 

2 

(Reserved) 

4 

 

6 

rgce 

var 

Parsed expression (may contain a padding byte to force 
word-boundary alignment). 



 
Rectangle Object Fields 

Offset 

Name 

Size 

Contents 

38 

icvBack 

1 

Index to the color palette for background color. 

39 

icvFore 

1 

Index to the color palette for foreground color. 

40 

fls 

1 

Fill pattern. 

41 

fAuto 

1 

Bit 0 = 1 if the Automatic Fill option is turned on 
(Format Object dialog box, Patterns tab). All other 
bits in fAuto are don‘t-care. 

42 

icv 

1 

Index to the color palette for line color. 

43 

lns 

1 

Line style (see .Line Object Fields.). 

44 

lnw 

1 

Line weight (see .Line Object Fields.). 

45 

fAuto 

1 

Bit 0 = 1 if the Automatic Border option is turned on 
(Format Object dialog box, Patterns tab). All other 
bits in fAuto are don‘t-care. 

46 

frs 

2 

Frame style structure (see the following table). 

48 

cchName 

1 

Length of the name (null if no name). 

49 

stName 

var 

Name (null if no name; may contain a padding byte to 
force word-boundary alignment). 

var 

fmla 

var 

FMLA structure (see .FMLA Structure.). 




 The frame style structure (frs) contains 16 bits. Because dxyCorner overlaps the 
byte boundary, the structure is defined as a single 16-bit field instead of two 8-bit 
fields. 

Offset 

Bits 

Mask 

Name 

Contents 

0 

0 

0001h 

frt 

=1 if the rectangle has rounded corners 
(Format Object dialog box, Patterns tab) 

 

1 

0002h 

fShadow 

= 1 if the rectangle has a shadow border 
(Format Object dialog box, Patterns tab) 

 

9 – 2 

03FCh 

dxyCorner 

Diameter of the oval (actually a circle) that 
defines the rounded corners (if frt=1) 

 

15–10 

FC00h 

(unused) 

 



 
Oval Object Fields 

Offset 

Name 

Size 

Contents 

38 

icvBack 

1 

Index to the color palette for background color. 

39 

icvFore 

1 

Index to the color palette for foreground color. 

40 

fls 

1 

Fill pattern. 

41 

fAuto 

1 

Bit 0 = 1 if the Automatic Fill option is turned on 
(Format Object dialog box, Patterns tab). All other 
bits in fAuto are don‘t-care. 

42 

icv 

1 

Index to the color palette for line color. 

43 

lns 

1 

Line style (see .Line Object Fields.). 

44 

lnw 

1 

Line weight (see .Line Object Fields.). 

45 

fAuto 

1 

Bit 0 = 1 if the Automatic Border option is turned on 
(Format Object dialog box, Patterns tab). All other 
bits in fAuto are don‘t-care. 

46 

frs 

2 

Frame style structure (see the following table). 

48 

cchName 

1 

Length of the name (null if no name). 

49 

stName 

var 

Name (null if no name; may contain a padding byte to 
force word-boundary alignment). 

var 

fmla 

var 

FMLA structure (see .FMLA Structure.). 



 
The frame style structure (frs) contains 16 bits. dxyCorner is not used for oval 
objects. 

Offset 

Bits 

Mask 

Name 

Contents 

0 

0 

0001h 

frt 

(Not used for oval objects) 

 

1 

0002h 

fShadow 

=1 if the oval has a shadow border (Format 
Object dialog box, Patterns tab) 

 

2–9 

03FCh 

dxyCorner 

(Not used for oval objects) 

 

10–15 

FC00h 

(unused) 

 



 


Arc Object Fields 

Offset 

Name 

Size 

Contents 

38 

icvBack 

1 

Index to the color palette for background color. 

39 

icvFore 

1 

Index to the color palette for foreground color. 

40 

fls 

1 

Fill pattern. 

41 

fAuto 

1 

Bit 0 = 1 if the Automatic Fill option is turned on 
(Format Object dialog box, Patterns tab). All other 
bits in fAuto are don‘t-care. 

42 

icv 

1 

Index to the color palette for line color. 

43 

lns 

1 

Line style (see .Line Object Fields.). 

44 

lnw 

1 

Line weight (see .Line Object Fields.). 

45 

fAuto 

1 

Bit 0 = 1 if the Automatic Border option is turned on 
(Format Object dialog box, Patterns tab). All other 
bits in fAuto are don‘t-care. 

46 

iqu 

1 

Quadrant index (section of an oval describing the arc) - 
Upper-right quadrant of the oval: iqu = 0 
Upper-left quadrant of the oval: iqu = 1 
Lower-left quadrant of the oval: iqu = 2 
Lower-right quadrant of the oval: iqu = 3 

47 

(Reserved) 

1 

Reserved; must be 0 (zero). 

48 

cchName 

1 

Length of the name (null if no name). 

49 

stName 

var 

Name (null if no name; may contain a padding byte to 
force word-boundary alignment). 

var 

fmla 

var 

FMLA structure (see .FMLA Structure.). 



 
Chart Object Fields 

Offset 

Name 

Size 

Contents 

38 

icvBack 

1 

Index to the color palette for background color. 

39 

icvFore 

1 

Index to the color palette for foreground color. 

40 

fls 

1 

Fill pattern. 

41 

fAuto 

1 

Bit 0 = 1 if the Automatic Fill option is turned on 
(Format Object dialog box, Patterns tab). All other 
bits in fAuto are don‘t-care. 

42 

icv 

1 

Index to the color palette for line color. 

43 

lns 

1 

Line style (see .Line Object Fields.). 

44 

lnw 

1 

Line weight (see .Line Object Fields.). 

45 

fAuto 

1 

Bit 0 = 1 if the Automatic Border option is turned on 
(Format Object dialog box, Patterns tab). All other 
bits in fAuto are don‘t-care. 

46 

frs 

2 

Frame style structure (see .Rectangle Object Fields.). 




48 

grbit 

2 

Option flags (shown LSB to MSB): 
fLinked:1 =1 if linked to a chart sheet 
Reserved:15 Reserved; must be 0 (zero) 

50 

(Reserved) 

16 

Reserved; must be 0 (zero). 

66 

cchName 

1 

Length of the name (null if no name). 

67 

stName 

var 

Name (null if no name; may contain a padding byte to 
force word-boundary alignment). 

var 

fmla 

var 

FMLA structure (see .FMLA Structure.). 



 

An embedded chart BIFF substream immediately follows the chart object record. 
This embedded chart file begins with a BOF record and ends with an EOF record. For 
more information on this file format, see Excel Chart Records section. 
Text Object Fields 

Offset 

Name 

Size 

Contents 

38 

icvBack 

1 

Index to the color palette for background color. 

39 

icvFore 

1 

Index to the color palette for foreground color. 

40 

fls 

1 

Fill pattern. 

41 

fAuto 

1 

Bit 0 = 1 if the Automatic Fill option is turned on 
(Format Object dialog box, Patterns tab). All other 
bits in fAuto are don‘t-care. 

42 

icv 

1 

Index to the color palette for line color. 

43 

lns 

1 

Line style (see .Line Object Fields.). 

44 

lnw 

1 

Line weight (see .Line Object Fields.). 

45 

fAuto 

1 

Bit 0 = 1 if the Automatic Border option is turned on 
(Format Object dialog box, Patterns tab). All other 
bits in fAuto are don‘t-care. 

46 

frs 

2 

Frame style structure (see the preceding section 
.Rectangle Object Fields.). 

48 

cbText 

2 

Length of the object text. 

50 

(Reserved) 

2 

Reserved; must be 0 (zero). 

52 

cbRuns 

2 

Total length of all TXORUNS structures in the record. 

54 

ifntEmpty 

2 

If cbRuns=0, the text object is empty, and these 2 
bytes contain the index to the FONT record for the 
object. 
If the object contains text, cbRuns>0, and these 2 
bytes are reserved. 

56 

(Reserved) 

2 

Reserved; must be 0 (zero). 

58 

grbit 

2 

Option flags (see the following table). 




Offset 

Name 

Size 

Contents 

60 

rot 

2 

Orientation of text within the object boundary (Format 
Object dialog box, Alignment tab): 
=0, no rotation (text appears left to right) 
=1, text appears top to bottom; letters are upright 
=2, text is rotated 90 degrees counterclockwise 
=3, text is rotated 90 degrees clockwise 

62 

(Reserved) 

12 

Reserved; must be 0 (zero). 

74 

cchName 

1 

Length of the name (null if no name). 

75 

stName 

var 

Name (null if no name; may contain a padding byte to 
force word-boundary alignment). 

var 

fmla 

var 

FMLA structure (see .FMLA Structure.). 

var 

rgch 

var 

Object text; may contain a single padding byte at the 
end of the text for word-boundary alignment (cbText 
does not count this padding byte). 

var 

TXORUNS 

8 

TXORUNS structure (see .TXORUNS.). 

var 

TXORUNS 

8 

TXORUNS structure (see .TXORUNS.). 



 
The grbit field at byte 58 contains the following option flags: 

Offset 

Bits 

Mask 

Name 

Contents 

0 

0 

01h 

(Reserved) 

Reserved; must be 0 (zero) 

 

3–1 

0Eh 

alcH 

Horizontal text alignment: 
1 = left-aligned 
2 = centered 
3 = right-aligned 
4 = justified 

 

6–4 

70h 

alcV 

Vertical text alignment: 
1 = left-aligned 
2 = centered 
3 = right-aligned 
4 = justified 

 

7 

80h 

fAutoTextSize 

=1 if the Automatic Size option is 
turned on (Format Object dialog box, 
Alignment tab) 

1 

0 

01h 

(unused) 

 

 

1 

02h 

fLockText 

=1 if the Lock Text option is turned on 
(Format Object dialog box, Protection 
tab) 

 

2 

04h 

fFuzzy 

=1 if the object is selected (the broken 
border is displayed) 

 

7 – 3 

F8h 

(Reserved) 

Reserved; must be 0 (zero) 



 


TXORUNS 

The TXORUNS structure contains formatting information about the object text string. 
A TXORUNS structure occurs every time the text formatting changes. The TXORUNS 
structure is described in the following table. 

Offset 

Name 

Size 

Contents 

0 

ichFirst 

2 

Index to the first character to which the formatting 
applies 

2 

ifnt 

2 

Index to the FONT record 

4 

(Reserved) 

4 

 



 
There are always at least two TXORUNS structures in the text object record, even if 
the entire text string is normal font (ifnt=0). The last TXORUNS structure, which 
ends the formatting information for the string, always has ichFirst=cbText, and 
ifnt=0. 
Button Object Fields 

Offset 

Name 

Size 

Contents 

38 

icvBack 

1 

Index to the color palette for background color (fixed 
for buttons). 

39 

icvFore 

1 

Index to the color palette for foreground color (fixed 
for buttons). 

40 

fls 

1 

Fill pattern (fixed for buttons). 

41 

grbit 

1 

Option flags (fixed for buttons). 

42 

icv 

1 

Index to the color palette for line color (fixed for 
buttons). 

43 

lns 

1 

Line style (fixed for buttons). 

44 

lnw 

1 

Line weight (fixed for buttons). 

45 

fAuto 

1 

Bit 0 = 1 (fixed for buttons). 

46 

frs 

2 

Frame style structure (ignored for buttons). 

48 

cbText 

2 

Length of the object text. 

50 

(Reserved) 

2 

Reserved; must be 0 (zero). 

52 

cbRuns 

2 

Total length of all TXORUNS structures in record. 

54 

ifntEmpty 

2 

If cbRuns=0, the button object is empty, and these 2 
bytes contain the index to the FONT record for the 
object. 
If the object contains text, cbRuns>0, and these 2 
bytes are reserved. 

56 

(Reserved) 

2 

Reserved; must be 0 (zero). 

58 

grbit 

2 

Option flags (see the following table). 




Offset 

Name 

Size 

Contents 

60 

rot 

2 

Orientation of text within the object boundary (Format 
Object dialog box, Alignment tab): 
=0, no rotation (text appears left to right) 
=1, text appears top to bottom; letters are upright 
=2, text is rotated 90 degrees counterclockwise 
=3, text is rotated 90 degrees clockwise 

62 

(Reserved) 

6 

Reserved; must be 0 (zero). 

68 

grbit 

2 

Option flags (shown LSB to MSB): 
fDefault:1 = 1 if this is the default button 
fHelp:1 = 1 if this is the Help button 
fCancel:1 = 1 if this is the cancel button 
fDismiss:1 = 1 if this is the dismiss button 
Reserved:12 Reserved; must be 0 (zero) 

70 

accel 

2 

Accelerator key character. 

72 

accel2 

2 

Accelerator key character (East Asian versions only). 

74 

cchName 

1 

Length of the name (null if no name). 

75 

stName 

var 

Name (null if no name; may contain a padding byte to 
force word-boundary alignment). 

var 

fmla 

var 

FMLA structure (see .FMLA Structure.). 

var 

rgch 

var 

Object text; may contain a single padding byte at the 
end of the text for word-boundary alignment (cbText 
does not count this padding byte). 

var 

TXORUNS 

8 

TXORUNS structure (see .TXORUNS.). 

var 

TXORUNS 

8 

TXORUNS structure (see .TXORUNS.). 



 
The grbit field at byte 58 contains the following option flags: 

Offset 

Bits 

Mask 

Name 

Contents 

0 

0 

01h 

(Reserved) 

Reserved; must be 0 (zero) 

 

3–1 

0Eh 

alcH 

Horizontal text alignment: 
1 = left-aligned 
2 = centered 
3 = right-aligned 
4 = justified 

 

6–4 

70h 

alcV 

Vertical text alignment: 
1 = left-aligned 
2 = centered 
3 = right-aligned 
4 = justified 

 

7 

80h 

fAutoTextSize 

=1 if the Automatic Size option is turned 
on (Format Object dialog box, 
Alignment tab) 

1 

0 

01h 

(unused) 

 




 

1 

02h 

fLockText 

=1 if the Lock Text option is turned on 
(Format Object dialog box, Protection 
tab) 

 

2 

04h 

fFuzzy 

=1 if the object is selected (the broken 
border is displayed) 

 

7–3 

F8h 

(Reserved) 

Reserved; must be 0 (zero) 



 
Picture Object Fields 

Offset 

Name 

Size 

Contents 

38 

icvBack 

1 

Index to the color palette for background color. 

39 

icvFore 

1 

Index to the color palette for foreground color. 

40 

fls 

1 

Fill pattern. 

41 

fAuto 

1 

Bit 0 = 1 if the Automatic Fill option is turned on 
(Format Object dialog box, Patterns tab). All other 
bits in fAuto are don‘t-care. 

42 

icv 

1 

Index to the color palette for line color. 

43 

lns 

1 

Line style (see .Line Object Fields.). 

44 

lnw 

1 

Line weight (see .Line Object Fields.). 

45 

fAuto 

1 

Bit 0 = 1 if the Automatic Border option is turned on 
(Format Object dialog box, Patterns tab). All other 
bits in fAuto are don‘t-care. 

46 

frs 

2 

Frame style structure (see the preceding section 
.Rectangle Object Fields.). 

48 

cf 

2 

Image format: 
=00h Text format 
=01h Null format (no image data) 
=02h Windows metafile or Macintosh PICT format 
=09h Windows bitmap format 

50 

(Reserved) 

4 

Reserved; must be 0 (zero). 

54 

cbPictFmla 

2 

Length of the picture FMLA structure (the FMLA that 
contains the link to the picture). 

56 

(Reserved) 

2 

Reserved; must be 0 (zero). 

58 

grbit 

2 

Option flags (see the following table). 

60 

(Reserved) 

4 

Reserved; must be 0 (zero). 

64 

cchName 

1 

Length of the name (null if no name). 

65 

stName 

var 

Name (null if no name; may contain a padding byte to 
force word-boundary alignment). 

var 

fmla 

var 

Attached macro FMLA structure (see .FMLA Structure.). 

var 

PictFmla 

var 

Picture FMLA structure (see .FMLA Structure.). 

var 

(Reserved) 

4 

Reserved; must be 0 (zero). 



 
The grbit field at byte 58 contains the following option flags: 


Offset 

Bits 

Mask 

Name 

Contents 

0 

0 

01h 

fAutoPict 

=0 if the user manually sizes picture by dragging 
a handle 

 

1 

02h 

fDde 

=1 if the reference in the FMLA structure is a 
DDE reference 

 

2 

04h 

fIcon 

=1 if the picture is from a DDE link, and the only 
available representation of the picture is an icon 

 

7–3 

F8h 

(unused) 

 

1 

7–0 

FFh 

(unused) 

 



 

Sheet Background in Microsoft Excel for Windows 95 

The sheet background bitmap for worksheets and charts is stored as a hidden picture 
object that has the name __BkgndObj (the stName field at byte 65). An IMDATA 
record will also appear in the file to store the image description. 
Group Object Fields 

Offset 

Name 

Size 

Contents 

34 

(Reserved) 

4 

Reserved; must be 0 (zero). 

38 

idNext 

2 

Object ID number (id) of the object that follows the last 
object in this group. If there are no objects following the 
group, idNext=0. 

40 

(Reserved) 

16 

Reserved; must be 0 (zero). 



 
A Group OBJ record precedes the OBJ records for the group members. 
Polygon Object Fields 

Offset 

Name 

Size 

Contents 

38 

icvBack 

1 

Index to the color palette for background color. 

39 

icvFore 

1 

Index to the color palette for foreground color. 

40 

fls 

1 

Fill pattern. 

41 

fAuto 

1 

Bit 0 = 1 if the Automatic Fill option is turned on 
(Format Object dialog box, Patterns tab). All other 
bits in fAuto are don‘t-care. 

42 

icv 

1 

Index to the color palette for line color. 

43 

lns 

1 

Line style (see the preceding section .Line Object 
Fields.). 

44 

lnw 

1 

Line weight (see preceding section .Line Object Fields.). 

45 

fAuto 

1 

Bit 0 = 1 if the Automatic Border option is turned on 
(Format Object dialog box, Patterns tab). All other 
bits in fAuto are don‘t-care. 

46 

frs 

2 

Frame style structure (see the preceding section 
.Rectangle Object Fields.). 

48 

wstate 

2 

If bit 0 = 1, the polygon is closed. All other bits are 
don‘t-care. 




50 

(Reserved) 

10 

 

60 

iMacSav 

2 

Number of vertices in the polygon (1-based). 

62 

(Reserved) 

8 

 

70 

cchName 

1 

Length of the name (null if no name). 

71 

stName 

var 

Name (null if no name; may contain a padding byte to 
force word-boundary alignment). 

var 

fmla 

var 

FMLA structure (see .FMLA Structure.). 



 
For polygon objects, a COORDLIST record follows the OBJ record. 
Check Box Object Fields 

Offset 

Name 

Size 

Contents 

38 

icvBack 

1 

Index to the color palette for background color (fixed for 
check box objects). 

39 

icvFore 

1 

Index to the color palette for foreground color (fixed for 
check box objects). 

40 

fls 

1 

Fill pattern (ignored for check box objects). 

41 

fAuto 

1 

(Ignored for check box objects). 

42 

icv 

1 

Index to the color palette for line color (fixed for check 
box objects). 

43 

lns 

1 

Line style (ignored for check box objects). 

44 

lnw 

1 

Line weight (ignored for check box objects). 

45 

fAuto 

1 

(Ignored for check box objects). 

46 

frs 

2 

Frame style structure (ignored for check box objects). 

48 

(Reserved) 

10 

Reserved; must be 0 (zero). 

58 

grbit 

2 

Option flags (see the following table). 

60 

(Reserved) 

20 

Reserved; must be 0 (zero). 

80 

cchName 

1 

Length of the name (null if no name). 

81 

stName 

var 

Name (null if no name; may contain a padding byte to 
force word-boundary alignment). 

var 

cbFmla1 

2 

Length of the FMLA structure for the attached macro 
(never null). 

var 

fmla1 

var 

FMLA structure for the attached macro (see .FMLA 
Structure.). 

var 

cbFmla2 

2 

Length of the FMLA structure for the cell link (never 
null). 

var 

fmla2 

var 

FMLA structure for the cell link (see .FMLA Structure.). 

var 

cbText 

2 

Length of the object text (never null). 

var 

rgch 

var 

Object text; may contain a single padding byte at the 
end of the text for word-boundary alignment (cbText 
does not count this padding byte). 




Offset 

Name 

Size 

Contents 

var 

fChecked 

2 

=0 if the check box is not checked 
=1 if the check box is checked 
=2 if the check box is gray (mixed) 

var 

accel 

2 

Accelerator key character. 

var 

accel2 

2 

Accelerator key character (East Asian versions only). 

var 

grbit 

2 

Option flags (shown LSB to MSB): 
fNo3d:1 = 1 if 3-D shading is turned off 
fBoxOnly:1 = 1 if only the box is drawn 
Reserved:14 Reserved; must be 0 (zero) 



 
The grbit field at byte 58 contains the following option flags: 

Offset 

Bits 

Mask 

Name 

Contents 

0 

7 – 0 

FFh 

(Reserved) 

Reserved; must be 0 (zero) 

1 

0 

01h 

(unused) 

 

 

1 

02h 

fLockText 

=1 if the Lock Text option is turned on 
(Format Object dialog box, Protection tab) 

 

2 

04h 

fFuzzy 

=1 if the object is selected (the broken border 
is displayed) 

 

7 – 3 

F8h 

(Reserved) 

Reserved; must be 0 (zero) 



 
Dialog Frame Object Fields 

Offset 

Name 

Size 

Contents 

38 

icvBack 

1 

Index to the color palette for background color (fixed for 
dialog frame objects). 

39 

icvFore 

1 

Index to the color palette for foreground color (fixed for 
dialog frame objects). 

40 

fls 

1 

Fill pattern (ignored for dialog frame objects). 

41 

grbit 

1 

Option flags (ignored for dialog frame objects). 

42 

icv 

1 

Index to the color palette for line color (fixed for dialog 
frame objects). 

43 

lns 

1 

Line style (ignored for dialog frame objects). 

44 

lnw 

1 

Line weight (ignored for dialog frame objects). 

45 

fAuto 

1 

Bit 0 = 1 for dialog frame objects. 

46 

frs 

2 

Frame style structure (ignored for dialog frame objects). 

48 

cbText 

2 

Length of the object text. 

50 

(Reserved) 

8 

Reserved; must be 0 (zero). 

58 

grbit 

2 

Option flags (see the following table). 

60 

(Reserved) 

14 

Reserved; must be 0 (zero). 

74 

cchName 

1 

Length of the name (null if no name). 




75 

stName 

var 

Name (null if no name; may contain a padding byte to 
force word-boundary alignment). 

var 

fmla 

var 

FMLA structure (see .FMLA Structure.). 

var 

rgch 

var 

Object text; may contain a single padding byte at the 
end of the text for word-boundary alignment (cbText 
does not count this padding byte). 

var 

TXORUNS 

8 

TXORUNS structure (see text). 

var 

TXORUNS 

8 

TXORUNS structure (see text). 



 
The grbit field at byte 58 contains the following option flags: 

Offset 

Bits 

Mask 

Name 

Contents 

0 

7 – 0 

FFh 

(Reserved) 

Reserved; must be 0 (zero) 

1 

0 

01h 

(Unused) 

 

 

1 

02h 

fLockText 

=1 if the Lock Text option is turned on 
(Format Object dialog box, Protection tab) 

 

2 

04h 

fFuzzy 

=1 if an object is selected (the broken border is 
displayed) 

 

7 – 3 

F8h 

(Reserved) 

Reserved; must be 0 (zero) 



 
The TXORUNS structure contains formatting information about the object text string, 
which is the dialog box caption. There are two TXORUNS structures in the dialog 
frame object record. The first has ichFirst=00h, and it has ifnt pointing to the 
FONT record for the text. The second has ichFirst=cbText, and it contains no 
other useful information. The TXORUNS structure is shown in the following table. 

Offset 

Name 

Size 

Contents 

0 

ichFirst 

2 

Index to the first character to which the formatting 
applies 

2 

ifnt 

2 

Index to the FONT record 

4 

(Reserved) 

4 

 



 
Drop-Down Object Fields 

Offset 

Name 

Size 

Contents 

38 

icvBack 

1 

Index to the color palette for background color (fixed for 
drop-down objects). 

39 

icvFore 

1 

Index to the color palette for foreground color (fixed for 
drop-down objects). 

40 

fls 

1 

Fill pattern (ignored for drop-down objects). 

41 

grbit 

1 

Option flags (ignored for drop-down objects). 

42 

icv 

1 

Index to the color palette for line color (fixed for drop-
down objects). 

43 

lns 

1 

Line style (ignored for drop-down objects). 

44 

lnw 

1 

Line weight (ignored for drop-down objects). 

45 

fAuto 

1 

Bit 0 = 1 for drop-down objects. 




Offset 

Name 

Size 

Contents 

46 

frs 

2 

Frame style structure (ignored for drop-down objects). 

48 

(Reserved) 

4 

Reserved; must be 0 (zero). 

52 

iVal 

2 

Scroll bar position. 

54 

iMin 

2 

Scroll bar minimum value. 

56 

iMax 

2 

Scroll bar maximum value. 

58 

dInc 

2 

Amount to scroll when an arrow is clicked. 

60 

dPage 

2 

Amount to scroll when the scroll bar is clicked. 

62 

fHoriz 

2 

=1 if the scroll bar is horizontal. 

64 

dxScroll 

2 

Width of the scroll bar. 

66 

grbit 

2 

Option flags (shown LSB to MSB): 
(Reserved):3 Reserved; must be 0 (zero) 
fNo3d:1 = 1 if 3-D shading is turned off 
(Reserved):12 Reserved; must be 0 (zero) 

68 

(Reserved) 

18 

Reserved; must be 0 (zero). 

86 

ifnt 

2 

Index to the FONT record for list box. 

88 

(Reserved) 

14 

Reserved; must be 0 (zero). 

102 

xLeft 

2 

X (horizontal) position of the upper-left corner of the 
drop-down object‘s bounding rectangle. 

104 

yTop 

2 

Y (vertical) position of the upper-left corner of the drop-
down object‘s bounding rectangle. 

106 

xRight 

2 

X (horizontal) position of the lower-right corner of the 
drop-down object‘s bounding rectangle. 

108 

yBot 

2 

Y (vertical) position of the lower-right corner of the drop-
down object‘s bounding rectangle. 

110 

(Reserved) 

4 

Reserved; must be 0 (zero). 

114 

cchName 

1 

Length of the name (null if no name). 

115 

stName 

var 

Name (null if no name; may contain a padding byte to 
force word-boundary alignment). 

var 

cbFmla1 

2 

Length of the FMLA structure for the attached macro 
(never null). 

var 

fmla1 

var 

FMLA structure for the attached macro (see .FMLA 
Structure.). 

var 

cbFmla2 

2 

Length of the FMLA structure for the cell link (never 
null). 

var 

fmla2 

var 

FMLA structure for the cell link (see .FMLA Structure.). 

var 

cbFmla3 

2 

Length of the FMLA structure for the input range (never 
null). 

var 

fmla3 

var 

FMLA structure for the input range (see .FMLA 
Structure.). 




Offset 

Name 

Size 

Contents 

var 

cLines 

2 

Number of elements in the list box (1-based). 

var 

iSel 

2 

Index of the selected item (1-based). 

var 

grbit 

2 

Option flags (shown LSB to MSB): 
(Reserved):2 Reserved; must be 0 (zero) 
fValidIds:1 = 1 if idEdit is valid 
fNo3d:1 = 1 if 3-D shading is turned off 
(Reserved):12 Reserved; must be 0 (zero) 

var 

(Reserved) 

2 

Reserved; must be 0 (zero). 

var 

grbit 

2 

Option flags (shown LSB to MSB): 
wStyle:2 Drop-down style: 
0 = combo, 
1 = combo edit, 
2 = simple 
3 = max 
(Reserved):14 Reserved; must be 0 (zero) 

var 

cLine 

2 

Maximum number of lines the drop-down list box 
contains before a scroll bar is added. 

var 

dxMin 

2 

Minimum allowable width of the drop-down list box. 

var 

(Reserved) 

2 

Reserved; must be 0 (zero). 



 
Edit Box Object Fields 

Offset 

Name 

Size 

Contents 

38 

icvBack 

1 

Index to the color palette for background color 
(fixed for edit box objects). 

39 

icvFore 

1 

Index to the color palette for foreground color 
(fixed for edit box objects). 

40 

fls 

1 

Fill pattern (ignored for edit box objects). 

41 

grbit 

1 

Option flags (ignored for edit box objects). 

42 

icv 

1 

Index to the color palette for line color (fixed for edit 
box objects). 

43 

lns 

1 

Line style (ignored for edit box objects). 

44 

lnw 

1 

Line weight (ignored for edit box objects). 

45 

fAuto 

1 

Bit 0 = 1 for edit box objects. 

46 

frs 

2 

Frame style structure (ignored for edit box objects). 

48 

(Reserved) 

10 

Reserved; must be 0 (zero). 

58 

grbit 

2 

Option flags (see the following table). 

60 

(Reserved) 

14 

Reserved; must be 0 (zero). 

74 

cchName 

1 

Length of the name (null if no name). 

75 

stName 

var 

Name (null if no name; may contain a padding byte to 
force word-boundary alignment). 




Offset 

Name 

Size 

Contents 

var 

cbFmla 

2 

Length of the FMLA structure for the attached macro 
(never null). 

var 

fmla 

var 

FMLA structure for the attached macro (see .FMLA 
Structure.). 

var 

cbText 

2 

Length of the object text (never null). 

var 

rgch 

var 

Object text; may contain a single padding byte at the 
end of the text for word-boundary alignment (cbText 
does not count this padding byte). 

var 

ivtEdit 

2 

Edit validation: 
=000, Text 
=001, Integer 
=010, Number 
=011, Reference 
=100, Formula 

var 

fMultiLine 

2 

=1 if the edit is a multiline edit. 

var 

fVScroll 

2 

=1 if the edit box has a vertical scroll bar. 

var 

idList 

2 

Object ID of the linked list box or linked drop-down, if 
the edit box is part of a combination list-edit box or 
combination drop-down edit box. If idList=0, this is 
a simple edit box. 



 
The grbit field at byte 58 contains the following option flags: 

Offset 

Bits 

Mask 

Name 

Contents 

0 

7 – 0 

FFh 

(Reserved) 

Reserved; must be 0 (zero) 

1 

0 

01h 

(unused) 

 

 

1 

02h 

fLockText 

=1 if the Lock Text option is turned on 
(Format Object dialog box, Protection tab) 

 

2 

04h 

fFuzzy 

=1 if the object is selected (the broken border 
is displayed) 

 

7 – 3 

F8h 

(Reserved) 

Reserved; must be 0 (zero) 



 
Group Box Object Fields 

Offset 

Name 

Size 

Contents 

38 

icvBack 

1 

Index to the color palette for background color (fixed for 
group box objects). 

39 

icvFore 

1 

Index to the color palette for foreground color (fixed for 
group box objects). 

40 

fls 

1 

Fill pattern (ignored for group box objects). 

41 

grbit 

1 

Option flags (ignored for group box objects). 

42 

icv 

1 

Index to the color palette for line color (fixed for group 
box objects). 

43 

lns 

1 

Line style (ignored for group box objects). 




Offset 

Name 

Size 

Contents 

44 

lnw 

1 

Line weight (ignored for group box objects). 

45 

fAuto 

1 

Bit 0 = 1 for group box objects. 

46 

frs 

2 

Frame style structure (ignored for group box objects). 

48 

(Reserved) 

10 

Reserved; must be 0 (zero). 

58 

grbit 

2 

Option flags (see the following table). 

60 

(Reserved) 

26 

Reserved; must be 0 (zero). 

86 

cchName 

1 

Length of the name (null if no name). 

87 

stName 

var 

Name (null if no name; may contain a padding byte to 
force word-boundary alignment). 

var 

cbFmla 

2 

Length of the FMLA structure (never null). 

var 

fmla 

var 

FMLA structure (see .FMLA Structure.). 

var 

cbText 

2 

Length of object text (never null). 

var 

rgch 

var 

Object text; may contain a single padding byte at the 
end of the text for word-boundary alignment (cbText 
does not count this padding byte). 

var 

accel 

2 

Accelerator key character. 

var 

accel2 

2 

Accelerator key character (East Asian versions only). 

var 

grbit 

2 

Option flags (shown LSB to MSB) - 
fNo3d:1 = 1 if 3-D shading is off 
(Reserved):15 Reserved; must be 0 (zero) 



 
The grbit field at byte 58 contains the following option flags: 

Offset 

Bits 

Mask 

Name 

Contents 

0 

7–0 

FFh 

(Reserved) 

Reserved; must be 0 (zero) 

1 

0 

01h 

(unused) 

 

 

1 

02h 

fLockText 

=1 if the Lock Text option is on (Format 
Object dialog box, Protection tab) 

 

2 

04h 

fFuzzy 

=1 if the object is selected (the broken border 
is displayed) 

 

7–3 

F8h 

(Reserved) 

Reserved; must be 0 (zero) 



 
Label Object Fields 

Offset 

Name 

Size 

Contents 

38 

icvBack 

1 

Index to the color palette for background color (fixed for 
label objects). 

39 

icvFore 

1 

Index to the color palette for foreground color (fixed for 
label objects). 

40 

fls 

1 

Fill pattern (ignored for label objects). 

41 

grbit 

1 

Option flags (ignored for label objects). 




Offset 

Name 

Size 

Contents 

42 

icv 

1 

Index to the color palette for line color (fixed for label 
objects). 

43 

lns 

1 

Line style (ignored for label objects). 

44 

lnw 

1 

Line weight (ignored for label objects). 

45 

fAuto 

1 

Bit 0 = 1 for label objects. 

46 

frs 

2 

Frame style structure (ignored for label objects). 

48 

cbText 

2 

Length of object text. 

50 

(Reserved) 

8 

Reserved; must be 0 (zero). 

58 

grbit 

2 

Option flags (see the following table). 

60 

(Reserved) 

14 

Reserved; must be 0 (zero). 

74 

cchName 

1 

Length of the name (null if no name). 

75 

stName 

var 

Name (null if no name; may contain a padding byte to 
force word-boundary alignment). 

var 

fmla 

var 

FMLA structure (see .FMLA Structure.). 

var 

rgch 

var 

Object text; may contain a single padding byte at the 
end of the text for word-boundary alignment (cbText 
does not count this padding byte). 

var 

TXORUNS 

8 

TXORUNS structure (see text). 

var 

TXORUNS 

8 

TXORUNS structure (see text). 



 
The grbit field at byte 58 contains the following option flags: 

Offset 

Bits 

Mask 

Name 

Contents 

0 

7–0 

FFh 

(Reserved) 

Reserved; must be 0 (zero) 

1 

0 

01h 

(unused) 

 

 

1 

02h 

fLockText 

=1 if the Lock Text option is on (Format 
Object dialog box, Protection tab) 

 

2 

04h 

fFuzzy 

=1 if object is selected (the broken border is 
displayed) 

 

7–3 

F8h 

(Reserved) 

Reserved; must be 0 (zero) 



 
The TXORUNS structure contains formatting information about the object text string, 
which is the label string. There are two TXORUNS structures in the label object 
record. The first has ichFirst=00h and has ifnt pointing to the FONT record for 
the label. The second has ichFirst=cbText and contains no other useful 
information. The TXORUNS structure is shown in the following table. 

Offset 

Name 

Size 

Contents 

0 

ichFirst 

2 

Index to the first character to which the formatting 
applies 

2 

ifnt 

2 

Index to the FONT record 

4 

(Reserved) 

4 

 



 


List Box Object Fields 

Offset 

Name 

Size 

Contents 

38 

icvBack 

1 

Index to the color palette for background color (fixed for 
list box objects). 

39 

icvFore 

1 

Index to the color palette for foreground color (fixed for 
list box objects). 

40 

fls 

1 

Fill pattern (ignored for list box objects). 

41 

grbit 

1 

Option flags (ignored for list box objects). 

42 

icv 

1 

Index to the color palette for line color (fixed for list box 
objects). 

43 

lns 

1 

Line style (ignored for list box objects). 

44 

lnw 

1 

Line weight (ignored for list box objects). 

45 

fAuto 

1 

Bit 0 = 1 for list box objects. 

46 

frs 

2 

Frame style structure (ignored for list box objects). 

48 

(Reserved) 

4 

Reserved; must be 0 (zero). 

52 

iVal 

2 

Scroll bar position. 

54 

iMin 

2 

Scroll bar minimum value. 

56 

iMax 

2 

Scroll bar maximum value. 

58 

dInc 

2 

Amount to scroll when the arrow is clicked. 

60 

dPage 

2 

Amount to scroll when the scroll bar is clicked. 

62 

fHoriz 

2 

=1 if the scroll bar is horizontal. 

64 

dxScroll 

2 

Width of the scroll bar. 

66 

grbit 

2 

Option flags (shown LSB to MSB): 
(Reserved):3 Reserved; must be 0 (zero). 
fNo3d:1 = 1 if 3-D shading is off. 
(Reserved):12 Reserved; must be 0 (zero). 

68 

(Reserved) 

18 

Reserved; must be 0 (zero). 

86 

ifnt 

2 

Index to the FONT record for the list box. 

88 

(Reserved) 

4 

Reserved; must be 0 (zero). 

92 

cchName 

1 

Length of the name (null if no name). 

93 

stName 

var 

Name (null if no name; may contain a padding byte to 
force word-boundary alignment). 

var 

cbFmla1 

2 

Length of the FMLA structure for the attached macro 
(never null). 

var 

fmla1 

var 

FMLA structure for the attached macro (see .FMLA 
Structure.). 

var 

cbFmla2 

2 

Length of the FMLA structure for the cell link (never null). 

var 

fmla2 

var 

FMLA structure for the cell link (see .FMLA Structure.). 

var 

cbFmla3 

2 

Length of the FMLA structure for input range (never null). 




Offset 

Name 

Size 

Contents 

var 

fmla3 

var 

FMLA structure for input range (see .FMLA Structure.). 

var 

cLines 

2 

Number of elements in the list box (1-based). 

var 

iSel 

2 

Index of the selected item (1-based). 

var 

grbit 

2 

Option flags (shown LSB to MSB) - 
(Reserved): 2 -Reserved; must be 0 (zero). 
fValidIds:1 =1 -if idEdit is valid. 
fNo3d:1 =1 -if 3-D shading is off. 
WListSelType:2 -List box selection type: 
0 = standard. 
1 = multiselect. 
2 = extended-select 
(Reserved):10 Reserved; must be 0 (zero). 

var 

idEdit 

2 

Object ID of the linked edit box, if the list box is part of a 
combination list-edit box. If idList=0, this is a simple 
list box. 

var 

rgbSel 

var 

Array of bytes, indicating which items are selected in a 
multiselect or extended-select list box. The number of 
elements in the array is equal to cLines. If an item is 
selected in the list box, the corresponding element in the 
array =1. 



 
Option Button Object Fields 

Offset 

Name 

Size 

Contents 

38 

icvBack 

1 

Index to the color palette for background color (fixed 
for option button objects). 

39 

icvFore 

1 

Index to the color palette for foreground color (fixed for 
option button objects). 

40 

fls 

1 

Fill pattern (ignored for option button objects). 

41 

fAuto 

1 

(Ignored for option button objects). 

42 

icv 

1 

Index to the color palette for line color (fixed for option 
button objects). 

43 

lns 

1 

Line style (ignored for option button objects). 

44 

lnw 

1 

Line weight (ignored for option button objects). 

45 

fAuto 

1 

(Ignored for option button objects). 

46 

frs 

2 

Frame style structure (ignored for option button 
objects). 

48 

(Reserved) 

10 

Reserved; must be 0 (zero). 

58 

grbit 

2 

Option flags (see the following table). 

60 

(Reserved) 

32 

Reserved; must be 0 (zero). 

92 

cchName 

1 

Length of the name (null if no name). 

93 

stName 

var 

Name (null if no name; may contain a padding byte to 
force word-boundary alignment). 




Offset 

Name 

Size 

Contents 

var 

cbFmla1 

2 

Length of the FMLA structure for the attached macro 
(never null). 

var 

fmla1 

var 

FMLA structure for the attached macro (see .FMLA 
Structure.). 

var 

cbFmla2 

2 

Length of FMLA structure for the cell link (never null). 

var 

fmla2 

var 

FMLA structure for the cell link (see .FMLA Structure.). 

var 

cbText 

2 

Length of the object text (never null). 

var 

rgch 

var 

Object text; may contain a single padding byte at the 
end of the text for word-boundary alignment (cbText 
does not count this padding byte). 

var 

fChecked 

2 

=0 if the option button is not checked. 
=1 if the option button is checked. 

var 

accel 

2 

Accelerator key character. 

var 

accel2 

2 

Accelerator key character (East Asian versions only). 

var 

grbit 

2 

Option flags (shown LSB to MSB): 
fNo3d:1 =1 if 3-D shading is off. 
fBoxOnly:1 =1 if only the box is drawn. 
(Reserved):14 -Reserved; must be 0 (zero). 

var 

idRadNext 

2 

Object ID of the next option button in the group. 

var 

fFirstBtn 

2 

=1 if this option button is the first in the group. 



 
The grbit field at byte 58 contains the following option flags: 

Offset 

Bits 

Mask 

Name 

Contents 

0 

7–0 

FFh 

(Reserved) 

Reserved; must be 0 (zero) 

1 

0 

01h 

(unused) 

 

 

1 

02h 

fLockText 

=1 if the Lock Text option is on (Format 
Object dialog box, Protection tab) 

 

2 

04h 

fFuzzy 

=1 if the object is selected (the broken border 
is displayed) 

 

7–3 

F8h 

(Reserved) 

Reserved; must be 0 (zero) 



 
Scroll Bar Object Fields 

Offset 

Name 

Size 

Contents 

38 

icvBack 

1 

Index to the color palette for background color (fixed for 
scroll bar objects). 

39 

icvFore 

1 

Index to the color palette for foreground color (fixed for 
scroll bar objects). 

40 

fls 

1 

Fill pattern (ignored for scroll bar objects). 

41 

grbit 

1 

Option flags (ignored for scroll bar objects). 

42 

icv 

1 

Index to the color palette for line color (fixed for scroll 
bar objects). 




Offset 

Name 

Size 

Contents 

43 

lns 

1 

Line style (ignored for scroll bar objects). 

44 

lnw 

1 

Line weight (ignored for scroll bar objects). 

45 

fAuto 

1 

Bit 0 = 1 for scroll bar objects. 

46 

frs 

2 

Frame style structure (ignored for scroll bar objects). 

48 

(Reserved) 

4 

Reserved; must be 0 (zero). 

52 

iVal 

2 

Scroll bar position. 

54 

iMin 

2 

Scroll bar minimum value. 

56 

iMax 

2 

Scroll bar maximum value. 

58 

dInc 

2 

Amount to scroll when the arrow is clicked. 

60 

dPage 

2 

Amount to scroll when the scroll bar is clicked. 

62 

fHoriz 

2 

=1 if the scroll bar is horizontal. 

64 

dxScroll 

2 

Width of the scroll bar. 

66 

grbit 

2 

Option flags (shown LSB to MSB): 
(Reserved):3 -Reserved; must be 0 (zero). 
fNo3d:1 =1 if 3-D shading is off. 
(Reserved):12 -Reserved; must be 0 (zero). 

68 

cchName 

1 

Length of the name (null if no name). 

69 

stName 

var 

Name (null if no name; may contain a padding byte to 
force word-boundary alignment). 

var 

cbFmla1 

2 

Length of the FMLA structure for the attached macro 
(never null). 

var 

fmla1 

var 

FMLA structure for the attached macro (see .FMLA 
Structure.). 

var 

cbFmla2 

2 

Length of the FMLA structure for the cell link (never null). 

var 

fmla2 

var 

FMLA structure for the cell link (see .FMLA Structure.). 



 
Spinner Object Fields 

Offset 

Name 

Size 

Contents 

38 

icvBack 

1 

Index to the color palette for background color (fixed for 
spinner objects). 

39 

icvFore 

1 

Index to the color palette for foreground color (fixed for 
spinner objects). 

40 

fls 

1 

Fill pattern (ignored for spinner objects). 

41 

grbit 

1 

Option flags (ignored for spinner objects). 

42 

icv 

1 

Index to the color palette for line color (fixed for spinner 
objects). 

43 

lns 

1 

Line style (ignored for spinner objects). 

44 

lnw 

1 

Line weight (ignored for spinner objects). 

45 

fAuto 

1 

Bit 0 = 1 for spinner objects. 




Offset 

Name 

Size 

Contents 

46 

frs 

2 

Frame style structure (ignored for spinner objects). 

48 

(Reserved) 

4 

Reserved; must be 0 (zero). 

52 

iVal 

2 

Spinner position. 

54 

iMin 

2 

Spinner minimum value. 

56 

iMax 

2 

Spinner maximum value. 

58 

dInc 

2 

Amount to scroll when the spinner is clicked. 

60 

(Reserved) 

2 

Reserved; must be 0 (zero). 

62 

fHoriz 

2 

=1 if the spinner is horizontal. 

64 

dxScroll 

2 

Width of the spinner. 

66 

grbit 

2 

Option flags (shown LSB to MSB): 
(Reserved):3 -Reserved; must be 0 (zero). 
fNo3d:1 =1 if 3-D shading is off. 
(Reserved):12 -Reserved; must be 0 (zero). 

68 

cchName 

1 

Length of the name (null if no name). 

69 

stName 

var 

Name (null if no name; may contain a padding byte to 
force word-boundary alignment). 

var 

cbFmla1 

2 

Length of the FMLA structure for the attached macro 
(never null). 

var 

fmla1 

var 

FMLA structure for the attached macro (see .FMLA 
Structure.). 

var 

cbFmla2 

2 

Length of the FMLA structure for the cell link (never null). 

var 

fmla2 

var 

FMLA structure for the cell link (see .FMLA Structure.). 



 

OBJPROTECT: Objects Are Protected (63h) 

The OBJPROTECT record stores an option from the Protection command. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

fLockObj 

2 

=1 if objects are protected 



 

OBPROJ: Visual Basic Project (D3h) 

The contents of this record are reserved. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

(Reserved) 

var 

 



 

OLEDBCONN: OLE Database Connection (80Ah) 

Introduced in Excel 9 (2000) this is a FRT record. It contains the connection 
information for an OLE database connection. 


Record Data 

Offset 

Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the first 
two bytes of the record; =080Ah 

6 

grbitFrt 

2 

FRT flags; must be zero 

8 

grbitConn 

2 

Connection flags; see following table 

10 

cst 

2 

Count of following ExtString records; these 
records will be concatenated together to make 
the connection string 

12 

(Reserved) 

4 

Reserved; must be zero 

16 

rgbFuture 

var 

Information from future versions of Excel 



 
The grbitConn field contains the following option flags: 

Bits 

Mask 

Name 

Contents 

0 

0001h 

fPasswd 

0= The connection password has been stripped 
1= The password for the connection is present 

1 

0002h 

fLocal 

1= This is a local connection string 

15-2 

FFFCh 

(Reserved) 

Reserved; must be zero 



 

OLESIZE: Size of OLE Object (DEh) 

This record stores the size of an embedded OLE object (when Excel is a server). 
Record Data 

Offset 

Name 

Size 

Contents 

4 

(Reserved) 

2 

 

6 

rwFirst 

2 

First row 

8 

rwLast 

2 

Last row 

10 

colFirst 

1 

First column 

11 

colLast 

1 

Last column 



 

PALETTE: Color Palette Definition (92h) 

The PALETTE record describes the colors selected in the Options dialog box, Color 
tab. Each rgch field contains 4 bytes: rgbRed, rgbGreen, rgbBlue, and an 
unused byte. The 3 color bytes correspond to the Red, Green, and Blue values in the 
Color Picker dialog box, and the unused byte is don‘t-care. The Color Picker 
dialog box appears when you click the Modify button on the Color tab. If the 
worksheet uses the default palette, the BIFF file does not contain the PALETTE 
record. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

ccv 

2 

Count of color values that follow 

6 

rgch 

4 

Color value of the first color in the palette 

10 

rgch 

4 

Color value of the second color in the palette 

14 

rgch 

4 

Color value of the third color in the palette 




Offset 

Name 

Size 

Contents 

... 

... 

... 

... 

var 

rgch 

4 

Color value of the last color (=ccv) in the palette 



 

PANE: Number of Panes and Their Position (41h) 

The PANE record describes the number and position of unfrozen panes in a window. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

x 

2 

Horizontal position of the split; 0 (zero) if none 

6 

y 

2 

Vertical position of the split; 0 (zero) if none 

8 

rwTop 

2 

Top row visible in the bottom pane 

10 

colLeft 

2 

Leftmost column visible in the right pane 

12 

pnnAct 

2 

Pane number of the active pane 



 
The x and y fields contain the position of the vertical and horizontal splits, 
respectively, in units of 1/20th of a point. Either of these fields can be 0 (zero), 
indicating that the window is not split in the corresponding direction. 
For a window with a horizontal split, the rwTop field is the topmost row visible in the 
bottom pane or panes. For a window with a vertical split, the colLeft field contains 
the leftmost column visible in the right pane or panes. 
The pnnAct field indicates which pane is the active pane. The pnnAct field contains 
one of the following values: 
0 = lower right 
1 = upper right 
2 = lower left 
3 = upper left 
If the window has frozen panes, as specified in the WINDOW2 record, x and y have 
special meaning. If there is a vertical split, x contains the number of columns visible 
in the top pane. If there is a horizontal split, y contains the number of rows visible 
in the left pane. Both types of splits can be present in a window, as in unfrozen 
panes. 

PARAMQRY: Query Parameters (DCh) 

This record contains query data. 
Note: PARAMQRY has the same record number as SXEXT. This has no adverse 
ramifications in a BIFF file because PARAMQRY always occurs in conjunction with an 
SXEXT record. 
Record Data — BIFF8 

Offset 

Name 

Size 

Contents 

4 

wTypeSql 

2 

Used for ODBC queries; the parameter SQL type 

6 

flags 

2 

Option flags; see following table 




Offset 

Name 

Size 

Contents 

8 

grbit 

2 

If pbt=1 then this value indicates what type of value is in 
rgb: 
0001h = an IEEE number 
0002h = a variable-length Unicode string 
0004h = a Boolean but the value is stored in fVal rather 
than rgb 
0800h = an integer 

10 

fVal 

2 

A true/false value if pbt=2 and the parameter is a 
Boolean 

12 

rgb 

var 

if pbt=0, prompt string as a Unicode string 
if pbt=1, refer to grbit 

if pbt=2, reference as parsed expression 



 
The flags field contains the following option flags: 

Bits 

Mask 

Name 

Contents 

1–0 

0003h 

pbt 

Parameter binding type: 
=0 Prompt type (example, .Please enter a 
date.) 
=1 Fixed value type (example, 10, .MSFT., 
01/06/97, and so on) 
=2 Reference type (example, .=Sheet2!$A$5.) 

2 

0004h 

fAuto 

=1 for automatic parameters 

3 

0008h 

fNonDefaultName 

=0 then program prompts for the name 

15–4 

FFF0h 

(Reserved) 

Reserved; must be 0 (zero) 



 

PASSWORD: Protection Password (13h) 

The PASSWORD record contains the encrypted password for a protected sheet or 
workbook (see Office Open XML specification (Ecma Internation Standard 376) for 
further details). Note: this record specifies a sheet-level or workbook-level 
protection password, as opposed to the FILEPASS record, which specifies a file 
password. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

wPassword 

2 

Encrypted password 



 

PLS: Environment-Specific Print Record (4Dh) 

The PLS record saves printer settings and printer driver information. 
Record Data, Macintosh 

Offset 

Name 

Size 

Contents 

4 

wEnv 

2 

Operating environment: 
0= Microsoft Windows 
1= Apple Macintosh 

6 

rgb 

var 

TPrint structure (for more information about this 
structure, see Inside Macintosh, Volume II, page 149). 



 


Record Data, Windows 

Offset 

Name 

Size 

Contents 

4 

wEnv 

2 

Operating environment: 
0= Microsoft Windows 
1= Apple Macintosh 

6 

rgb 

var 

DEVMODE structure (for more information about this 
structure, see the documentation for the Microsoft 
Windows Software Development Kit). 



 

PLV: Page Layout View in Mac Excel 11 (8c8h) 

This is a Mac Excel FRT record. It stores the information for Page Layout View in 
MacExcel 11. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the first two 
bytes of the record; =08c5h 

6 

grbitFrt 

2 

FRT flags; must be zero 

8 

grbitFlags 

1 

Flags 

9 

wscale 

4 

 



 
The grbitFlags field contains the following option flags: 

Bits 

Mask 

Name 

Contentsi 

0 

01h 

fPLVMove 

1= 

1 

02h 

fOnePage 

1= 

2 

03h 

fRuler 

1= 

3 

04h 

fPrintScaleNotSheetScale 

1= 

7-4 

F0h 

(reserved) 

Reserved; must be zero 



 

PLV: Page Layout View Settings in Excel 2007 (88Bh) 

This record stores data associated with the preceding worksheet‘s page layout view. 

Offset 

Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the 
first two bytes of the record; =088Bh 

6 

grbitFrt 

2 

FRT cell reference flag; =0 currently 

8 

(Reserved) 

8 

Currently not used, and set to 0 

16 

wScalePLV 

2 

Zoom scale for the worksheet, =100 if zoom is 
100%; 2-byte unsigned integer value 

18 

grbit 

2 

Page layout view flags (see below for details) 



 
The grbit field contains the following page layout view flags: 

Offset 

Bits 

Mask 

Name 

Contents 

0 

0 

0001h 

fPageLayoutView 

=1 if the worksheet is in the 
page layout view 




 

1 

0002h 

fRulerVisible 

=1 if the ruler is visible 

 

2 

0004h 

fWhitespaceHidden 

=1 if margins between pages 
are hidden in the page layout 
view 

 

3-
15 

FFF8h 

(Reserved) 

Currently not used, and set to 
0 



PRECISION: Precision (0Eh) 

The PRECISION record stores the Precision As Displayed option from the Options 
dialog box, Calculation tab. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

fFullPrec 

2 

=0 if Precision As Displayed option is selected 



 

PRINTGRIDLINES: Print Gridlines Flag (2Bh) 

This record stores the Gridlines option from the Page Setup dialog box, Sheet tab. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

fPrintGrid 

2 

=1 to print gridlines 



 

PRINTHEADERS: Print Row/Column Labels (2Ah) 

The PRINT HEADERS record stores the Row And Column Headings option from 
the Page Setup dialog box, Sheet tab. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

fPrintRwCol 

2 

=1 to print row and column headings 



 

PROTECT: Protection Flag (12h) 

The PROTECT record stores the protection state for a sheet or workbook. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

fLock 

2 

=1 if the sheet or workbook is protected 



 

PROT4REV: Shared Workbook Protection Flag (1AFh) 

The PROT4REV record stores a shared-workbook protection flag. 
Record Data — BIFF8 

Offset 

Name 

Size 

Contents 

4 

fRevLock 

2 

=1 if the Sharing with Track Changes option is on 
(Protect Shared Workbook dialog box) 



 


PROT4REVPASS: Shared Workbook Protection Password 
(1BCh) 

The PROT4REV record stores an encrypted password for shared-workbook protection. 
Record Data — BIFF8 

Offset 

Name 

Size 

Contents 

4 

wRevPass 

2 

Encrypted password (if this field is 0 (zero), there is no 
Shared Workbook Protection Password; the password is 
entered in the Protect Shared Workbook dialog box) 



 

PUB: Publisher (89h) 

The PUB record contains information about the publisher/subscriber feature. This 
record can be created only by Microsoft Excel for the Macintosh. However, if Excel 
for any other operating environment encounters the PUB record in a BIFF file, it 
leaves the record in the file, unchanged, when the file is saved. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

grbit 

2 

Option flags 

6 

ref 

6 

Reference structure describing the published area on the 
worksheet 

12 

sec 

36 

Section record associated with the published area 

48 

rgbAlias 

var 

Contents of the alias pointed to by the section record 



 
The grbit field contains the following option flags: 

Offset 

Bits 

Mask 

Name 

Contents 

0 

0 

01h 

fAprPrinted 

=1 if the published appearance is shown 
when printed 

 

1 

02h 

fSizPrinted 

=1 if the published size is shown when 
printed 

 

7–2 

FCh 

(unused) 

 

1 

7–0 

FFh 

(unused) 

 



 

QSI: External Data Range (1ADh) 

This record stores an external data range. 
Record Data — BIFF8 

Offset 

Name 

Size 

Contents 

4 

grbit 

2 

Option flags; see following table. 

6 

itblAutoFmt 

2 

Index to autoformat table. 

8 

grbitAtrAutoFmt 

2 

Low-order 6 bits contain autoformat attribute 
flag bits; the high-order 10 bits are reserved. 

10 

(Reserved) 

4 

Reserved; must be 0 (zero). 

14 

cchName 

1 

Length of name. 




15 

rgchName 

var 

Name string. 



 
The grbit field contains the option flags listed in the following table. 

Bits 

Mask 

Name 

Contents 

0 

0001h 

fTitles 

=1 if the range contains titles 

1 

0002h 

fRowNums 

=1 if the range uses row numbers 

2 

0004h 

fDisableRefresh 

=1 if refresh is disabled 

3 

0008h 

fAsync 

=1 if the records are to be retrieved in the 
background 

4 

0010h 

fNewAsync 

=1 if this is the first query of a new external 
data range and the records are to be retrieved 
in the background 

5 

0020h 

fRefreshOnLoad 

=1 if this range should be refreshed every time 
the file is loaded 

6 

0040h 

fGrowShrink 

=1 if cells are inserted and deleted as the 
number of rows and columns grows and shrinks 
during external data range refresh 

7 

0080h 

fFill 

=1 if the range has a fill applied 

8 

0100h 

fAutoFormat 

=1 if the range has an autoformat applied 

9 

0200h 

fSaveData 

=0 if the range's cell data is saved as blank 
cells 
=1 if the range's cell data is saved 

10 

0400h 

fDisableEdit 

=1 if the cells are locked for editing 

12-11 

1800h 

(Reserved) 

Reserved; must be 0 (zero) 

13 

2000h 

fOverwrite 

=1 if cells are overwritten and cleared as the 
number of rows and columns grows and shrinks 
during external data range refresh 

15–14 

C000h 

(Reserved) 

Reserved; must be 0 (zero) 



 

QSIF: Query Table Field Formatting (807h) 

Introduced in Excel 9 (2000) this is a FRT record. It stores the information for 
formatting the individual fields of a Query Table. A set of QSIF records immediately 
follows the QSIR record. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the first two 
bytes of the record; =0807h 

6 

grbitFrt 

2 

FRT flags; must be zero 

8 

grbit 

4 

Union of flags; see table 

12 

idField 

4 

ID number of the query table field; this is a unique 
identification tag 




16 

rgbEx 

var 

Bytes reserved for extra information to be written by 
future versions of Excel; the size of this field is 
determined by cbQsifSaved in the parent QSIR record 

var 

rgbTitle 

var 

Unicode string; this is the name of the field 



 
The grbit field contains the following option flags: 

Offset 

Bits 

Mask 

Name 

Contents 

0 

0 

0001h 

fUserIns 

1= This column was inserted into the Query 
Table and is not in the query 

 

1 

0002h 

fFillDown 

1= The formula in this column should be 
filled down/deleted up on a refresh 

 

2 

0004h 

fSortDes 

1= If sorted on this field, this field should be 
sorted in descending order 

 

10-3 

07F8h 

iSortKey 

Sort order 
0= Not sorted on this field 
1= This field is the first sort key 
2= This field is the second sort key 
3= This field is the third sort key 

 

11 

0800h 

fRowNums 

1= This column contains the row numbers 
for the returned records 

 

12 

1000h 

(Reserved) 

Reserved; must be zero 

 

13 

2000h 

fSorted 

1= This column is included in the sort range 

 

15-14 

C000h 

(Reserved) 

Reserved; must be zero 

2 

0 

0001h 

fClipped 

1= This column falls outside the worksheet 
range 

 

15-1 

FFFEh 

(Reserved) 

Reserved; must be zero 



 

QSIR: Query Table Formatting (806h) 

Introduced in Excel 9 (2000) this is a FRT record. It stores the formatting 
information for a Query Table. This record is followed immediately by a set of QSIF 
records. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the first 
two bytes of the record; =0806h 

6 

grbitFrt 

2 

FRT flags; bitfFrtRef must be set to 1; see 
FRT Record Description 

8 

REF 

8 

REF structure; see FRT Record Description 

16 

cbQsirSaved 

2 

Number of bytes in the QSIR structure as saved 
(starting with the grbit field and ending with the 
rgbEx field, inclusive) 




Offset 

Name 

Size 

Contents 

18 

cbQsifSaved 

2 

Number of bytes in each QSIF structure as saved 
(starting with the grbit field and ending with the 
rgbEx field, inclusive) 

20 

grbit 

4 

Query table flags; see table 

24 

iSortCustom 

4 

ID of custom sort order applied 

28 

cQsif 

4 

Count of QSIF structures; these records 
immediately follow the QSIR record 

32 

cpstDeleted 

4 

Count of strings; these are the columns that are 
in the database query but have been removed 
from the query table; stored in the rgbTitle 
array, below 

36 

idFieldNext 

4 

First ID number available for assignment to a 
newly-created QSIF structure 

40 

ccolExtraLeft 

2 

Columns to the left of the Query Table that are to 
be sorted with the Query Table 

42 

ccolExtraRight 

2 

Columns to the right of the Query Table that are 
to be sorted with the Query Table 

44 

idList 

4 

XL11: Table ID if linked to a Table 

48 

rgbEx 

var 

Bytes reserved for extra information to be written 
by future versions of Excel; the size of this field is 
determined by cbQsirSaved 

var 

rgbTitle 

var 

Unicode strings; these are the names of the 
database fields that have been removed from the 
Query Table 



 
The grbit field contains the following option flags: 

Offset 

Bits 

Mask 

Name 

Contents 

0 

0 

0001h 

fPersist 

0= Restore original field order and 
formatting on refresh 
1= Keep user‘s formatting and field 
order changes when refreshing 

 

1 

0002h 

fPersistSort 

0= Restore data to original order on 
refresh 
1= Apply sort to data on refresh 

 

2 

0004h 

fPersistAutofilter 

0= Unapply autofilter on refresh 
1= Keep autofilter on refresh 

 

15-3 

FFF8h 

(Reserved) 

Reserved; must be zero 

2 

3-0 

000Fh 

(Reserved) 

Reserved; must be zero 

 

4 

0010h 

fSorted 

1= A sort has been applied to the 
Query Table 

 

5 

0020h 

fCaseSensSort 

1= Sort is case-sensitive 




Offset 

Bits 

Mask 

Name 

Contents 

 

6 

0040h 

fHdrRowSort 

1= Query Table sort accounted for a 
header row 

 

7 

0080h 

fidWrapped 

1= id numbers of Qsif structures has 
wrapped around the upper bound; 
Excel will have to check for duplicate 
ids 

 

8 

0100h 

(Reserved) 

Reserved; must be zero 

 

9 

0200h 

fTitlesOld 

1= The Query Table had titles last 
time it was refreshed 

 

14-10 

7C00h 

wVersionBeforeRefreshAlert 

Used as a 5-bit integer to indicate the 
latest version of Excel that needs to 
give a warning alert on refresh 

 

15 

8000h 

(Reserved) 

Reserved; must be zero 



 
Note the flags fPersist, fPersistSort, fPersistAutofilter, and 
fMapFields must have the same value. 


QSISXTAG: Pivot Table and Query Table Extensions (802h) 

Introduced in Excel 9 (2000) this is a FRT record. It stores extra information for 
Query Tables and Pivot Tables. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the 
first two bytes of the record; =0802h 

6 

grbitFrt 

2 

FRT flags; must be zero 

8 

fSx 

2 

=0 if the record is for a Query Table 
=1 if the record is for a Pivot Table 

10 

grbit 

2 

General options; see following table 

12 

dwQsiFuture 

4 

Feature-specific options; see following table 

16 

VerSxLastUpdated 

1 

Version of Excel that last refreshed the Pivot 
Table – only used in the Pivot Table case 
otherwise must be zero; 
=0 if Excel 2000 
=1 if Excel XP 
=2 if Excel 2003 
=3 if Office Excel 2007 

17 

VerSxUpdateableMin 

1 

Version of Excel that last refreshed the Pivot 
Table (see values for VerSxLastUpdated) – 
only used in the Pivot Table case otherwise 
must be zero 

18 

obCchName 

1 

Offset in bytes from beginning of FRT to 
beginning of cchName 




19 

bVerRtqsisxtag 

1 

Version of Excel that first created the 
PivotTable or Query Table 

20 

stName 

var 

name of the Pivot Table or Query Table (full 
Unicode string) 



 
The grbit field contains the following general option flags: 

Bits 

Mask 

Name 

Contents 

0 

0001h 

fEnableRefresh 

0= the table can be refreshed if the setting in 
the SXDB record or in the QSI record is enabled 
1= the table can be refreshed, regardless of the 
setting in the SXDB or QSI record 

1 

0002h 

fInvalid 

This overrides the setting in the SXDB record 
(which should be 0 when QSISXTAG exists) 
1= PivotTable cache is invalid 

2 

0004h 

fTensorEx 

XL9: 1= This is an OLAP PivotTable report; 
expect a SXVIEWEX record to follow 

15-3 

FFF8h 

(Reserved) 

Reserved; must be zero 



 
If the record is for a Query Table, the dwQsiFuture field contains the following 
feature-specific option flags: 

Bits 

Mask 

Name 

Contents 

0 

0001h 

fPreserveFormat 

1= Keep formatting that has been applied by 
the user 

1 

0002h 

fAutoFit 

1= Auto Fit the columns after refresh 

15-2 

FFFCh 

(Reserved) 

Reserved; must be zero 



 
If the record is for a Pivot Table, the dwQsiFuture field contains the following 
feature-specific option flags: 

Bits 

Mask 

Name 

Contents 

0 

0001h 

fNoStencil 

1= Do not draw large drop zones for 
PivotTable report if it has no data fields 

1 

0002h 

fHideTotAnnotation 

XL9: 1= Suppress the asterisk for the total 
in an OLAP PivotTable 

2 

0004h 

(Reserved) 

 

3 

0008h 

fIncludeEmptyRw 

XL10: 1= Retrieve and show empty rows 
from the OLAP data source in the Pivot 
Table view 

4 

0010h 

fIncludeEmptyCol 

XL11: 1= Retrieve and show empty 
columns from the OLAP data source in the 
Pivot Table view 

15-5 

FFFCh 

(Reserved) 

 



 


REALTIMEDATA: Real-Time Data (RTD) (813h) 

Introduced in Excel 10 (2002) this BIFF record is an FRT record. There is one 
REALTIMEDATA record for each RTD (real-time data) topic in the workbook. Each 
REALTIMEDATA record contains topic name, variant RTD data (RTDOPER), and an 
array of RTDE structures describing the set of cells associated with it. If necessary, 
this record may continue with one or more CONTINUEFRT records following it. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the first 
two bytes of the record; =0813h 

6 

grbitFrt 

2 

FRT flags; must be zero 

8 

ichSamePrefix 

4 

Number of leading characters in common with the 
previous Topic string (implicitly understood, and 
not to be repeated in this record); basically the 
length of any common prefix between the Topic of 
this record and the Topic of the previous 
REALTIMEDATA record. Zero if there is no prefix 
in common, or if this is the first REALTIMEDATA 
record. 

12 

cchTopic 

4 

Count of characters in the Topic string, not 
including the implicit prefix if ichSamePrefix is 
greater than zero. 

16 

rgchTopic 

var 

Topic string, not including the implicit prefix, if 
any. May be encoded as a compressed or 
uncompressed Unicode string. (See section titled 
.Unicode Strings in Biff8‘for more information 
about these encodings.) 

var 

RTDOPER 

var 

RTDOPER contains variant type and data of RTD 
data (similar to but not identical to OPER structure 
used elsewhere) 

var 

rgRTDE 

var 

Variable-length array of RTDE structures, 
describing the set of cells associated with the RTD 
topic. Each RTDE contains row, column, and sheet 
tab index. Length of array determined by record 
size of this record and any CONTINUEFRT records. 



 
The RTDOPER structure can be one of the following formats: 
RTDOPER Structure Which Contains a Number 

Offset 

Name 

Size 

Contents 

0 

grbit 

2 

=0001h for variant RTD data which contains a number 

2 

num 

8 

IEEE floating-point number 



 
RTDOPER Structure Which Contains a String 

Offset 

Name 

Size 

Contents 

0 

grbit 

2 

=0002h or 1000h for variant RTD data which contains a 
string 

2 

cch 

4 

Number of characters in the string rgch 




6 

rgch 

var 

String (See section titled Unicode Strings in Biff8) 



 
RTDOPER Structure Which Contains a Boolean Value 

Offset 

Name 

Size 

Contents 

0 

grbit 

2 

=0004h for variant RTD data which contains a Boolean 
value 

2 

f 

4 

=1 if TRUE 
=0 if FALSE 



 
RTDOPER Structure Which Contains an Error Value 

Offset 

Name 

Size 

Contents 

0 

grbit 

2 

=0010h for variant RTD data which contains an error 
value 

2 

err 

4 

Error value 



 
RTDOPER Structure Which Contains an Integer 

Offset 

Name 

Size 

Contents 

0 

grbit 

2 

=0800h for variant RTD data which contains an integer 

2 

w 

4 

32-bit signed integer 



 
RTDE Structure 

Offset 

Name 

Size 

Contents 

0 

rw 

2 

Row 

2 

col 

2 

Column 

4 

Itab 

2 

Sheet tab index 



 

RECALCID: Recalc Information (1C1h) 

This record stores the recalc ID of the version of Excel that last recalculated the file. 
Any application other than Excel that edits the file should not write out this record. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

rt 

2 

Record type repeated; 1C1h 

6 

(Reserved) 

2 

Reserved; must be zero 

8 

dwBuild 

4 

Recalc engine ID 



 

RECIPNAME: Recipient Name (B9h) 

This record stores recipient information about a routing slip. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

cchRecip 

2 

Length of the recipient‘s friendly name string 

6 

ulEIDSize 

4 

Length of recipient‘s system-specific address string 

10 

rgchFriendly 

var 

recipient‘s friendly name (null-terminated) 

var 

rgchSSAddr 

var 

recipient‘s system-specific address (null-terminated) 



 


REFMODE: Reference Mode (0Fh) 

The REFMODE record stores the Reference Style option from the Options dialog 
box, General tab. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

fRefA1 

2 

Reference mode: 
=1 for A1 mode 
=0 for R1C1 mode 



 

REFRESHALL: Refresh Flag (1B7h) 

This record stores an option flag. 
Record Data — BIFF8 

Offset 

Name 

Size 

Contents 

4 

fRefreshAll 

2 

=1 then Refresh All should be done on all external 
data ranges and PivotTables when loading the 
workbook (the default is =0) 



 

RIGHTMARGIN: Right Margin Measurement (27h) 

The RIGHTMARGIN record specifies the right margin in inches. The num field is in 8-
byte IEEE floating-point format. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

num 

8 

Right margin 



 

RK: Cell Value, RK Number (7Eh) 

Excel uses an internal number type, called an RK number, to save memory and disk 
space. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

rw 

2 

Row number 

6 

col 

2 

Column number 

8 

ixfe 

2 

Index to the XF record that contains the cell format 

10 

rk 

4 

RK number (see the following description) 



 
An RK number is either a 30-bit integer or the most significant 30 bits of an IEEE 
number. The two LSBs of the 32-bit rk field are always reserved for RK type 
encoding; this is why the RK numbers are 30 bits, not the full 32. See the following 
diagram. 


 There are four different RK number types, as described in the following table. 

RK 
type 

Encode 
priority 

Number 
(decimal) 

RK number 
(hex) 

Description of 
30-bit encoding 

0 

1 

1 

3F F0 00 00 

IEEE number 

1 

3 

1.23 

40 5E C0 01 

IEEE number x 100 

2 

2 

12345678 

02 F1 85 3A 

Integer 

3 

4 

123456.78 

02 F1 85 3B 

Integer x 100 



 
Excel always attempts to store a number as an RK number instead of an IEEE 
number. There is also a specific priority of RK number encoding that the program 
uses. The following flowchart is a simplified version of the encoding algorithm. The 
algorithm always begins with an IEEE (full 64-bit) number. 


 You can use the following C code to demonstrate how to decode RK numbers: 
double NumFromRk(long rk) 
{ 
double num; 
if(rk & 0x02) 
{ 
// int 
num = (double) (rk >> 2); 
} 
else 
{ 
// hi words of IEEE num 
*((long *)&num+1) = rk & 0xfffffffc; 
*((long *)&num) = 0; 
} 
if(rk & 0x01) 
// divide by 100 
num /= 100; 
return num; 
} 
main() 
{ 


 printf("%f\n", NumFromRk (0x02f1853b)); 
} 
If you write a NUMBER record to a BIFF file, Excel may convert the number to an RK 
number when it reads the file. 

ROW: Describes a Row (208h) 

A ROW record describes a single row on an Excel sheet. ROW records and their 
associated cell records occur in blocks of up to 32 rows. Each block ends with a 
DBCELL record. For more information about row blocks and about optimizing your 
code when searching for cell records, see .Finding Cell Records in BIFF Files.. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

rw 

2 

Row number. 

6 

colMic 

2 

First defined column in the row. 

8 

colMac 

2 

Last defined column in the row, plus 1. 

10 

miyRw 

2 

Row height. 

12 

irwMac 

2 

Used by Excel to optimize loading 
the file; if you are creating a BIFF file, set irwMac to 0. 

14 

(Reserved) 

2 

 

16 

grbit 

2 

Option flags. 

18 

ixfe 

2 

If fGhostDirty=1 (see grbit field), this is the index to 
the XF record for the row. Otherwise, this field is 
undefined. 
Note: ixfe uses only the low-order 12 bits of the field 
(bits 11–0). Bit 12 is fExAsc, bit 13 is fExDsc, and bits 
14 and 15 are reserved. fExAsc and fExDsc are set to 
true if the row has a thick border on top or on bottom, 
respectively. 



 
The grbit field contains the following option flags: 

Offset 

Bits 

Mask 

Name 

Contents 

0 

2–0 

07h 

iOutLevel 

Outline level of the row 

 

3 

08h 

(Reserved) 

 

 

4 

10h 

fCollapsed 

=1 if the row is collapsed in outlining 

 

5 

20h 

fDyZero 

=1 if the row height is set to 0 (zero) 

0 

6 

40h 

fUnsynced 

=1 if the font height and row height are not 
compatible 

 

7 

80h 

fGhostDirty 

=1 if the row has been formatted, even if it 
contains all blank cells 

1 

7–0 

FFh 

(Reserved) 

 



 
The rw field contains the 0-based row number. The colMic and colMac fields give 
the range of defined columns in the row. 


The miyRw field contains the row height, in units of 1/20th of a point. The miyRw 
field may have the 8000h (215) bit set, indicating that the row is standard height. 
The low-order 15 bits must still contain the row height. If you hide the row — either 
by setting row height to 0 (zero) or by using the Hide command — miyRw still 
contains the original row height. This allows Excel to restore the original row height 
when you click the Unhide button. 
Each row can have default cell attributes that control the format of all undefined cells 
in the row. By specifying default cell attributes for a particular row, you are 
effectively formatting all the undefined cells in the row without using memory for 
those cells. Default cell attributes do not affect the formats of cells that are explicitly 
defined. 
For example, if you want all of row 3 to be left-aligned, you could define all 256 cells 
in the row and specify that each individual cell be left-aligned. This would require 
storage for each of the 256 cells. An easy alternative would be to set the default cell 
for row 3 to be left-aligned and not define any individual cells in row 3. 

RSTRING: Cell with Character Formatting (D6h) 

When part of a string in a cell has character formatting, an RSTRING record is 
written instead of the LABEL record. The RSTRING record is obsolete in BIFF8, 
replaced by the LABELSST and SST records. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

rw 

2 

Row 

6 

col 

2 

Column 

8 

ixfe 

2 

Index to the XF record 

10 

cch 

2 

Length of the string 

12 

rgch 

var 

String 

var 

cruns 

1 

Count of STRUN structures 

var 

rgstrun 

var 

Array of STRUN structures 



 
The STRUN structure contains formatting information about the string. A STRUN 
structure occurs every time the text formatting changes. The STRUN structure is 
described in the following table. 

Offset 

Name 

Size 

Contents 

0 

ich 

1 

Index to the first character to which the formatting applies 

1 

ifnt 

1 

Index to the FONT record 



 

SAVERECALC: Recalculate Before Save (5Fh) 

If the Recalculate Before Save option is selected in the Options dialog box, 
Calculation tab, then fSaveRecalc=1. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

fSaveRecalc 

2 

=1 to recalculate before saving 



 

SCENARIO: Scenario Data (AFh) 

This record stores information about an individual scenario. 


Record Data 

Offset 

Name 

Size 

Contents 

4 

cref 

2 

Number of changing cells 

6 

fLocked 

1 

=1 if the scenario is locked for changes 

7 

fHidden 

1 

=1 if the scenario is hidden 

8 

cchName 

1 

Length of the name 

9 

cchComment 

1 

Length of the comment 

10 

cchNameUser 

1 

Length of the user name 

11 

rgchName 

var 

scenario name string (grbit/rgb fields only of 
unicode string) 

 

rgchNameUser 

var 

user name full unicode string 

 

rgchComment 

var 

comment full unicode string 

var 

rgRef 

var 

Array of cref cell references that contains changing 
cells (see text) 

var 

rgst 

var 

Array of cref byte-counted strings that contains 
changing cell values (see text) 

var 

rgIfmt 

var 

Array of cref ifmt integers (see text) 



 
The changing cells for the scenario are stored in the three arrays at the end of the 
record. The rgRef array contains the cell addresses, as shown in the following 
table. 

Offset 

Name 

Size 

Contents 

0 

rw 

2 

Row number (0-based) 

2 

col 

2 

Column number (0-based) 



 

In BIFF8, the cell values are always stored as an array of unicode strings. 
In BIFF7, the cell values are always stored as an array of byte-counted strings, as 
shown in the following table. 

Offset 

Name 

Size 

Contents 

0 

cch 

1 

Length of the string 

1 

rgch 

var 

String 



 
Finally, the cell number format indexes (ifmt) are stored as an array of 2-byte 
integers, following the array of cell value strings. These are stored only when the 
scenario contains cells with date/time number formats. If the cells contain any other 
number format, the rgIfmt contains 0‘s (zeros). 

SCENMAN: Scenario Output Data (AEh) 

This record stores the general information about the set of scenarios on a worksheet. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

csct 

2 

Number of scenarios 

6 

isctCur 

2 

Index of the current scenario 




8 

isctShown 

2 

Index of the last displayed scenario 

10 

irefRslt 

2 

Number of reference areas in the following scenario 
result array 

12 

rgref 

var 

Scenario result array (see the following table) 



 
Each reference area in the scenario result array contains the fields listed in the 
following table. 

Offset 

Name 

Size 

Contents 

0 

rwFirst 

2 

First row 

2 

rwLast 

2 

Last row 

4 

colFirst 

1 

First column 

5 

colLast 

1 

Last column 



 

SCENPROTECT: Scenario Protection (DDh) 

This record stores the scenario protection flag. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

fScenProtect 

2 

=1 if scenarios are protected 



 

SCL: Window Zoom Magnification (A0h) 

This record stores the window zoom magnification. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

nscl 

2 

Numerator of a reduced fraction 

6 

dscl 

2 

Denominator of a reduced fraction 



 
The magnification is stored as a reduced fraction. For example, if the magnification 
is 75 percent, nscl=03h and dscl=04h (3/4 = 0.75 = 75%). If the magnification is 
11 percent, nscl=0Bh (11 decimal) and dscl=64h (100 decimal). If the BIFF file 
does not contain the SCL record, the magnification is 100 percent. 

SELECTION: Current Selection (1Dh) 

The SELECTION record stores the selection. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

pnn 

1 

Number of the pane described 

5 

rwAct 

2 

Row number of the active cell 

7 

colAct 

2 

Column number of the active cell 

9 

irefAct 

2 

ref number of the active cell 

11 

cref 

2 

Number of refs in the selection 

13 

rgref 

var 

Array of refs 



 
The pnn field indicates which pane is described. It contains one of the following 
values: 


0 = lower right 
1 = upper right 
2 = lower left 
3 = upper left 
For a window that has no splits, the pnn field =3. 
The rwAct and colAct fields specify the active cell. 
The irefAct field is a 0-based index into the array of ref structures (refs), 
specifying which ref contains the active cell. The rgref is an array because it is 
possible to create a multiple selection. In the case of a multiple selection, each 
selection is described by a ref, including the active cell (even if it is included in one 
of the other selections). 
The selection (of cells) is described by the rgref array. The number of refs in the 
rgref field is equal to cref. Each ref in the array is 6 bytes long and contains the 
fields listed in the following table. 

Offset 

Name 

Size 

Contents 

0 

rwFirst 

2 

First row in the reference 

2 

rwLast 

2 

Last row in the reference 

4 

colFirst 

1 

First column in the reference 

5 

colLast 

1 

Last column in the reference 



 
If a selection is so large that it exceeds the maximum BIFF record size, it is parsed 
into multiple consecutive SELECTION records. Each record contains a portion of the 
larger selection. Only the cref and rgref fields vary in the multiple records; the 
pnn, rwAct, colAct, and irefAct fields are the same across all records in the 
group. 

SETUP: Page Setup (A1h) 

The SETUP record stores options and measurements from the Page Setup dialog 
box. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

iPaperSize 

2 

Paper size (see fNoPls in the following table) 

6 

iScale 

2 

Scaling factor (see fNoPls in the following table) 

8 

iPageStart 

2 

Starting page number 

10 

iFitWidth 

2 

Fit to width; number of pages 

12 

iFitHeight 

2 

Fit to height; number of pages 

14 

grbit 

2 

Option flags (see the following table) 

16 

iRes 

2 

Print resolution (see fNoPls in the following table) 

18 

iVRes 

2 

Vertical print resolution (see fNoPls in the following 
table) 

20 

numHdr 

8 

Header margin (IEEE number) 

28 

numFtr 

8 

Footer margin (IEEE number) 

36 

iCopies 

2 

Number of copies (see fNoPls in the following table) 




 The grbit field contains the following option flags: 

Bits 

Mask 

Name 

Contents 

0 

0001h 

fLeftToRight 

Print over, and then down. 

1 

0002h 

fLandscape 

=0, Landscape mode 
=1, Portrait mode 
(see fNoPls below). 

2 

0004h 

fNoPls 

=1, then the iPaperSize, iScale, iRes, iVRes, 
iCopies, and fLandscape data were not obtained 
from the printer, so they are not valid. 

3 

0008h 

fNoColor 

=1, print black and white. 

4 

0010h 

fDraft 

=1, print draft quality. 

5 

0020h 

fNotes 

=1, print notes. 

6 

0040h 

fNoOrient 

=1, orientation not set. 

7 

0080h 

fUsePage 

=1, use custom starting page number instead of 
Auto. 

8 

0100h 

(Reserved) 

 

9 

0200h 

fEndNotes 

XL9: =1, print cell notes at end of document (if 
fNotes=1) 

11-10 

0C00h 

iErrors 

XL10: 
=0, display errors as on sheet 
=1, display errors as blank 
=0, display errors as --- (dashes) 
=0, display errors as #N/A 

15–12 

F000h 

(unused) 

 



 

SHEETEXT: Extra Sheet Info (862h) 

Introduced in Excel 10 (2002) this record is an FRT record. This record is for 
worksheet-specific data that is new for Excel 10 (2002), and is currently only used to 
store colored sheet tab information, if any. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the first two 
bytes of the record; =0862h 

6 

grbitFrt 

2 

FRT flags; must be zero 

8 

(unused) 

8 

Reserved; must be zero 

16 

cb 

4 

=14h (Record size minus 4); may be larger in the future 

20 

rgbShxData 

4 

Colored tab info and reserved bits; may be larger in 
future; see the following description 



 
The rgbShxData field contains the following option flags: 


Bits 

Mask 

Name 

Contents 

6-0 

0000007Fh 

icv 

Index to the color palette for the colored 
sheet tab for this worksheet. 

31-7 

FFFFFF80h 

(Reserved) 

Reserved; must be zero 



 

SHRFMLA: Shared Formula (BCh) 

The SHRFMLA record is a file size optimization. It is used with the FORMULA record to 
compress the amount of storage required for the parsed expression (rgce). In 
earlier versions of Excel, if you read a FORMULA record in which the rgce field 
contained a ptgExp parse token, the FORMULA record contained an array formula. 
In Excel 5.0 and later, this could indicate either an array formula or a shared 
formula. 
If the record following the FORMULA is an ARRAY record, the FORMULA record 
contains an array formula. If the record following the FORMULA is a SHRFMLA record, 
the FORMULA record contains a shared formula. You can also test the fShrFmla bit 
in the FORMULA record‘s grbit field to determine this. 
When reading a file, you must convert the FORMULA and SHRFMLA records to an 
equivalent FORMULA record if you plan to use the parsed expression. To do this, 
take all of the FORMULA record up to (but not including) the cce field, and then 
append to that the SHRFMLA record from its cce field to the end. You must then 
convert some ptgs; this is explained later in this article. 
Following the SHRFMLA record are one or more FORMULA records containing ptgExp 
tokens that have the same rwFirst and colFirst fields as those in the ptgExp in 
the first FORMULA. There is only one SHRFMLA record for each shared-formula 
record group. 
To convert the ptgs, search the rgce field from the SHRFMLA record for any 
ptgRefN, ptgRefNV, ptgRefNA, ptgAreaN, ptgAreaNV, or ptgAreaNA tokens. 
Add the corresponding FORMULA record‘s rw and col fields to the rwFirst and 
colFirst fields in the ptgs from the SHRFMLA. Finally, convert the ptgs as shown 
in the following table. 

Convert 
this ptg 

 
To this ptg 

ptgRefN 

ptgRef 

ptgRefNV 

ptgRefV 

ptgRefNA 

ptgRefA 

ptgAreaN 

ptgArea 

ptgAreaNV 

ptgAreaV 

ptgAreaNA 

ptgAreaA 



 

For more information about ptgs and parsed expressions, see .Microsoft Excel 
Formulas.. 
Remember that STRING records can appear after FORMULA records if the formula 
evaluates to a string. 
If your code writes a BIFF file, always write standard FORMULA records; do not 
attempt to use the SHRFMLA optimization. 


Record Data 

Offset 

Name 

Size 

Contents 

4 

rwFirst 

2 

First row 

6 

rwLast 

2 

Last row 

8 

colFirst 

1 

First column 

9 

colLast 

1 

Last column 

10 

(Reserved) 

2 

 

12 

cce 

2 

Length of the parsed expression 

14 

rgce 

var 

Parsed expression 



 

SORT: Sorting Options (90h) 

This record stores options from the Sort and Sort Options dialog boxes. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

grbit 

2 

Option flags 

6 

cchKey1 

1 

Length of the string for sort key 1 

7 

cchKey2 

1 

Length of the string for sort key 2 

8 

cchKey3 

1 

Length of the string for sort key 3 

9 

rgchKey1 

var 

String for sort key 1 

var 

rgchKey2 

var 

String for sort key 2 

var 

rgchKey3 

var 

String for sort key 3 



 
The grbit field contains the following option flags: 

Offset 

Bits 

Mask 

Name 

Contents 

0 

0 

0001h 

fCol 

=1 if the Sort Left To Right option is 
on. 

 

1 

0002h 

fKey1Dsc 

=1 if key 1 sorts in descending order. 

 

2 

0004h 

fKey2Dsc 

=1 if key 2 sorts in descending order. 

 

3 

0008h 

fKey3Dsc 

=1 if key 3 sorts in descending order. 

 

4 

0010h 

fCaseSensitive 

=1 if the sort is case-sensitive. 

 

9 – 5 

03E0h 

iOrder 

Index to the table in the First Key Sort 
Order option. The Normal sort order 
corresponds to iOrder=0. 

 

10 

0400h 

fAltMethod 

Used only in East Asian versions of 
Excel. 

 

15–11 

F800h 

(Reserved) 

 



 

SORTDATA12: Sort Data 12 (895h) 

The SORTDATA12 record stores sort related information added in Office Excel 2007. 


 

Offset 

Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the 
first two bytes of the record; =0895h 

6 

grbitFrt 

2 

FRT cell reference flag; =0 currently 

8 

(Reserved) 

8 

Currently not used, and set to 0 

16 

grbitSort 

2 

see text 

18 

rwFirst 

4 

First row of cell range to sort 

22 

rwLast 

4 

Last row of cell range to sort 

26 

colFirst 

4 

First column of cell range to sort 

30 

colLast 

4 

Last column of cell range to sort 

34 

cconditions 

4 

count of sort conditions 

38 

idParent 

8 

the parent‘s ID if the sort field parent is a list 
object or a query table. 



 
The grbitSort field contains information about the sort data‘s parent object type 
and sort options. This information is described in the following table: 

Bits 

Mask 

Name 

Contents 

0 

0001h 

fCol 

=0 sort by columns; =1 sort by rows 

1 

0002h 

fCaseSensitive 

=1 use case sensitive sort 

2 

0004h 

fAltMethod 

=1 don‘t use phonetic info when sorting 
(available in East Asian versions) 

3..6 

0038h 

sfp 

sort fields parent type; see table below 

7..15 

FFC0h 

(Reserved) 

 



 
sfp values: 

sfp 

Value 

Comments 

sfpWorksheet 

0 

Sort data is used for a worksheet 
sort 

sfpListObject 

1 

Sort data is used for a Table sort 

sfpAutoFilter 

2 

Sort data is used for AutoFilter sort 

sfpQueryTable 

3 

Sort data is used for QueryTable sort 



 
The SORTDATA12 record will be followed by one CONTINUEFRT12 record for each 
sort condition. The continue record has the following format: 

Offset 

Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in 
the first two bytes of the record; =087fh 

6 

grbitFrt 

2 

FRT cell reference flag; =0 currently 

8 

(Reserved) 

8 

Currently not used, and set to 0 

16 

grbitSortCondition 

2 

see text below 




18 

rwFirst 

4 

first row of condition‘s sort range 

22 

rwLast 

4 

last row of condition‘s sort range 

26 

colFirst 

4 

first column of condition‘s sort range 

30 

colLast 

4 

last column of condition‘s sort range 

34 

dwCondData 

8 

see text 

42 

cchSslist 

4 

length of custom sort list string 

46 

rgchSslist 

var 

custom sort list string 



 
The grbitSortCondition field contains information about the sort data‘s parent 
object type and sort options. This information is described in the following table: 

Bits 

Mask 

Name 

Contents 

0 

0001h 

fSortDesc 

=1 for descending sort 

1..4 

001Eh 

sortOnType 

kind of sort to perform 

5..15 

FFE0h 

(Reserved) 

Reserved; must be 0 (zero) 



 
Office Excel 2007 supports sorting information in the following kinds of ways: 

sortOnType 

Value 

Comments 

sortonValue 

0 

Sort data by its value 

sortonCellColor 

1 

Sort data by cell fill color 

sortonFontColor 

2 

Sort data by cell text color 

sortonFlag 

3 

Sort data by icon 



 
The dwCondData field varies in content based on the sortOnType.If the data is 
sorted by value this field should be 0. If the data is sorted by cell fill color 
(sortonCellColor) or font color (sortonFontColor) this field will contain the 
index (dxfid) of a DXF record describing the formatting. If the data is sorted by icon 
(sortonFlag) the dwCondData field contains the following information: 

Bits 

Mask 

Name 

Contents 

0..31 

0000FFFFh 

iIconSet 

index of icon set 

32..63 

FFFF0000h 

iIcon 

index of icon in the set 



SOUND: Sound Note (96h) 

The SOUND record contains the complete description of a sound note. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

cf 

2 

Clipboard format; 4257h (16,983 decimal) for sound notes 

6 

env 

2 

Environment from which the file was written: 
=1, Microsoft Windows 
=2, Apple Macintosh 

8 

lcb 

4 

Length of the sound data 

12 

data 

var 

Sound data 




 

SST: Shared String Table (FCh) 

The SST record contains string constants. 
Record Data — BIFF8 

Offset 

Name 

Size 

Contents 

4 

cstTotal 

4 

Total number of strings in the shared string table and 
extended string table (EXTSST record) 

8 

cstUnique 

4 

Number of unique strings in the shared string table 

12 

rgb 

var 

Array of unique unicode strings. 



 

STANDARDWIDTH: Standard Column Width (99h) 

The STANDARDWIDTH record records the measurement from the Standard Width 
dialog box. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

DxGCol 

2 

Standard column width, in increments of 1/256th of a 
character width 



 

STRING: String Value of a Formula (207h) 

When a formula evaluates to a string, a STRING record occurs after the FORMULA 
record. If the formula is part of an array, the STRING record occurs after the ARRAY 
record. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

cch 

2 

Length of the string 

6 

grbit 

1 

0= Compressed unicode string 
1= Uncompressed unicode string 

7 

rgch 

var 

String 



 

STYLE: Style Information (293h) 

Each style in an Excel workbook, whether built-in or user-defined, requires a style 
record in the BIFF file. When Excel saves the workbook, it writes the STYLE records 
in alphabetical order, which is the order in which the styles appear in the drop-down 
list box. 
Record Data — Built-in Styles 

Offset 

Name 

Size 

Contents 

4 

ixfe 

2 

Index to the style XF record. 
Note: ixfe uses only the low-order 12 bits of the 
field (bits 11–0). Bits 12, 13, and 14 are unused, 
and bit 15 (fBuiltIn) is 1 for built-in styles. 




Offset 

Name 

Size 

Contents 

6 

istyBuiltIn 

1 

Built-in style numbers: 
=00h Normal 
=01h RowLevel_n 
=02h ColLevel_n 
=03h Comma 
=04h Currency 
=05h Percent 
=06h Comma[0] 
=07h Currency[0] 

7 

iLevel 

1 

Level of the outline style RowLevel_n or 
ColLevel_n (see text). 



 
Record Data — User-Defined Styles 

Offset 

Name 

Size 

Contents 

4 

ixfe 

2 

Index to the style XF record. 
Note: ixfe uses only the low-order 12 bits of the field 
(bits 11–0). Bits 12, 13, and 14 are unused, and bit 15 
(fBuiltIn) is 0 for user-defined styles. 

6 

cch 

1 

Length of the style name. 

7 

rgch 

var 

Style name. 



 
The automatic outline styles — RowLevel_1 through RowLevel_7, and ColLevel_1 
through ColLevel_7 — are stored by setting istyBuiltIn to 01h or 02h and then 
setting iLevel to the style level minus 1. If the style is not an automatic outline 
style, ignore this field. 

STYLEEXT: Named Cell Style Extension (892h) 

This record is used for new Office Excel 2007 formatting properties associated with 
named cell styles. As noted previously XFEXT records are only able to handle round-
trip formatting when the document was last saved by Office Excel 2007 or later and 
the formatting has not been changed. This constraint exists because BIFF8 does not 
have a mechanism for uniquely identifying XFs once they are loaded if document 
formatting changes. For named cell styles however new formatting properties can be 
associated with the style XF by name and the style‘s formatting can be updated on 
load (Office Excel 2007 or later). 


Offset 

Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the first 
two bytes of the record; =0892h 

6 

grbitFrt 

2 

FRT cell reference flag; =0 currently 

8 

(Reserved) 

8 

Currently not used, and set to 0 

16 

grbitFlags 

1 

see below 

17 

iCategory 

1 

style category 

18 

istyBuiltIn 

1 

style built in ID 




19 

iLevel 

1 

Level of the outline style RowLevel_n or ColLevel_n. 
The automatic outline styles — RowLevel_1 through 
RowLevel_7, and ColLevel_1 through ColLevel_7 — 
are stored by setting istyBuiltIn to 01h or 02h and 
then setting iLevel to the style level minus 1. If the 
style is not an automatic outline style, ignore this 
field 

20 

cchName 

2 

Length of style name (in 2 byte characters) 

22 

rgchName 

var 

Name of style to extend (2 byte characters ). If style 
does not exist then this record is ignored. 

var 

xfProps 

var 

Array of formatting properties. This structure is used 
to reprsent a set of formatting properties. It is 
described in greater detail in the DXF record 
description 



 
The grbitFlags field contains the flags listed in the following table. 

Bits 

Mask 

Name 

Contents 

0 

01h 

fBuiltIn 

=1 if style should be noted as a builtin 

1 

02h 

fHidden 

=1 if style should not be displayed in the UI 
(used to mark .deleted. builtins) 

2 

04h 

fCustom 

=1 if builtin style has a custom (non default) 
definition. 

3..7 

F8h 

(Reserved) 

Reserved; must be 0 (zero) 



 
iCategory – identifies which category in the UI should contain this style. The 
following categories are currently defined: 

Category 

Value 

Comments 

catCustom 

0 

Custom styles category 

catGoodBad 

1 

Good, bad, neutral styles category 

catDataModel 

2 

Data model styles category 

catTitleHeading 

3 

Title & heading styles category 

catAccent 

4 

Themed cell styles category 

catNumberFormat 

5 

Number format styles category 



 
istyBuiltIn –ID that uniquely identifies this builtin cell style. The following table 
expands on the original BIFF8 istyBuiltIn IDs: 

ID 

Built in style 

 

ID 

Built in style 

0 

Normal 

 

27 

Bad 

1 

RowLevel_n 

 

28 

Neutral 

2 

ColLevel_n 

 

29 

Accent1 

3 

Comma 

 

30 

20% - Accent1 




4 

Currency 

 

31 

40% - Accent 1 

5 

Percent 

 

32 

60% - Accent1 

6 

Comman[0] 

 

33 

Accent2 

7 

Currency[0] 

 

34 

20% - Accent2 

8 

Hyperlink 

 

35 

40% - Accent2 

9 

Followed Hyperlink 

 

36 

60% - Accent2 

10 

Note 

 

37 

Accent3 

11 

Warning Text 

 

38 

20% - Accent3 

12 

Emphasis 1 (obsolete) 

 

39 

40% - Accent3 

13 

Emphasis 2 (obsolete) 

 

40 

60% - Accent3 

14 

Emphasis 3 (obsolete) 

 

41 

Accent4 

15 

Title 

 

42 

20% - Accent4 

16 

Heading 1 

 

43 

40% - Accent4 

17 

Heading 2 

 

44 

60% - Accent4 

18 

Heading 3 

 

45 

Accent5 

19 

Heading 4 

 

46 

20% - Accent5 

20 

Input 

 

47 

40% - Accent5 

21 

Output 

 

48 

60% - Accent5 

22 

Calculation 

 

49 

Accent6 

23 

Check Cell 

 

50 

20% - Accent6 

24 

Linked Cell 

 

51 

40% - Accent6 

25 

Total 

 

52 

60% - Accent6 

26 

Good 

 

53 

Explanatory Text 



 

SUB: Subscriber (91h) 

The SUB record contains information about the publisher/subscriber feature. This 
record can be created only by Excel for the Macintosh. However, if Excel for any 
other platform encounters the SUB record in a BIFF file, it leaves the record in the 
file unchanged, when the file is saved. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

ref 

6 

Reference structure describing the subscribed area on the 
worksheet. 

10 

drwReal 

2 

Actual number of rows in the subscribed area. 

12 

dcolReal 

2 

Actual number of columns in the subscribed area. 

14 

grbit 

2 

Option flags. 

16 

cbAlias 

2 

Size of rgbAlias. 




18 

sec 

36 

Section record associated with the subscribed area. 

54 

rgbAlias 

var 

Contents of the alias pointed to by the section record. 

var 

stz 

var 

Null-terminated string containing the path of publisher. 
The first byte is a length byte, which does not count the 
terminating null byte. 



 
The grbit field contains the option flags listed in the following table. 

Offset 

Bits 

Mask 

Name 

Contents 

0 

0 

01h 

(Reserved) 

 

 

1 

02h 

fObj 

=1 if subscribed in the object layer 

 

7–2 

FCh 

(Reserved) 

 

1 

7–0 

FFh 

(Reserved) 

 



 

SUPBOOK: Supporting Workbook (1AEh) 

This record stores data about a supporting external workbook. 
Record Data — BIFF8 

Offset 

Name 

Size 

Contents 

4 

ctab 

2 

Number of tabs in the workbook 

6 

stVirtPath 

var 

Encoded file name of the workbook as a unicode string 
(see text for file name encoding characters) 

var 

rgst 

var 

Array of ctab sheet tab names as unicode strings. 



 

File name Encoding 

Whenever possible, file names are encoded to make BIFF files transportable across 
file systems. Encoded file names are identified by the first character of the rgch 
field. The first character of the rgch field may be any one of the values listed in the 
following table. 

Name 

Value 

Meaning 

chEmpty 

00 

Reference to an empty workbook name (see text) 

chEncode 

01 

File name has been encoded (see the following table) 

chSelf 

02 

Self-referential external reference (see text) 



 
chEmpty indicates the file name is an external reference to an empty workbook 
name, as in the formula =Sheet1!$A$1. 
chSelf indicates the file name is an external reference in which the dependent and 
source workbooks are the same. An example of this is the workbook SALES.XLS, 
which contains the formula =SALES.XLS!$A$1. 
A chDDE key (03h) can occur in the rgch field; it is not necessarily the first 
character in the field, as are chEmpty, chEncode, and chSelf. This key indicates 
that the external reference is a DDE or OLE link. In a DDE link, the chDDE key 
replaces the | (pipe) character that separates the DDE application and topic. In an 
OLE link, chDDE separates the classname and file name. 

A chEncode at the beginning of rgch indicates the file name of the source workbook 
was encoded to a less system-dependent file name. The special keys listed in the 
following table are recognized in the rgch field. 


Name 

Value 

PC file systems 

Macintosh file system 

chVolume 

01 

Represents an MS-DOS 
drive letter. It is followed 
by the drive letter. For 
example, the formula 
=‘D:\SALES.XLS’!A1 
generates the chVolume 
key when the dependent 
workbook is not on the D 
drive. UNC file names, such 
as 
\\server\share\myfile.xls, generate an @ 
character after the 
chVolume key; this 
replaces the initial double 
backslash (\\). 

Represents a single-
character volume name. 
Because single-character 
volume names are 
uncommon on the 
Macintosh, the 
chLongVolume key is 
used to represent volume 
names that are longer 
than a single character. 

chSameVolume 

02 

Indicates the source 
workbook is on the same 
drive as the dependent 
workbook (the drive letter is 
omitted). For example, the 
formula 
=‘\SALES.XLS’!A1 
generates the 
chSameVolume key when 
the dependent workbook is 
not in the root directory. 

Indicates the source 
workbook is in the same 
volume as the dependent 
workbook (the volume 
name is omitted). 

ChDownDir 

03 

Indicates the source 
workbook is in a 
subdirectory of the current 
directory. For example, the 
formula 
=‘XL\SALES.XLS’!A1 
generates the chDownDir 
key. The subdirectory name 
precedes the chDownDir 
key, and the file name 
follows it. 

Indicates the source 
workbook is in a folder in 
the current folder. For 
example, the formula 
=‘:XL:Sales1992’!A1 
generates the 
chDownDir key. The 
folder name precedes the 
chDownDir key, and the 
file name follows it. 

chUpDir 

04 

Indicates the source 
workbook is in the parent 
directory of the current 
directory. For example, the 
formula 
=‘..\SALES.XLS’!A1 
generates the chUpDir key. 

Indicates the source 
workbook is in the parent 
folder of the current 
folder. For example, the 
formula 
=‘::Sales1992’!A1 
generates the chUpDir 
key. 




Name 

Value 

PC file systems 

Macintosh file system 

chLongVolume 

05 

(unused) 

The chLongVolume key 
is followed by the length 
of the name (1 byte) and 
then by the volume name 
string. 

chStartupDir 

06 

Indicates the source 
workbook is in the startup 
directory (the Xlstart 
subdirectory of the directory 
that contains Excel.exe). 

Indicates the source 
workbook is in the Excel 
Startup Folder (5), which 
is in the System Folder. 

chAltStartupDir 

07 

Indicates the source 
workbook is in the alternate 
startup directory. 

Indicates the source 
workbook is in the 
alternate startup folder. 

chLibDir 

08 

Indicates the source 
workbook is in the Library 
directory. 

Indicates the source 
workbook is in the Macro 
Library folder. 



 

SXADDL: Pivot Table Additional Info (864h) 

Introduced in Excel 10 (2002) this record is an FRT record. SXADDL is used for 
storing additional information about Pivot Tables and Query Tables, specifically 
extensions that are new for Excel 10 and beyond. 
This record has a large combination of possible uses and kinds of data, hence all the 
sxcs and sxds described below. Each class (sxc) may have multiple data types 
(sxd), and a sequence of SXADDL records for a particular class begins with the 
sxdId variant of an SXADDL record and ends with the sxdEnd variant of an SXADDL 
record. Also, classes can be nested – proper class nesting is important and required. 
Record Data: Generic SXADDL Template (see specific variants below) 

Offset 

Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the first 
two bytes of the record; =0864h 

6 

grbitFrt 

2 

FRT flags; must be zero 

8 

sxc 

1 

PivotTable, PivotCache or Query Table class of 
information contained in this record (View, Field, 
etc.); see description of sxc values below. 

9 

sxd 


1 

PivotTable, PivotCache or Query Table data type 
contained in this record (Id, End, etc.); see 
description of sxd values below. 

10 

dwUserData 

4 

Extra piece of data for this record. Usage is 
dependant on the sxc and sxd. 

14 

(Reserved) 

2 

Reserved; Must be zero. 

16 

rgbSxAddlData 

var 

Data for this record. Usage is dependant on the 
sxc and sxd. 



 
Here is a description of the different sxc values that can go into the SXADDL record. 


sxc PivotTable, 
PivotCache or 
Query Table 
Class 

 
Value 

 
Description / Purpose 

sxcView 

00h 

PivotTable view properties (related to rtSxview) 
Parent classes: None when used with sxdId. sxcView 
when used with sxdCalcMemString, sxdVer10Info and 
sxdEnd. 

sxcField 

01h 

PivotTable field properties (related to rtSxvd) 
Parent classes: sxcView when used with sxdId. 
sxcField when used with sxdVer10Info and sxdEnd. 

sxcHierarchy 

02h 

OLAB cube hierarchy properties (related to rtSxth) 
Parent classes: sxcView when used with sxdId. 
sxcHierarchy when used with sxdProperty, 
sxdFilterMember, sxdVerUpdInv and sxdEnd. 

sxcCache 

03h 

PivotTable cache properties (related to rtSxDb) 
Parent classes: None when used with sxdId. sxcCache 
when used with sxdVer10Info and sxdEnd. 

sxcCacheField 

04h 

PivotTable cache field properties (related to rtSxFdb) 
Parent classes: sxcCache when used with sxdId. 
sxdCacheField when used with sxdEnd. 

sxcQsi 

05h 

Query Table properties (related to rtQsi) 
Parent classes: None when used with sxdId. sxcQsi 
when used with sxdEnd. 

sxcQuery 

06h 

Database query properties (related to rtDbquery) 
Parent classes: sxcQsi or sxcCache depending on 
whether the information is for a Query Table source or a 
PivotTable source. 

sxcGrpLevel 

07h 

Properties of an OLAP cube level when two or more OLAP 
cube members were grouped within this OLAP cube 
hierarchy. Note: this particular level may not be directly 
involved in the grouping operation. 
Parent classes: sxcHierarchy when used with sxdId. 
sxcGrpLevel when used with sxdGrpLevelInfo and 
sxdEnd. 

sxcGroup 

08h 

Definition of a group of OLAP cube members in an OLAP 
cube group level. 
Parent classes: sxcGrpLevel when used with sxdId. 
sxcGroup when used with sxdGroupInfo, sxdMember 
and sxdEnd. 

(Reserved) 

FCh 

Reserved 

(Reserved) 

FEh 

Reserved 

(Reserved) 

FFh 

Reserved 



 
Here is a description of the different sxd values that can go into the SXADDL record. 


sxd PivotTable, 
PivotCache or 
Query Table Data 
Type 

 
Value 

 
Description / Purpose 

sxdId 

00h 

An identifier that uniquely refers to the exact instance 
of an object (view, field, etc.) a class refers to. Since 
all following records up to a corresponding sxdEnd 
record will be associated with the instance referred to 
by this ID this record should be emitted first for a new 
set of class records. 

sxdVerUpdInv 

01h 

If the PivotTable is updated by PivotTable code of this 
version or lower then the rest of the records for this 
class instance should be considered invalid when 
reloaded into Excel 10 or later. 

sxdVer10Info 

02h 

Additional version 10 properties (usually represented 
as flags). Dependant on the sxc being used. 

sxdCalcMember 

03h 

Defintion of a user-defined calculated member or a set 
in an OLAP cube. 

sxdXMLSource 

04h 

URL to use when editing the source of a Web-based 
Query Table. 

sxdSrcDataFile 

05h 

Name of source data file (such as an MDB file), if any, 
that the PivotTable or Query Table originally retrieved 
data from. 

sxdSrcConnFile 

06h 

Name of file, if any, where we got the original 
connection and query information to the data source. 

sxdReconnCond 

07h 

How to handle the case when a refresh operation can‘t 
reconnect to the data source. 

sxdProperty 

05h 

Describes an OLAP cube member property being shown 
on the PivotTable view. 

sxdGrpLevelInfo 

06h 

Properties of an OLAP cube group level. The level was 
constructed due to a user operation that grouped two 
or more OLAP cube members. 

sxdGrpInfo 

07h 

Properties of a group of OLAP cube members in an 
OLAP cube group level. 

sxdMember 

08h 

The name of an OLAP cube member that belong to a 
group. 

sxdFilterMember 

09h 

The names of the OLAP cube members selected for a 
hierarchy in the page area of the PivotTable view. 

sxdCalcMemString 

0Ah 

MDX of a calculated member formula in an OLAP cube 
when the formula length is greater than 255 
characters. 

(Reserved) 

FCh 

Reserved 

(Reserved) 

FDh 

Reserved 

(Reserved) 

FEh 

Reserved 




sxd PivotTable, 
PivotCache or 
Query Table Data 
Type 

 
Value 

 
Description / Purpose 

sxdEnd 

FFh 

No data but indicates there are no more records for 
the current class instance. 



 
Note: The specific SXADDL Variants only show the BIFF record fields starting at 
offset 8 or greater; the FRT header is the same for all of them. 
Record Data: SXADDL Variant: sxdId (identifier). Used by multiple sxc classes as 
the initial record of the set for the given class instance. If the string ID is greater 
than 255 characters then the string is parsed into 255 character (at the most) 
segments with each segment saved in its own SXADDL record. 

Offset 

Name 

Size 

Contents 

8 

sxc 

1 

One of the following: 
=sxcView=00h (PivotTable view) 
=sxcField=01h (PivotTable field) 
=sxcHierarcy=02h (OLAP cube Hierarchy) 
=sxcQsi=05h (Query Table) 
=sxcQuery=06h (Database query) 
=sxcGrpLevel=07h (OLAP cube group level) 
=sxcGroup=08h (OLAP cube member group) 

9 

sxd 

1 

=sxdId=00h (ID) 

10 

cchNameTotal 
(dwUserData) 

4 

For the first record for this ID this will be the 
length in characters of the ID string (stName). 
For subsequent/continuation records it will be 
zero. 

14 

(Reserved) 

2 

Reserved; Must be zero. 

16 

stName 
(rgbSxAddlData) 

var 

Name (ID) string, identifying class instance, 
etc.; continued across multiple SXADDL records 
if necessary, using Unicode encoding. (See 
section titled Unicode Strings in Biff8 for more 
information about these encodings.) 



 
Record Data: SXADDL Variant: sxdId (identifier) for sxcCache 

Offset 

Name 

Size 

Contents 

8 

sxc 

1 

=sxcCache=03h (PivotTable cache) 

9 

Sxd 

1 

=sxdId=00h (ID) 

10 

idCache 
(dwUserData) 

4 

The internally assigned PivotTable cache ID (a 
DWORD). 

14 

(Reserved) 

2 

Reserved; Must be zero. 

16 

rgbSxAddlData 

var 

(empty) 



 
Record Data: SXADDL Variant: sxdEnd (end of class). Used by multiple sxc classes 
as the final record of the set for the given class instance. 


Offset 

Name 

Size 

Contents 

8 

sxc 

1 

One of the following: 
=sxcView=00h (PivotTable view) 
=sxcField=01h (PivotTable field) 
=sxcHierarcy=02h (OLAP cube hierarchy) 
=sxcCache=03h (PivotTable cache) 
=sxcQsi=05h (Query Table) 
=sxcQuery=06h (Database query) 
=sxcGrpLevel=07h (OLAP cube group level) 
=sxcGroup=08h (OLAP cube member group) 

9 

sxd 

1 

=sxdEnd=FFh (End) 

10 

dwUserData 

4 

=0 

14 

(Reserved) 

2 

Reserved; Must be zero. 

16 

rgbSxAddlData 

var 

(empty) 



 
Record Data: SXADDL Variant: sxdVerUpdInv (the properties are invalid when the 
PivotTable view is updated by the indicated PivotTable version or earlier). Used by 
multiple sxc classes. 

Offset 

Name 

Size 

Contents 

8 

sxc 

1 

One of the following: 
=sxcView=00h (PivotTable view) 
=sxcField=01h (PivotTable field) 
=sxcHierarcy=02h (OLAP cube 
Hierarchy) 
=sxcCache=03h (PivotTable cache) 
=sxcQsi=05h (Query Table) 
=sxcQuery=06h (Database Query) 
=sxcGrpLevel=07h (OLAP cube group 
level) 
=sxcGroup=08h (OLAP cube member 
group) 

9 

sxd 

1 

=sxdVerUpdInv=01h (properties invalid 
when PivotTable view updated by certain 
PivotTable version or earlier) 

10 

dwVersionInvalidates 
(dwUserData) 

4 

One of the following version numbers: 
0= Excel 9 (2000) and earlier 
1= Excel 10 (XP) 
2= Excel 11 (2003) 
3= Excel 12 (2007) 
If the PivotTable was updated by this 
version or earlier, then subsequent records 
for this class instance are considered 
invalid. 

14 

(Reserved) 

2 

Reserved; Must be zero. 

16 

(rgbSxAddlData) 

Var 

(empty) 



 

Record Data: SXADDL Variant: sxdVer10Info (Excel version 10 properties) for 
sxcCache. 


Offset 

Name 

Size 

Contents 

8 

sxc 

1 

=sxcCache=03h (PivotTable cache) 

9 

sxd 

1 

=sxdVer10Info=02h (Excel 10 properties) 

10 

(dwUserData) 

4 

Reserved; Must be zero. 

14 

(Reserved) 

2 

Reserved; Must be zero. 

16 

sxdbsave10 
(rgbSxAddlData) 

14 

Structure of Excel 10 properties (described 
below) 



 
The sxdbsave10 structure looks like this: 

Offset 

Name 

Size 

Contents 

0 

citmGhostMax 

4 

Maximum number of PivotItems that 
no longer appear in any records 
retained during PivotTable refresh. 

4 

bVerCacheLastRefresh 

1 

The PivotTable version which last 
refreshed this cache. 
One of the following version 
numbers: 
0= Excel 9 (2000) and earlier 
1= Excel 10 (XP) 
2= Excel 11 (2003) 
3=Excel 12 (2007) 

5 

bVerCacheRefreshableMin 

1 

The minimum PivotTable version 
needed to refresh this cache. 
One of the following version 
numbers: 
0= Excel 9 (2000) and earlier 
1= Excel 10 (XP) 
2= Excel 11 (2003) 
3= Excel 12 (2007) 

6 

numDateCopy 

8 

Redundant date of when the 
PivotTable cache was last refreshed. 



 
Record Data: SXADDL Variant: sxdVer10Info (Excel 10 properties) for sxcView. 

Offset 

Name 

Size 

Contents 

8 

sxc 

1 

=sxcView=00h (PivotTable view) 

9 

sxd 

1 

=sxdVer10Info=02h (Excel 10 properties) 

10 

dwViewFlagsVer10 
(dwUserData) 

4 

PivotTable view Excel 10 flags (described 
below) 

14 

(Reserved) 

2 

Reserved; Must be zero. 

16 

(rgbSxAddlData) 

0 

(empty) 



 
The dwViewFlagsVer10 looks like this: 


Bits 

Mask 

Name 

Contents 

7-0 

000000FFh 

bVerSxMacro 

Default property settings for 
the PivotTable view were 
initialized based on this 
PivotTable version. 
One of the following version 
numbers: 
0= Excel 9 (2000) and earlier 
1= Excel 10 (XP) 
2= Excel 11 (2003) 
3= Excel 12 (2007) 

8 

00000100h 

fDisplayImmediateItems 

=1 if PivotItems are displayed 
in the PivotTable view even 
when there is no field in the 
data area 
=0 otherwise 

9 

00000200h 

fEnableDataEd 

=1 if the user is allowed to 
change the values in the data 
area of the PivotTable view 
=0 otherwise 

10 

00000400h 

fDisableFList 

=1 if the PivotTable field list 
control/window is not 
displayed when the user‘s 
selection is in a PivotTable cell 
=0 otherwise 

11 

00000800h 

fReenterOnLoadOnce 

=1 if the PivotTable view is 
automatically re-entered onto 
the worksheet on the next 
load 
=0 otherwise 

12 

00001000h 

fNotViewCalculatedMembers 

=1 if OLAP cube calculated 
members should be hidden in 
the PivotTable view 
=0 otherwise 

13 

00002000h 

fNotVisualTotals 

=1 if grand totals and 
subtotals in a PivotTable 
based on an OLAP source 
include values of hidden 
members rather than just the 
values of the members 
currently shown in the 
PivotTable view. 
=0 otherwise 




Bits 

Mask 

Name 

Contents 

14 

00004000h 

fPageMultipleItemLabel 

=1 if when a field, from a 
PivotTable that is not based 
on an OLAP source, has one 
or more hidden items and is 
being shown in the page area 
the PivotItem cell shows the 
text .(Multiple Items). instead 
of .(All). 
=0 othewise 

15 

00008000h 

fTensorFillCv 

=1 if for a PivotTable based 
on an OLAP source the 
data/aggregate cells in the 
PivotTable view use the 
background color, if available, 
from the OLAP server. 
=0 otherwise 

16 

00010000h 

fHideDDData 

=1 if the dropdown control for 
the .Data. PivotField should 
be hidden. 
=0 otherwise 

31-17 

FFFE0000h 

(Reserved) 

Reserved; Must be zero 



 
Record Data: SXADDL Variant: sxdVer10Info (Excel 10 properties) for sxcField. 

Offset 

Name 

Size 

Contents 

8 

sxc 

1 

=sxcField=01h (PivotTable field) 

9 

sxd 

1 

=sxdVer10Info=02h (Excel 10 properties) 

10 

dwFieldFlagsVer10 
(dwUserData) 

4 

PivotTable field Excel 10 flags (described 
below) 

14 

(Reserved) 

2 

Reserved; Must be zero. 

16 

(rgbSxAddlData) 

0 

(empty) 



 
The dwFieldFlagsVer10 looks like this: 

Bits 

Mask 

Name 

Contents 

0 

00000001h 

fHideDD 

=1 if the dropdown control for this 
PivotField should be hidden. 
=0 otherwise 

31-1 

FFFFFFFEh 

(Reserved) 

Reserved; Must be zero. 



 
Record Data: SXADDL Variant: sxdXMLSource (URL for editing the source of a web-
based Query Table). If the URL is greater than 255 characters then the string is 
broken up into 255 character (at the most) segments with each segment saved in its 
own SXADDL record. 

Offset 

Name 

Size 

Contents 

8 

sxc 

1 

=sxcQuery=06h (Database query) 




9 

sxd 

1 

=sxdXMLSource=04h (URL for editing the 
source of a web-based Query Table) 

10 

cchXMLSource 
(dwUserData) 

4 

For the first record for this URL this is the length 
in characters of the URL string (stXMLSource). 
For subsequent/continuation records it is zero. 

14 

(Reserved) 

2 

Reserved; Must be zero. 

16 

stXMLSource 
(rgbSxAddlData) 

Var 

XML Source string, continued across multiple 
SXADDL records if necessary, using Unicode 
encoding. (See section titled Unicode Strings in 
Biff8 for more information about these 
encodings.) 



 
Record Data: SXADDL Variant: sxdSrcDataFile (source data file). If the filename 
is greater than 255 characters then the string is broken up into 255 character (at the 
most) segments with each segment saved in its own SXADDL record. 

Offset 

Name 

Size 

Contents 

8 

sxc 

1 

=sxcQuery=06h (Database query) 

9 

sxd 

1 

=sxdSrcDataFile=05h (Source data file) 

10 

cchSrcDataFile 
(dwUserData) 

4 

For the first record for this filename this is the 
length in characters of the filename string 
(stSrcDataFile). For subsequent/continuation 
records it is zero. 

14 

(Reserved) 

2 

Reserved; Must be zero. 

16 

stSrcDataFile 
(rgbSxAddlData) 

Var 

Source data file string, continued across multiple 
SXADDL records if necessary, using Unicode 
encoding. (See section titled Unicode Strings in 
Biff8 for more information about these 
encodings.) 



 
Record Data: SXADDL Variant: sxdSrcConnFile (source connection file). If the 
filename is greater than 255 characters then the string is broken up into 255 
character (at the most) segments with each segment saved in its own SXADDL 
record. 

Offset 

Name 

Size 

Contents 

8 

sxc 

1 

=sxcQuery=06h (Database query) 

9 

sxd 

1 

=sxdSrcConnFile=06h (Source connection 
file) 

10 

cchSrcConnFile 
(dwUserData) 

4 

For the first record for this filename this is the 
length in characters of the filename string 
(stSrcConnFile). For subsequent/continuation 
records it is zero. 

14 

(Reserved) 

2 

Reserved; Must be zero. 




Offset 

Name 

Size 

Contents 

16 

stSrcConnFile 
(rgbSxAddlData) 

Var 

Source connecting file string, continued across 
multiple SXADDL records if necessary, using 
Unicode encoding. (See section titled Unicode 
Strings in Biff8 for more information about these 
encodings.) 



 
Record Data: SXADDL Variant: sxdReconnCond (reconnect handling condition) 

Offset 

Name 

Size 

Contents 

8 

sxc 

1 

=sxcQuery=06h (Database query) 

9 

sxd 

1 

=sxdSrcDataFile=07h (Reconnect handling 
condition) 

10 

rccDBQuery 
(dwUserData) 

4 

One of the following reconnection handling 
condition values: 
0= Prompt the user to determine if the extra 
connection and source data information available 
should be used. 
1= Always use the extra connection and source 
data information available without prompting the 
user about what to do. 
2= Never make use of the extra connection and 
source data information. 
Indicates how to handle the case when a refresh 
operation can‘t reconnect to the data source. 
The extra connection information is the source 
connection file and the extra source data 
information is the source data file. 

14 

(Reserved) 

2 

Reserved; Must be zero. 

16 

(rgbSxAddlData) 

Var 

(empty) 



 
Record Data: SXADDL Variant: sxdGrpLevelInfo (OLAP cube group level 
information). 

Offset 

Name 

Size 

Contents 

8 

sxc 

1 

=sxcGrpLevel=07h (OLAP cube group level) 

9 

sxd 

1 

=sxdGrpLevelInfo=06h (OLAP cube group 
level information) 

10 

dwFlagsSxtgl 
(dwUserData) 

4 

OLAP cube group level flags (described below) 

14 

(Reserved) 

2 

Reserved; Must be zero. 

16 

stLevelName 
(rgbSxAddlData) 

Var 

String containing the caption (display name) of 
this OLAP cube level. 



 
The dwFlagsSxtgl (OLAP cube group level flags) are as follows: 


Bits 

Mask 

Name 

Contents 

0 

00000001h 

fGroupLevel 

=1 if this is a custom OLAP cube group level 
rather than an OLAP cube level that came from 
the cube data source 
=0 otherwise 

31–1 

FFFFFFFCh 

(Reserved) 

Reserved; must be zero 



 
Record Data: SXADDL Variant: sxdGrpInfo (OLAP cube member group information) 

Offset 

Name 

Size 

Contents 

8 

sxc 

1 

=sxcGroup=08h (OLAP cube member 
group) 

9 

sxd 

1 

=sxdGrpInfo=07h (OLAP cube member 
group information) 

10 

dwFlagsSxtgs 
(dwUserData) 

4 

OLAP cube member group flags (see 
description below) 

14 

(Reserved) 

2 

Reserved; Must be zero. 

16 

(rgbSxAddlData 
starts here) 
stUniqueName 

var 

String containing the unique name of this 
OLAP cube member group. 

var 

stCaption 

var 

String containing the caption (display name) 
of this OLAP cube member group. 

var 

(optional) 
stParentUniqueName 

var 

If this group has a parent OLAP cube level 
then this is a string containing the unique 
name of that parent level, otherwise the 
string is missing. 

var 

iGroupNum 

4 

An ID uniquely identifies this group within 
the OLAP cube level. 



 
The dwFlagsSxtgs (OLAP cube member group flags) are as follows: 

Bits 

Mask 

Name 

Contents 

3-0 

0000000fh 

(Reserved) 

Reserved; must be zero 

4 

00000010h 

fHasNoParent 

=1 if this group does not have a parent OLAP 
cube level 
=0 otherwise 

31-5 

FFFFFFE0h 

(Reserved) 

Reserved; must be zero 



 
Record Data: SXADDL Variant: sxdMember (OLAP cube group member) 

Offset 

Name 

Size 

Contents 

8 

sxc 

1 

=sxcGroup=08h (OLAP cube member group) 

9 

sxd 

1 

=sxdMember=08h (OLAP cube group member) 

10 

dwFlagsSxtgmem 
(dwUserData) 

4 

OLAP cube group member flags (see description 
below) 

14 

(Reserved) 

2 

Reserved; Must be zero. 




Offset 

Name 

Size 

Contents 

16 

stUnique 
(rgbSxAddlData) 

Var 

String containing the unique name of an OLAP 
cube member that is part of the current group 



 
The dwFlagsSxtgmem (OLAP cube group member flags) are as follows: 

Bits 

Mask 

Name 

Contents 

0 

00000001h 

(Reserved) 

Reserved; must be zero 

1 

00000002h 

fGroup 

=1 if this is a custom OLAP cube group member 
rather than an OLAP cube member that came from 
the cube data source 
=0 otherwise 

2 

00000004h 

fDead 

=1 if this OLAP cube member doesn‘t exist 
anymore in the cube data source 
=0 otherwise 

31-3 

FFFFFFF8h 

(Reserved) 

Reserved; must be zero 



 
Record Data: SXADDL Variant: sxdProperty (OLAP cube member property) 

Offset 

Name 

Size 

Contents 

8 

sxc 

1 

=sxcHierarchy=02h (OLAP cube hierarchy) 

9 

sxd 

1 

=sxdProperty=05h (OLAP cube member 
property) 

10 

dwFlagsSxtdmp 
(dwUserData) 

4 

OLAP cube member property flags (see 
description below) 

14 

(reserved) 

2 

Reserved; Must be zero. 

16 

(rgbSxAddlData 
starts here) 
stProperty 

Var 

String containing the unique name of the OLAP 
cube member property 

var 

sxtdmpp 

8 

Structure of OLAP cube member property 
properties (see description below) 



 
The dwFlagsSxtdmp (OLAP cube member property flags) are as follows: 

Bits 

Mask 

Name 

Contents 

0 

00000001h 

fDisplayInReport 

=1 if the OLAP cube member property 
should be displayed in the PivotTable view 
=0 otherwise 

1 

00000002h 

fDisplayInTip 

=1 if the OLAP cube member property 
should be displayed as a tip. In Excel 10 
the member property is still displayed in 
the PivotTable view, there will be no tip. 
This is persisted to provide a better file 
roundtrip experience from the Microsoft 
Office Web Components Pivot control to 
Office Excel and back to the Pivot control. 
=0 otherwise 

31-2 

FFFFFFFCh 

(Reserved) 

Reserved; must be zero 



 


The SXTDMPP structure is organized as follows: 

Offset 

Name 

Size 

Contents 

0 

cchLevelUnq 

2 

(unsigned) Count of characters in stProperty, 
starting with the first character that represents the 
unique name of the OLAP cube level that the OLAP 
cube member property belongs to. 

2 

ichPropName 

2 

(unsigned) Zero-based character offset into 
stProperty indicating where the OLAP cube 
member property name begins. 

4 

cchPropName 

2 

(unsigned) Count of characters in stProperty, 
starting with character ichPropName that 
represents the OLAP cube member property name. 

6 

isxtl 

2 

(signed) Index of the OLAP cube level the OLAP 
cube member property belongs to. -1 (0xFFFF) 
indicates the member property applies to all levels 
in this OLAP cube hierarchy. 



 
Record Data: SXADDL Variant: sxdFilterMember (OLAP cube filtered members). 
This record variant can appear multiple times, back to back, with different 
cStPageItems and grStPageItems settings if the combined length of all the OLAP 
cube member unique name strings plus the FRT header is bigger than can fit into 
one BIFF record. 

Offset 

Name 

Size 

Contents 

8 

sxc 

1 

=sxcHierarchy=02h (OLAP cube 
hierarchy) 

9 

sxd 

1 

=sxdFilterMember=09h (OLAP cube 
filtered members) 

10 

dwSxFilterMemFlags 
(dwUserData) 

4 

OLAP cube filtered members flags (see 
description below) 

14 

(Reserved) 

2 

Reserved; Must be zero. 

16 

(rgbSxAddlData 
starts here) 
cStPageItems 

2 

Count of strings in the list of OLAP cube 
member unique names that immediately 
follow this field 

18 

grStPageItems 

var 

List of OLAP cube member unique name 
strings, one right after another, indicating 
which members are selected when this 
OLAP cube hierarchy is in the page of the 
PivotTable view. 



 
The dwSxFilterMemFlags (OLAP cube filtered members flags) are as follows: 


Bits 

Mask 

Name 

Contents 

0 

00000001h 

fEnableMultiplePageItems 

=1 if the user is allowed to 
select two or more OLAP cube 
members in the OLAP cube 
hierarchy when the hierarchy is 
in the page area of the 
PivotTable view. 
=0 otherwise 
Must be 1. 

1 

00000002h 

fExpectMultiplePageItems 

=1 if Excel should be ready to 
handle loading multiple OLAP 
cube member strings. 
=0 otherwise 
Must be 1. 

31-2 

FFFFFFFCh 

(Reserved) 

Reserved; must be zero 



 
Record Data: SXADDL Variant: sxdCalcMember (OLAP cube calculated member or 
set) 

Offset 

Name 

Size 

Contents 

8 

sxc 

1 

=sxcView=00h (PivotTable view) 

9 

sxd 

1 

=sxdCalcMember=03h (OLAP cube 
calculated member or set) 

10 

dwSxcalcmemflags 
(dwUserData) 

4 

OLAP cube calculated member or set flags 
(described below) 

14 

(Reserved) 

2 

Reserved; Must be zero. 

16 

(rgbSxAddlData 
starts here) 
stCalcMemName 

var 

String containing the OLAP cube calculated 
member or set unique name. 

var 

stMDXFormula 

var 

String containing the MDX representation of 
the formula for the OLAP cube calculated 
member if fLongFormula=0; otherwise the 
string is missing and an SXADDL record of 
type sxdCalcMemString is written that 
contains the formula 

var 

stMemberCaption 

var 

String containing the caption (display name) 
of the custom OLAP cube calculated member 
(not used for sets) if fMemberCaption=1; 
otherwise the string is missing 

var 

stSourceHierarchy 

var 

String containing the OLAP cube hierarchy 
unique name of the hierarchy the OLAP cube 
calculated member (not used for sets) is 
associated with if fSourceHierarchy=1; 
otherwise the string is missing 




Offset 

Name 

Size 

Contents 

var 

stParentUnique 

var 

String containing the OLAP cube member 
unique name of the parent member of the 
OLAP cube calculated member (not used for 
sets) if fParentUnique=1; otherwise the 
string is missing 

var 

wSolveOrder 

4 

When there are two or more OLAP cube 
calculated members, the order they are 
calculated in can affect the result of this 
number (wSolveOrder) and is used to 
determine where in the sequence of 
calculations this calculated member is 
computed and applied. A value of zero 
means it is undetermined (it is up to the 
OLAP provider) as to where in the calculation 
sequence the calculated member will be 
computed. 



 
The dwSxcalcmemflags (OLAP cube calculated member flags) are as follows: 

Bits 

Mask 

Name 

Contents 

0 

00000001h 

fParentUnique 

=1 if the string stParentUnique is 
included in rgbSxAddlData 
=0 otherwise 

1 

00000002h 

fMemberCaption 

=1 if the string stMemberCaption 
is included in rgbSxAddlData 
=0 otherwise 

2 

00000004h 

fSourceHierarchy 

=1 if the string 
stSourceHierarchy is included in 
rgbSxAddlData 
=0 otherwise 

3 

00000008h 

fLongFormula 

=1 if the length of the MDX 
representation of the formula is 
greater than 255 characters. In this 
case the formula string is written to 
an SXADDL record of type 
sxdCalcMemString; 
=0 if the string stMDXFormula is 
included in rgbSxAddlData 

7–4 

000000F0h 

(Reserved) 

Reserved; Must be zero. 

8 

00000100h 

fSet 

=1 if the calculation is for an OLAP 
cube set 
=0 if the calculate is for an OLAP 
cube calculated member 

31-9 

FFFFFE00h 

(Reserved) 

Reserved; Must be zero. 



 
Record Data: SXADDL Variant: sxdCalcMemString (OLAP cube calculated member 
formula MDX) 


Offset 

Name 

Size 

Contents 

8 

sxc 

1 

=sxcView=00h (PivotTable view) 

9 

sxd 

1 

=sxdCalcMemString=0Ah (OLAP cube calculated 
member formula MDX) 

10 

cchMDXFormula 
(dwUserData) 

4 

For the first record for this MDX string this is the length 
in characters of the MDX string (stMDXFormula). For 
subsequent/continuation records it is zero. 

14 

(Reserved) 

2 

Reserved; Must be zero. 

16 

stMDXFormula 
(rgbSxAddlData) 

var 

MDX formula string, continued across multiple SXADDL 
records if necessary, using Unicode encoding. (See 
section titled Unicode Strings in Biff8 for more 
information about these encodings.) 



 
Record Data: SXADDL Variant: sxdSxcondfmt (Office Excel 2007 – PivotTable 
conditional format). 

Offset 

Name 

Size 

Contents 

8 

sxc 

1 

=sxcSxcondfmt=03h (PivotTable 
conditional formatting) 

9 

sxd 

1 

=sxdSxcondfmt=35h (PivotTable 
conditional format) 

10 

(dwUserData) 

4 

Reserved; Must be zero. 

14 

(Reserved) 

2 

Reserved; Must be zero. 

16 

rtsxcondfmt 
(rgbSxAddlData) 

16 

Structure of PivotTable conditional 
formatting properties (described below) 



 
The RTSXCONDFMT structure is organized as follows: 

Offset 

Name 

Size 

Contents 

0 

sxcondfmtScope 

4 

Area of the PivotTable to which the conditional 
formatting applies. 
One of the following: 
0= Cells in user selection. 
1= Cells in the selected data/value fields. 
2= Cells in the selected PivotTable field 
intersections. 




Offset 

Name 

Size 

Contents 

4 

sxcondfmtType 

4 

Specifies the PivotTable conditional formatting 
top N evaluation type. 
One of the following: 
0= No top N evaluation. 
1= Top N is evaluated across the entire scope 
range. 
2= Top N is evaluated for each row. 
3= Top N is evaluated for each column. 

8 

ipriority 

4 

Priority of the PivotTable conditional formatting 
rule. 

12 

csxrule 

4 

Count of PivotTable rule records that follow (see 
sxdSxrule). 



 
Record Data: SXADDL Variant: sxdSxpiIvmb (Office Excel 2007 – PivotTable 
page/report field – cell value metadata mapping). 

Offset 

Name 

Size 

Contents 

8 

sxc 

1 

=sxcView=00h (PivotTable view) 

9 

sxd 

1 

=sxdSxpiIvmb=36h (PivotTable 
page/report field – cell value metadata 
mapping) 

10 

(dwUserData) 

4 

Reserved; Must be zero. 

14 

(Reserved) 

2 

Reserved; Must be zero. 

16 

rtsxpiivmb 
(rgbSxAddlData) 

8 

Structure of PivotTable page/report field – 
cell value metadata mapping (described 
below) 



 
The RTSXPIIVMB structure is organized as follows: 

Offset 

Name 

Size 

Contents 

0 

isxpi 

4 

Index of PivotTable page/report field. 

4 

ivmb 

4 

Index of cell value metadata. 



 
Record Data: SXADDL Variant: sxdAutoShow (Office Excel 2007 – legacy AutoShow 
item count). 

Offset 

Name 

Size 

Contents 

8 

sxc 

1 

=sxcField12=17h (PivotTable field) 

9 

sxd 

1 

=sxdAutoShow=37h (legacy AutoShow 
item count) 

10 

citmAutoShow 
(dwUserData) 

4 

Number of items to show for legacy 
AutoShow. 




14 

(Reserved) 

2 

Reserved; Must be zero. 

16 

(rgbSxAddlData) 

var 

(empty) 



 
Record Data: SXADDL Variant: sxdSxfilter (Office Excel 2007 – PivotTable 
advanced filter properties). 

Offset 

Name 

Size 

Contents 

8 

sxc 

1 

=sxcFilter12=1Dh (PivotTable advanced 
filter) 

9 

sxd 

1 

=sxdSxfilter=38h (PivotTable advanced 
filter properties) 

10 

(dwUserData) 

4 

Reserved; Must be zero. 

14 

(Reserved) 

2 

Reserved; Must be zero. 

16 

rtsxfilter12 
(rgbSxAddlData) 

24 

Structure of PivotTable advanced filter 
properties (described below) 



 
The RTSXFILTER12 structure is organized as follows: 

Offset 

Name 

Size 

Contents 

0 

isxvd 

4 

Index of the PivotTable field that this PivotTable 
filter belongs to. 

4 

isxvdMProp 

4 

Index of the PivotTable field representing the 
OLAP cube member property field that this 
PivotTable filter is defined on. 

8 

sxft 

4 

Specifies the type of the PivotTable advanced: 
One of the following: 
0= Unknown 
1= count 
2= percent 
3= sum 
4= caption equal 
5= caption not equal 
6= caption begins with 
7= caption does not begin with 
8= caption ends with 
9= caption does not end with 




Offset 

Name 

Size 

Contents 

 

 

 

10= caption contains 
11= caption does not contain 
12 = caption is greater than 
13= caption is greater than or equal to 
14= caption is less than 
15= caption is less than or equal to 
16= caption is between 
17= caption is not between 
18= value equal 
19= value not equal 

 

 

 

20= value greater than 
21= value greater than or equal to 
22= value less than 
23= value less than or equal to 
24= value between 
25= value not between 
26= date equals 
27= date older than 
28= date newer than 
29= date between 

 

 

 

30= tomorrow 
31= today 
32= yesterday 
33= date of next week 
34= date of this week 
35= date of last week 
36= date of next month 
37= date of this month 
38=date of last month 
39= date of next quarter 




Offset 

Name 

Size 

Contents 

 

 

 

40= date of this quarter 
41= date of last quarter 
42= date of next year 
43= date of this year 
44= date of last year 
45= year to date 
46= dates in first quarter 
47= dates in second quarter 
48= dates in third quarter 
49= dates in fourth quarter 

 

 

 

50= dates in Jan. 
51= dates in Feb. 
52= dates in Mar. 
53= dates in April. 
54= dates in May. 
55= dates in June. 
56= dates in July. 
57= dates in Aug. 
58= dates in Sep. 
59= dates in Oct. 

 

 

 

60= dates in Nov. 
61= dates in Dec. 
62= date not equal 
63= date older than or equal 
64= date newer than or equal 
65= date not between 

12 

iEvalOrder 

4 

Evaluation order of the PivotTable filter and it 
starts with zero. 

16 

isxdiMeasure 

4 

Index of the PivotTable measure field - used only 
by filters in relational pivots - and specifies on 
which measure a value filter should apply. 

20 

isxthMeasure 

4 

Index of the OLAP cube measure field specifying 
on which measure a value filter should apply. 



 
Record Data: SXADDL Variant: sxdSxfilterDesc (Office Excel 2007 – PivotTable 
advanced filter description string). 


Offset 

Name 

Size 

Contents 

8 

sxc 

1 

=sxcFilter12=1Dh (PivotTable advanced 
filter) 

9 

sxd 

1 

=sxdSxfilterDesc=39h (PivotTable 
advanced filter description string) 

10 

cchDesc 
(dwUserData) 

4 

For the first record for the description this 
will be the length in characters of the 
description string (stDesc). For 
subsequent/continuation records it will be 
zero. 

14 

(Reserved) 

2 

Reserved; Must be zero. 

16 

stDesc 
(rgbSxAddlData) 

var 

Description string; continued across multiple 
SXADDL records if necessary, using Unicode 
encoding. (See section titled Unicode 
Strings in Biff8 for more information about 
these encodings.) 



 
Record Data: SXADDL Variant: sxdSxfilterValue1 (Office Excel 2007 – PivotTable 
advanced filter value 1). 

Offset 

Name 

Size 

Contents 

8 

sxc 

1 

=sxcFilter12=1Dh (PivotTable advanced 
filter) 

9 

sxd 

1 

=sxdSxfilterValue1=3Ah (PivotTable 
advanced filter value 1) 

10 

cchValue 
(dwUserData) 

4 

For the first record for the value this will be 
the length in characters of the value string 
(stValue). For subsequent/continuation 
records it will be zero. 

14 

(Reserved) 

2 

Reserved; Must be zero. 

16 

stValue 
(rgbSxAddlData) 

var 

Value string; continued across multiple 
SXADDL records if necessary, using Unicode 
encoding. (See section titled Unicode 
Strings in Biff8 for more information about 
these encodings.) 



 
Record Data: SXADDL Variant: sxdSxfilterValue2 (Office Excel 2007 – PivotTable 
advanced filter value 2). 

Offset 

Name 

Size 

Contents 

8 

sxc 

1 

=sxcFilter12=1Dh (PivotTable advanced 
filter) 

9 

sxd 

1 

=sxdSxfilterValue2=3Bh (PivotTable 
advanced filter value 2) 




10 

cchValue 
(dwUserData) 

4 

For the first record for the value this will be 
the length in characters of the value string 
(stValue). For subsequent/continuation 
records it will be zero. 

14 

(Reserved) 

2 

Reserved; Must be zero. 

16 

stValue 
(rgbSxAddlData) 

var 

Value string; continued across multiple 
SXADDL records if necessary, using Unicode 
encoding. (See section titled Unicode 
Strings in Biff8 for more information about 
these encodings.) 



 
Record Data: SXADDL Variant: sxdXlsfilter (Office Excel 2007 – PivotTable 
dynamic filter properties). 

Offset 

Name 

Size 

Contents 

8 

sxc 

1 

=sxcSxfilter12=1Dh (PivotTable 
advanced filter) 

9 

sxd 

1 

=sxdXlsfilter=3Ch (PivotTable dynamic 
filter properties) 

10 

(dwUserData) 

4 

Reserved; Must be zero. 

14 

(Reserved) 

2 

Reserved; Must be zero. 

16 

rtxlsfilter 
(rgbSxAddlData) 

44 

Structure of PivotTable dynamic filter 
properties (described below) 



 
The RTXLSFILTER structure is organized as follows: 

Offset 

Name 

Size 

Contents 

0 

cft 

4 

Dynamic filter type. 
One of the following: 
0= Filter type not available 
1= Shows values that are above average. 
2= Shows values that are below average. 
3= Shows values in the top 10. 
4= Shows values for a specific date. 
5= Shows values before a specific date. 
6= Shows values after a specific date. 
7= Shows values between two dates, inclusive. 
8= Shows tomorrow‘s dates. 
9= Shows today's dates. 




Offset 

Name 

Size 

Contents 

 

 

 

10= Shows yesterday's dates. 
11= Shows next week's dates. 
12= Shows this week's dates. 
13= Shows last week's dates. 
14= Shows next month's dates. 
15= Shows this month's dates. 
16= Shows last month's dates. 
17= Shows next quarter's dates. 
18= Shows this quarter's dates. 
19= Shows last quarter's dates. 

 

 

 

20= Shows next year's dates. 
21= Shows this year's dates. 
22= Shows last year's dates. 
23= Shows the dates between the beginning of 
the year and today, inclusive. 
24= Shows the dates that are in the 1st quarter, 
regardless of year. 
25= Shows the dates that are in the 2nd quarter, 
regardless of year. 
26= Shows the dates that are in the 3rd quarter, 
regardless of year. 
27= Shows the dates that are in the 4th quarter, 
regardless of year. 
28= Shows the dates that are in January, 
regardless of year. 
29= Shows the dates that are in February, 
regardless of year. 




Offset 

Name 

Size 

Contents 

 

 

 

30= Shows the dates that are in March, regardless 
of year. 
31= Shows the dates that are in April, regardless 
of year. 
32= Shows the dates that are in May, regardless 
of year. 
33= Shows the dates that are in June, regardless 
of year. 
34= Shows the dates that are in July, regardless 
of year. 
35= Shows the dates that are in August, 
regardless of year. 
36= Shows the dates that are in September, 
regardless of year. 
37= Shows the dates that are in October, 
regardless of year. 
38= Shows the dates that are in November, 
regardless of year. 
39= Shows the dates that are in December, 
regardless of year. 

 

 

 

40= Shows the values for dates that aren‘t a 
specific date. 
41= Shows the values before or equal to a specific 
date. 
42= Shows the values equal to or after a specific 
date. 
43= Shows the values that are not between two 
dates. 

4 

ccriteria 

4 

Count of criteria values/operands (see ezdoper1 
and ezdoper2) 

8 

(Variable) 

36 

Contents are dependent on the value of cft 
(dynamic filter type), see the variants described 
below. 



 
The rest of the RTXLSFILTER structure, when cft = 3, is organized as follows: 


Offset 

Name 

Size 

Contents 

8 

top10ft 

4 

Top 10 filter definition. 
One of the following: 
0= Unknown top 10 type. 
1= Show the top 10 based on the count of items. 
2= Show the top 10 percent. 
3= Show the top 10 based on the item values. 

12 

fTop 

2 

=1 to show the top 10 
=0 to show the bottom 10 

14 

numTopN 

8 

Top or bottom value. 

22 

(Reserved) 

14 

Reserved; Must be zero. 



 
The rest of the RTXLSFILTER structure, when cft <> 3, is organized as follows: 

Offset 

Name 

Size 

Contents 

8 

ezdoper1 

10 

First operand/criteria for the filter. 
Structure of PivotTable database operand 
(described below as RTSXEZDOPER). 

18 

ezdoper2 

10 

Second operand/criteria for the filter. 
Structure of PivotTable database operand 
(described below as RTSXEZDOPER). 

28 

djoin1 

4 

Specifies the relationship between the two 
operands/criteria. 
One of the following: 
0= Unknown relationship between the criteria. 
1= An .and. relationship between the criteria. 
2= An .or. relationship between the criteria. 

32 

djoin2 

4 

Specifies the relationship between the two 
operands/criteria. 
One of the following: 
0= Unknown relationship between the criteria. 
1= An .and. relationship between the criteria. 
2= An .or. relationship between the criteria. 



 
The RTSXEZDOPER structure is organized as follows: 


Offset 

Name 

Size 

Contents 

0 

vts 

1 

Value type of the operand/criteria. 
One of the following: 
0= Value not specified. 
4= Value is a real number. 
6= Value is a string. 
8= Value is a boolean or error. 
10= No match for value. 
12= Blank value. 
14= Non-blank value. 

1 

grbitSgn 

1 

Filter operator. 
One of the following: 
1= Show results which are less than criteria. 
2= Show results which are equal to criteria. 
3= Show results which are less than or equal to 
criteria. 
4= Show results which are greater than criteria. 
5= Show results which are not equal to criteria. 
6= Show results which are greater than or equal 
to criteria. 

2 

(Variable) 

8 

Contents are dependent on the value of vts (value 
type), see the variants described below. 



 
The rest of the RTSXEZDOPER structure, when vts = 0, vts = 10, vts = 12 and 
vts = 14, is organized as follows: 

Offset 

Name 

Size 

Contents 

2 

(Reserved) 

8 

Reserved; Must be zero. 



 
The rest of the RTSXEZDOPER structure, when vts = 4, is organized as follows: 

Offset 

Name 

Size 

Contents 

2 

num 

8 

A real number. 



 
The rest of the RTSXEZDOPER structure, when vts = 6, is organized as follows: 


Offset 

Name 

Size 

Contents 

2 

fCompare 

1 

=1 if the string is really simple so that an 
optimized string comparison routine can be used. 
=0 if the string is complex or if you‘re not sure 
whether the string is considered simple or 
complex. 

3 

fAutoWild 

1 

=1 if the string is treated as a prefix that can 
match any string that starts with the same 
characters. 

4 

(Reserved) 

4 

Reserved; Must be zero. 



 
The rest of the RTSXEZDOPER structure, when vts = 8, is organized as follows: 

Offset 

Name 

Size 

Contents 

2 

bBoolErr 

1 

A Boolean or error value. 
When fError = 0 then one of the following 
Boolean values: 
0= FALSE 
1= TRUE 
When fError =1 then one of the following Excel 
error values: 
0= #NULL!= a null range reference. 
7= #DIV0!= divide by zero. 
15= #VALUE!= an invalid value. 
23= #REF!= an invalid cell reference. 
29= #NAME?= an unrecognized name/label. 
36= #NUM!= an invalid number. 
42= #N/A= no value available. 

3 

fError 

1 

=1 if bBoolErr contains an Excel error value. 
=0 if bBoolErr contains a Boolean value. 

4 

(Reserved) 

4 

Reserved; Must be zero. 



 
Record Data: SXADDL Variant: sxdXlsfilterValue1 (Office Excel 2007 – 
PivotTable dynamic filter value 1). 

Offset 

Name 

Size 

Contents 

8 

sxc 

1 

=sxcFilter12=1Dh (PivotTable advanced 
filter) 

9 

sxd 

1 

=sxdXlsfilterValue1=3Dh (PivotTable 
dynamic filter value 1) 




10 

cchValue 
(dwUserData) 

4 

For the first record for the value this will be 
the length in characters of the value string 
(stValue). For subsequent/continuation 
records it will be zero. 

14 

(Reserved) 

2 

Reserved; Must be zero. 

16 

stValue 
(rgbSxAddlData) 

var 

Value string; continued across multiple 
SXADDL records if necessary, using Unicode 
encoding. (See section titled Unicode 
Strings in Biff8 for more information about 
these encodings.) 



 
Record Data: SXADDL Variant: sxdXlsfilterValue2 (Office Excel 2007 – 
PivotTable dynamic filter value 2). 

Offset 

Name 

Size 

Contents 

8 

sxc 

1 

=sxcFilter12=1Dh (PivotTable advanced 
filter) 

9 

sxd 

1 

=sxdXlsfilterValue2=3Eh (PivotTable 
dynamic filter value 2) 

10 

cchValue 
(dwUserData) 

4 

For the first record for the value this will be 
the length in characters of the value string 
(stValue). For subsequent/continuation 
records it will be zero. 

14 

(Reserved) 

2 

Reserved; Must be zero. 

16 

stValue 
(rgbSxAddlData) 

var 

Value string; continued across multiple 
SXADDL records if necessary, using Unicode 
encoding. (See section titled Unicode 
Strings in Biff8 for more information about 
these encodings.) 



 
Record Data: SXADDL Variant: sxdFilterMember12 (Office Excel 2007 – filtered 
OLAP cube member names). 

Offset 

Name 

Size 

Contents 

8 

sxc 

1 

=sxcHierarchy=02h (OLAP cube 
hierarchy) 

9 

sxd 

1 

=sxdFilterMember12=3Fh (filtered OLAP 
cube member names) 

10 

isxtl 
(dwUserData) 

4 

Index of OLAP cube level. 

14 

(Reserved) 

2 

Reserved; Must be zero. 

16 

rgstMember 
(rgbSxAddlData) 

var 

Sequence of member name strings using 
Unicode encoding. (See section titled 
Unicode Strings in Biff8 for more 
information about these encodings.) 



 


Record Data: SXADDL Variant: sxdPropName (Office Excel 2007 – OLAP member 
property name). 

Offset 

Name 

Size 

Contents 

8 

sxc 

1 

=sxcCacheField=04h (PivotCache field) 

9 

sxd 

1 

=sxdProName=40h (OLAP member 
property name) 

10 

cchName 
(dwUserData) 

4 

For the first record for the name this will be 
the length in characters of the name string 
(stName). For subsequent/continuation 
records it will be zero. 

14 

(Reserved) 

2 

Reserved; Must be zero. 

16 

stName 
(rgbSxAddlData) 

var 

Value string; continued across multiple 
SXADDL records if necessary, using Unicode 
encoding. (See section titled Unicode 
Strings in Biff8 for more information about 
these encodings.) 



 
Record Data: SXADDL Variant: sxdInfo12 (Office Excel 2007 – additional version 12 
properties) for sxcHierarchy. 

Offset 

Name 

Size 

Contents 

8 

sxc 

1 

=sxcHierarchy=02h (OLAP cube 
hierarchy) 

9 

sxd 

1 

=sxdInfo12=41h (additional version 12 
properties) 

10 

dwHierarchyFlags 
(dwUserData) 

4 

OLAP cube hierarchy flags (described below) 

14 

(Reserved) 

2 

Reserved; Must be zero. 

16 

(rgbSxAddlData) 

var 

(empty) 



 
The dwHierarchyFlags look like this: 

Bits 

Mask 

Name 

Contents 

0 

00000001h 

fUnbalancedRealKnown 

=1 if it has been determined 
whether the OLAP cube 
hierarchy is unbalanced. 

1 

00000002h 

fUnbalancedReal 

=1 if the OLAP cube hierarchy 
is unbalanced. 
=0 if 
fUnbalancedRealKnown is 0 
or if the OLAP cube hierarchy 
is not unbalanced. 




Bits 

Mask 

Name 

Contents 

2 

00000004h 

fUnbalancedGroupKnown 

=1 if it has been determined 
whether the OLAP cube 
grouped hierarchy is 
unbalanced. 

3 

00000008h 

fUnbalancedGroup 

=1 if the OLAP cube grouped 
hierarchy is unbalanced. 
=0 if 
fUnbalancedRealKnown is 0 
or if the OLAP cube grouped 
hierarchy is not unbalanced. 

4 

00000010h 

fHidden 

 

31-5 

FFFFFFE0h 

(Reserved) 

Reserved; Must be zero. 



 
Record Data: SXADDL Variant: sxdInfo12 (Office Excel 2007 – additional version 12 
properties) for sxcCache. 

Offset 

Name 

Size 

Contents 

8 

sxc 

1 

=sxcCache=03h (PivotCache) 

9 

sxd 

1 

=sxdInfo12=41h (additional version 12 
properties) 

10 

dwCacheFlags 
(dwUserData) 

4 

PivotCache flags (described below) 

14 

(Reserved) 

2 

Reserved; Must be zero. 

16 

(rgbSxAddlData) 

var 

(empty) 



 
The dwCacheFlags look like this: 

Bits 

Mask 

Name 

Contents 

0 

00000001h 

fSheetData 

=1 if the PivotCache supports 
sheet data formulas. 

1 

00000002h 

fSrvSupportAttribDrill 

=1 if the PivotCache's data 
source supports attribute drill. 

2 

00000004h 

fSrvSupportSubQuery 

=1 if the PivotCache's data 
source supports sub queries. 

31-3 

FFFFFFF8h 

(Reserved) 

Reserved; Must be zero. 



Any SXADDL variants not listed above are read by Office Excel as is and are retained 
within the appropriate context in which they were encountered. These records are 
saved into BIFF if the user saves in BIFF format. 


SXADDL12: Additional Workbook Connections Information 
(881h) 

This record stores additional data associated with DCONN (876h) record, and created 
by Excel 14 or newer. This record is structured the same way as SXADDL (864h) 
record, and has sxc field set to sxcWBConn (19h). 

SXDB: PivotTable Cache Data (C6h) 

The SXDB is stored on a separate stream that maintains information about each 
PivotTable cache. The SXDB record is followed by a single SXDBEX record and 
several FDB records, one for each field in the PivotTable, given by cfdbTot. 
Record Data — BIFF8 

Offset 

Name 

Size 

Contents 

4 

crdbdb 

4 

Number of records in database 

8 

idstm 

2 

Identifies the stream 

10 

grbit 

2 

=01h, fSaveData — data is saved with table layout. 
=02h, fInvalid — the PivotTable must be refreshed 
before the next update. 
=04h, fRefreshOnLoad — the PivotTable will be 
refreshed on load. 
=08h, fOptimizeCache — the cache is optimized to use 
the least amount of memory. 
=10h, fBackgroundQuery — results of the query are 
obtained in the background. 
=20h, fEnableRefresh — refresh is enabled. 

12 

crdbDbb 

2 

Number of records for each database block. 

14 

cfdbdb 

2 

Number of base fields in databases. 

16 

cfdbTot 

2 

Number of base fields, grouped fields, and calculated 
fields. 

18 

crdbUsed 

2 

This value is not used and can be set to zero. 

20 

vsType 

2 

Data source is one of: 
=1, Excel worksheet 
=2, External Data 
=4, Consolidation 
=8, Scenario PivotTable 

22 

cchWho 

2 

Number of characters in the string containing the name 
of the user who last refreshed the PivotTable. 

24 

rgb 

var 

String, represents the number of the user who last 
refreshed the PivotTable. Length is in cchWho. 



 

SXDBEX: PivotTable Cache Data (122h) 

The SXDBEX record is an extension of the SXDB record. Both records contain 
PivotTable cache data. 


Record Data — BIFF8 

Offset 

Name 

Size 

Contents 

4 

numDate 

8 

Date the PivotTable cache was created or was last 
refreshed. The date is stored as an 8-byte IEEE 
floating-point number. 

12 

cSxFormula 

4 

Count of SXFORMULA records for this cache. 



 

SXDI: Data Item (C5h) 

This record contains information about the PivotTable data item. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

isxvdData 

2 

Field that this data item is based on. 

6 

iiftab 

2 

Index to the aggregation function: 
=00h, Sum 
=01h, Count 
=02h, Average 
=03h, Max 
=04h, Min 
=05h, Product 
=06h, Count Nums 
=07h, StdDev 
=08h, StdDevp 
=09h, Var 
=0Ah, Varp 

8 

df 

2 

Data display format: 
=00h, Normal 
=01h, Difference from 
=02h, Percentage of 
=03h, Percentage difference from 
=04h, Running total in 
=05h, Percentage of row 
=06h, Percentage of column 
=07h, Percentage of total 
=08h, Index 

10 

isxvd 

2 

Index to the SXVD record used by the data display 
format. 

12 

isxvi 

2 

Index to the SXVI record used by the data display 
format. 

14 

ifmt 

2 

Index to the format table for this item. 

16 

cchName 

2 

Length of the name; if the name =FFFFh, rgch is null 
and the name in the PivotTable cache storage is used. 

18 

rgch 

var 

Name. 



 

SXDXF: PivotTable Formatting (F4h) 

This record stores formatting to apply to a PivotTable area 


Record Data — BIFF8 

Offset 

Name 

Size 

Contents 

4 

rgbdxf 

var 

PivotTable formatting to apply (refer to DXF 
documentation at the end of the XF record) 



 

SXEX: PivotTable View Extended Information (F1h) 

This record follows the SXVIEW record and contains information about additional 
features added to PivotTables in Excel 97. 
Record Data — BIFF8 

Offset 

Name 

Size 

Contents 

4 

csxformat 

2 

Number of SXFORMAT records to follow 

6 

cchErrorString 

2 

Number of characters for 
DisplayErrorString string 

8 

cchNullString 

2 

Number of characters for 
DisplayNullString string 

10 

cchTag 

2 

Number of characters in Tag string 

12 

csxselect 

2 

Number of RTSXSELECT records to follow 

14 

crwPage 

2 

Number of page field per row 

16 

ccolPage 

2 

Number of page field per column 

18 

grbit1 

2 

=0001h, fAcrossPageLay 
=01FEh, cWrapPage 
=0200h, fPreserveFormattingNow 
=0400h, fManualUpdate 

20 

grbit2 

2 

=0001h, fEnableWizard 
=0002h, fEnableDrilldown 
=0004h, fEnableFieldDialog 
=0008h, fPreserveFormatting 
=0010h, fMergeLabels 
=0020h, fDisplayErrorString 
=0040h, fDisplayNullString 
=0080h, fSubtotalHiddenPageItems 
=0100h, (unused) 
=0200h, FEnableDataEd 
=0400h, fDisableFList 

22 

cchPageFieldStyle 

2 

Number of characters in page field style string 

24 

cchTableStyle 

2 

Number of characters for table style string 

26 

cchVacateStyle 

2 

Number of characters for vacate style string 

28 

rgb 

var 

Array of characters for ErrorString, NullString, 
Tag, PageFieldStyle, TableStyle, VacateStyle 



 

SXEXT: External Source Information (DCh) 

This record stores information about the SQL query string that retrieves external 
data for a PivotTable. The record is followed by SXSTRING records that contain the 


SQL strings and then by a SXSTRING record that contains the SQL server connection 
string. 
Note: PARAMQRY has the same record number as SXEXT. This has no adverse 
ramifications in a BIFF file because PARAMQRY always occurs in conjunction with an 
SXEXT record. 
Record Data — BIFF8 

Offset 

Name 

Size 

Contents 

4 

grbit 

2 

Options flags; see following table 

6 

cparams 

2 

Number of parameter strings 

8 

cstQuery 

2 

Number of strings for SQL statement or URL 

10 

cstWebPost 

2 

Number of strings for post method of Web query 

12 

cstSQLSav 

2 

Number of strings for SQL statement for server-
based page fields 

14 

cstOdbcConn 

2 

Number of strings for ODBC connection string 



 
The grbit field contains the following flags. 

Bits 

Mask 

Name 

Contents 

2–0 

0007h 

dbt 

=1 ODBC data source 
=2 DAO recordset (no actual information about 
the recordset is saved) 
=3 reserved 
=4 Web (WWW) query 
XL9: 5= OLE database 
XL9: 6= Text query 
XL9: 7= ADO query 

3 

0008h 

fOdbcConn 

=1 for ODBC connection 

4 

0010h 

fSql 

=1 for ODBC connection 

5 

0020h 

fSqlSav 

=1 for server-based page fields 

6 

0040h 

fWeb 

=1 for a Web (WWW) query 

7 

0080h 

fSavePwd 

=1 if the Save Password option is on 

8 

0100h 

fTablesOnlyHTML 

=1 if the Save Tables in HTML Only option is 
on 

15–9 

FE00h 

(Reserved) 

 



 
The following records occur after a SXEXT record: 

Record name 

Contents 

SXSTRING 
SXSTRING 
. . . 

Collection of cstQuery SXSTRING records to concatenate to give 
the URL (Web query), SQL string (ODBC query) or parameterized 
SQL string (for server-based page field) 

SXSTRING 
SXSTRING 
. . . 

Collection of cstOdbcConn SXSTRING records to concatenate to give 
the ODBC connection string (ODBC queries only) 




SXSTRING 
SXSTRING 
. . . 

Collection of cstWebPost SXSTRING records to concatenate to give 
the post method data (Web query only, optional) 

PARAMQRY 
PARAMQRY 
. . . 

Collection of cparams PARAMQRY parameter definition records 

SXSTRING 
SXSTRING 
. . . 

Collection of cstSQLSav SXSTRING records to concatenate to give 
the original SQL string for an ODBC query with server-based page 
fields 



 
Record Data — BIFF7 and earlier 

Offset 

Name 

Size 

Contents 

4 

id 

2 

Connection ID of the SQL server 

6 

fError 

2 

=1 if an error occurred during the last attempt to 
communicate with the server 

8 

cstSQL 

2 

Number of SXSTRING records that follow 



 

SXFDBTYPE: SQL Datatype Identifier (1BBh) 

This record contains a SQL datatype identifier. 
Record Data — BIFF8 

Offset 

Name 

Size 

Contents 

4 

wTypeSql 

2 

The SQL datatype of the field described in the 
immediately preceding SXFDB record. These are the 
same values as found in the ODBC SDK. See the SQL 
datatypes in SQL.H 



 

SXFILT: PivotTable Rule Filter (F2h) 

This record stores PivotTable Rule Filter options. 
Record Data — BIFF8 

Offset 

Name 

Size 

Contents 

4 

grbit1 

2 

=0001h, fRwField, field is in row area. 
=0002h, fColumnField, field is in column area. 
=0004h, fPageField, field is in page area. 
=0008h, fDataField, field is in data area. 
=0030h, (reserved) 
=FFC0h, iDim. 

8 

grbit2 

2 

=03FFh, isxvd. 
=FC00h, (reserved) 




10 

grbitSbt 

2 

=0001h, Data 
=0002h, Default 
=0004h, SUM 
=0008h, COUNTA 
=0010h, COUNT 
=0020h, AVERAGE 
=0040h, MAX 
=0080h, MIN 
=0100h, PRODUCT 
=0200h, STDEV 
=0400h, STDEVP 
=0800h, VAR 
=1000h, VARP 
=2000h, Grand Total 
XL9: =4000h, blank line 

12 

cisxvi 

2 

Number of SXVI records. 



 

SXFMLA: PivotTable Parsed Expression (F9h) 

This record stores a PivotTable parsed expression. 
Record Data — BIFF8 

Offset 

Name 

Size 

Contents 

4 

cce 

2 

Size of rgce 

6 

csxname 

2 

Number of RTSXNAME records to follow this record 

8 

rgce 

 

Parsed expressed whose size is given by cce 



 

SXFORMAT: PivotTable Format Record (FBh) 

This record stores formatting data. 
Record Data — BIFF8 

Offset 

Name 

Size 

Contents 

4 

rlType 

2 

=0h, clear 
=1h, format applied 

6 

cbData 

2 

Length of formatting data in the SXDXF record that 
follows this record 



Note: an SXRULE and related records immediately follow the SXFORMAT record; 
these are followed by an SXDXF record. 


SXFORMULA: PivotTable Formula Record (103h) 

This record stores a PivotTable formula. 
Record Data — BIFF8 

Offset 

Name 

Size 

Contents 

4 

(Reserved) 

2 

Reserved. Should be set to zero. 

6 

ifdb 

2 

–1 if the calculated item formula applies to all fields, or, 
if positive, the field that this calculated item formula 
applies to. 



 


SXIDSTM: Stream ID (D5h) 

This record is a header record for a group of SXVS, SXEXT, and SXSTRING records 
that describe the PivotTable streams in the SX DB storage (the PivotTable cache 
storage). The idstm field identifies the stream. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

idstm 

2 

Stream ID 



 

SXITM: PivotTable Item Indexes (F5h) 

The SXITM record stores an array of PivotTable item indexes, which describes the 
item layout for one line of a row or column in the PivotTable view. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

rgisxvi 

var 

Array of PivotTable item indexes 



 
The SXITM record has variable length. The PivotTable item index structure is shown 
in the following table. 

Offset 

Name 

Size 

Contents 

0 

isxvi 

2 

PivotTable item index 



 

SXIVD: Row/Column Field IDs (B4h) 

This record stores an array of field ID numbers (2-byte integers) for the row fields 
and column fields in a PivotTable. Two SXIVD records appear in the file: the first 
contains the array of row field IDs, and the second contains the array of column field 
IDs. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

rgisxvd 

var 

Array of 2-byte integers; contains either row field IDs or 
column field IDs 



 

SXLI: Line Item Array (B5h) 

The SXLI record stores an array of variable-length SXLI structures, which describe 
the row and column items in a PivotTable. There are two SXLI records for each 
PivotTable: the first stores row items, and the second stores column items. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

rgsxli 

var 

Array of SXLI structures 



 
The SXLI structure has variable length but always is at least 10 bytes long, with one 
element in the rgisxvi array (the index to the SXVI record for the item). The 
SXLI structure is shown in the following table. 

Offset 

Name 

Size 

Contents 

0 

cSic 

2 

Count of items identical to the previous element in 
rgsxvi; for 0<=i<cSic, rgisxvi[i] is the same as 
the previous line. 




Offset 

Name 

Size 

Contents 

2 

itmtype 

2 

Item type: 
=00h, Data 
=01h, Default 
=02h, SUM 
=03h, COUNTA 
=04h, COUNT 
=05h, AVERAGE 
=06h, MAX 
=07h, MIN 
=08h, PRODUCT 
=09h, STDEV 
=0Ah, STDEVP 
=0Bh, VAR 
=0Ch, VARP 
=0Dh, Grand total 
XL9: =0Eh, blank line 

4 

isxviMac 

2 

Maximum index to the rgisxvi[i] array. 

6 

grbit 

2 

Option flags; see the following table. 

8 

rgisxvi 

2 

Array of indexes to SXVI records; the number of 
elements in the array is (isxviMac+1). 



 
The grbit field contains the following flags: 

Bits 

Mask 

Name 

Contents 

0 

0001h 

fMultiDataName 

=1, use the data field name for the 
subtotal (instead of using .Total.). 

8–1 

01F7h 

iData 

For a multidata subtotal, iData is the 
index to the data field. 

9 

0200h 

fSbt 

=1, this item is a subtotal. 

10 

0400h 

fBlock 

=1, this item is a block total. 

11 

0800h 

fGrand 

=1, this item is a grand total. 

12 

1000h 

fMultiDataOnAxis 

=1, this axis contains multi-data. 

15–13 

E000h 

(Reserved) 

Reserved; must be 0 (zero). 



 

SXNAME: PivotTable Name (F6h) 

This record stores a PivotTable name. 
Record Data — BIFF8 

Offset 

Name 

Size 

Contents 

4 

grbit 

2 

=02h, fErrName, the name is invalid and should be 
displayed and evaluated as #NAME. 

6 

ifdb 

2 

Field to aggregate in calculated field formulas. 




Offset 

Name 

Size 

Contents 

8 

ifn 

2 

Function to use for aggregation in calculated field 
formulas. 
=01h, SUM 
=02h, COUNTA 
=03h, AVERAGE 
=04h, MAX 
=05h, MIN 
=06h, PRODUCT 
=07h, COUNT 
=08h, STDEV 
=09h, STDEVP 
=0Ah, VAR 
=0Bh, VARP 

10 

csxpair 

2 

Number of SXPAIR records to follow this record. 



 

SXPAIR: PivotTable Name Pair (F8h) 

This record stores a PivotTable name pair. 
Record Data — BIFF8 

Offset 

Name 

Size 

Contents 

4 

isxvd 

2 

Field. 

6 

iCache 

2 

Index of item in field. 

8 

(Reserved) 

2 

Reserved, should be set to zero. 

10 

grbit 

2 

=01h, fCalculatedItem. 
=06h, reserved. 
=08h, fPhysical, item is referred to by position 
(physical) rather than by name (logical) 
=10h, fRelative, if fPhysical is true, then item is 
referred to using relative references rather than absolute 
references. 



 

SXPI: Page Item (B6h) 

This record contains information about the PivotTable page item. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

isxvi 

2 

Index to the SXVI record for the page item 

6 

isxvd 

2 

Index to the SXVD record for the page item 

8 

idObj 

2 

Object ID for the page item drop-down arrow 



 
These three fields are repeated for each field that is showing the PivotTable view 
page area. Note: it is possible this could make the record larger than the limit for a 
single BIFF record, so one or more CONTINUE records may be needed. 

SXPIEX: OLAP Page Item Extensions (80Eh) 

Introduced in Excel 9 (2000) this is a FRT record. It stores OLAP extensions to 
PivotTable Page Items. 


Record Data 

Offset 

Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the first 
two bytes of the record; =080Eh 

6 

grbitFrt 

2 

FRT flags; must be zero 

8 

isxth 

4 

The index of the SXTH record which gives the 
hierarchy that is in this page field orientation 

12 

stUnique 

var 

Unicode string; the unique name of the Page Item 

var 

stDisplay 

var 

Unicode string; the display name of the Page 
Item 



 

SXRULE: PivotTable Rule Data (F0h) 

This record stores PivotTable rule data. 
Record Data — BIFF8 

Offset 

Name 

Size 

Contents 

4 

iDim 

1 

Position of current field in axis. 

5 

isxvd 

1 

Current field. 

6 

grbit 

2 

see table below 

8 

(Reserved) 

2 

 

10 

csxfilt 

2 

Number of SXFILT records following this record. 

12 

irwFirst 

1 

When grbit.fPart=1, relative zero-based first/last 
row/column offsets from the first cell in the area to the 
first cell in the partial area. 

13 

irwLast 

1 

14 

icolFirst 

1 

15 

icolLast 

1 



 
The grbit field contains the PivotTable rule properties and flags as follows: 

Bits 

Mask 

Name 

Contents 

3-0 

000Fh 

sxaxis 

PivotTable area that the current field is in 
=1h, row area 
=2h, column area 
=4h, page area 
=8h, data area 

7-4 

00F0h 

sxrtype 

Rule area type 
=1h, data values or item labels area 
=3h, entire PivotTable 
=4h, PivotTable empty origin (top-left) cell(s) 
=5h, field header cell 
=6h, PivotTable empty top-right cell(s) 

8 

0100h 

fPart 

=1 if only a portion of the area is included 

9 

0200h 

fNoLabels 

=1 if the labels are not part of the area 

10 

0400h 

fNoData 

=1 if the data cells are not part of the area 




Bits 

Mask 

Name 

Contents 

11 

0800h 

fGrandRw 

=1 if the row grand total is part of the area 

12 

1000h 

fGrandCol 

=1 if the column grand total is part of the area 

13 

2000h 

fGrandRwSav 

Redundant value of fGrandRw 

14 

4000h 

fCacheBased 

=1 if the SXFILT item indexes refer to PivotTable 
cache items rather than view items 

15 

8000h 

fGrandColSav 

Redundant value of fGrandCol 



 

SXSELECT: PivotTable Selection Information (F7h) 

This record stores PivotTable selection information. 
Record Data — BIFF8 

Offset 

Name 

Size 

Contents 

4 

iwnx 

2 

0-based index of the window of the sheet 

6 

pnn 

2 

0-based index of the pane of the window 

8 

sxaxisAct 

2 

The PivotTable area the selection is on 
=0h, no PivotTable area 
=1h, row area 
=2h, column area 
=4h, page area 
=8h, data area 

10 

iDimAct 

2 

Which field (zero-based index) within the PivotTable 
area the selection operation started on 

12 

iLiStart 

2 

0-based index of the PivotTable line where the 
selection operation started 

14 

iLiAct 

2 

0-based index of the PivotTable line that was most 
recently included in the selection 

16 

iLiMin 

2 

0-based index of the first possible PivotTable line that 
could be included into the current selection 

18 

iLiMax 

2 

0-based index of the last possible PivotTable line that 
could be included into the current selection 

20 

rwClick 

2 

0-based row/column coordinates of the cell where 
the user last clicked the PivotTable selection 

22 

colClick 

2 

24 

rwClickPrev 

2 

0-based row/column coordinates of the cell where 
the user previous clicked the PivotTable selection 

26 

colClickPrev 

2 

28 

grbit 

2 

PivotTable selection properties and flags 



The grbit field contains the PivotTable selection properties and flags listed in the 
following table. 

Bits 

Mask 

Name 

Contents 

4-0 

001Fh 

cClick 

Number of clicks the user did to refine the 
current selection 




5 

0020h 

fNoData 

=1 if the data cells are not part of the area 

6 

0040h 

fNoLabels 

=1 if the labels are not part of the area 

7 

0080h 

fToggleDataHeader 

=1 if the header cell for the selected items 
can be included or excluded from the selection 

8 

0100h 

fAreaClickRefines 

=1 if a click in a selection area can refine the 
selection rather than an additional click on the 
same cell that the selection started with 

9 

0200h 

fExtendable 

=1 if the current selection can be extended to 
include other PivotTable lines 

15-10 

FC00h 

(Reserved) 

Reserved; must be zero 



 

SXSTRING: String (CDh) 

This record contains an SQL query string, an SQL server connection string, or a page 
item name from a multiple-consolidation PivotTable. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

cch 

2 

Length of the string 

6 

rgch 

var 

String 



 

SXTBL: Multiple Consolidation Source Info (D0h) 

This record stores information about multiple-consolidation PivotTable source data. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

cdref 

2 

Count (1-based) of DCONREF or DCONNAME records that 
follow the SXTBL record 

6 

csxtbpg 

2 

Count (1-based) of SXTBPG records that follow the 
DCONREF or DCONNAME records 

8 

grbitPages 

2 

(See the following table) 



 
The grbitPages field contains an encoded count of page fields, as shown in the 
following table. 

Offset 

Bits 

Mask 

Name 

Contents 

0 

14–0 

7FFFh 

cPages 

Count (1-based) of page fields 

 

15 

8000h 

fAutoPage 

=1 if the user selected the Create A Single 
Page Field For Me option in the PivotTable 
Wizard dialog box 



 

SXTBPG: Page Item Indexes (D2h) 

This record stores an array of page item indexes that represent the table references 
for a multiple-consolidation PivotTable. 


Record Data 

Offset 

Name 

Size 

Contents 

4 

rgiitem 

var 

Array of 2-byte indexes to page items (iitem) 



 

SXTBRGIITM: Page Item Name Count (D1h) 

This record stores the number of page item names in a multiple-consolidation 
PivotTable. The names are stored in SXSTRING records that follow the SXTBRGIITM. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

cItems 

2 

Number of page item names (number of SXTBRGIITM 
records that follow) 



 

SXTH: Pivot Table OLAP Hierarchy (80Dh) 

Introduced in Excel 9 (2000) this is a FRT record. It contains OLAP Pivot Table 
hierarchy information. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the 
first two bytes of the record; =080Dh 

6 

grbitFrt 

2 

FRT flags; must be zero 

8 

dwFlags 

4 

OLAP options; see following table 

12 

sxaxis 

4 

The ID of the axis element; 
1= sxaxisRw; the row header region of the 
PivotTable 
2= sxaxisCol; the column header region of 
the PivotTable 
4= sxaxisPage; the page field dropdown of 
the PivotTable 
8= sxaxisData; the body of the PivotTable 

16 

isxvd 

4 

Index into array of dimensions; these are 
loaded in the SXVD records; only applicable if 
the sxaxis is sxaxisPage or sxaxisData 

20 

csxvdXl 

4 

Count of fields fetched from the OLAP 
database 

24 

sxDragTh 

2 

Field drag flags; see following table 

26 

stUnique 

var 

Unicode string; Unique name for the hierarchy 

var 

stDisplay 

var 

Unicode string; Display name for the hierarchy 

var 

stDefaultUnique 

var 

Unicode string; Unique name of the default 
member 

var 

stAllUnique 

var 

Unicode string; Unique name of the All 
member 

var 

stDimensionUnique 

var 

Unicode string; Unique name of the dimension 




Offset 

Name 

Size 

Contents 

var 

cisxvd 

4 

Count of isxvd items in the rgb field; this 
has the same value as csxvdXl 

var 

rgisxvd 

var 

Set of isxvd items; each is a 4-byte identifier 
that points to a specific SXVD record 

var 

rgb 

var 

Set of strings describing which members have 
been hidden; see text below 



 
The dwFlags field contains the following option flags. 

Bits 

Mask 

Name 

Contents 

0 

0001h 

fMeasure 

1= This hierarchy is a measure; it can only 
be moved to the data area 

1 

0002h 

(Reserved) 

 

2 

0004h 

fOutlineMode 

XL10: 1= When new levels are added to the 
PivotTable view for this hierarchy default to 
showing them in outline layout 

3 

0008h 

fEnableMultiplePageItems 

XL10: 1= Allow the user to select two or 
more OLAP cube members in this hierarchy 
when the hierarchy is in the page area 

4 

0010h 

fSubtotalAtTop 

XL10: 1= When new levels are added to the 
PivotTable view for this hierarchy default to 
showing subtotals at the top of the item list 

5 

0020h 

fSet 

XL10: 1= This hierarchy is a custom set 

6 

0040h 

fDontShowInFldList 

XL10: 1= This hierarchy should not be 
shown in the field list control/window 

31-7 

 

(Reserved) 

 



 
The sxDragTh field contains the following option flags. 

Bits 

Mask 

Name 

Contents 

0 

0001h 

fDragToRow 

1= This field can be dragged to a row field 

1 

0002h 

fDragToColumn 

1= This field can be dragged to a column field 

2 

0004h 

fDragToPage 

1= This field can be dragged to a page field 

3 

0008h 

fDragToData 

1= This field can be dragged to a data field 

4 

0010h 

fDragToHide 

1= This field can be hidden 

15-5 

FFE0h 

(Reserved) 

Reserved; must be zero 



 
The rgb field contains a structured list of elements hidden in the PivotTable. First is 
a count of the number of sets. The sets follow. Each set contains a count of the 
number of strings in that set, followed by the strings in that set. Note: this can 
easily make the record larger than the limit for a single BIFF record, so one or more 
CONTINUEFRT records may be needed. 

SXVD: View Fields (B1h) 

This record contains PivotTable view fields and other information. 


Record Data 

Offset 

Name 

Size 

Contents 

4 

sxaxis 

2 

Axis: 
=0, no axis 
=1, row 
=2, column 
=4, page 
=8, data 

6 

cSub 

2 

Number of subtotals attached. 

8 

grbitSub 

2 

Item subtotal type (see the following table). 

10 

cItm 

2 

Number of items. 

12 

cchName 

2 

Length of the name; if the name =FFFFh, rgch is null 
and the name in the cache is used. 

14 

rgch 

var 

Name. 



 
The subtotal type (grbitSub) bits are defined as shown in the following table. 

Name 

Contents 

bitFNone 

0000h 

bitFDefault 

0001h 

bitFSum 

0002h 

bitFCounta 

0004h 

bitFAverage 

0008h 

bitFMax 

0010h 

bitFMin 

0020h 

bitFProduct 

0040h 

bitFCount 

0080h 

bitFStdev 

0100h 

bitFStdevp 

0200h 

bitFVar 

0400h 

bitFVarp 

0800h 



 

SXVDEX: Extended PivotTable View Fields (100h) 

This record contains extended PivotTable view fields information. 


Record Data — BIFF8 

Offset 

Name 

Size 

Contents 

4 

grbit1 

4 

=0001h, fShowAllItems — show all items for this 
field. 
=0002h, fDragToRow — user can drag field to row 
area. 
=0004h, fDragToColumn — user can drag field to 
column area. 
=0008h, fDragToPage — user can drag field to page 
area. 
=0010h, fDragToHide — user can remove field from 
view. 
=0060h, reserved. 
=0080h, fServerBased — this field is a server-based 
field in the page area. 
=0100h, reserved. 
=0200h, fAutoSort — autosort is enabled. 
=0400h, fAscendSort — autosort ascending. 
=0800h, fAutoShow — autoshow is enabled. 
=1000h, fAscendShow — show top values. 
=2000h, fCalculatedField — calculated field. 
XL9: =4000h, fPageBreaksBetweenItems – a page 
break is put between item changes in the Pivot Table 
view 
XL9: =8000h, fHideNewItems – new items that 
come in during a Pivot Table refresh are not shown in 
the view by default 

8 

grbit2 

1 

=1Fh, reserved. 
XL9: =20h, fOutline – layout this field in outline 
form on the Pivot Table view 
XL9: =40h, fInsertBlankRow – a blank line is put 
between item changes in the Pivot Table view 
XL9: =80h, fSubtotalAtTop –- when fOutline=1 
then display subtotals at the top of the list of items 
instead of at the bottom 

9 

citmShow 

1 

Number of items to show for AutoShow, default is 10. 

10 

isxdiSort 

2 

0-based index of data field that AutoSort is based on 
or 
–1 for current field. 

12 

isxdiShow 

2 

0-based index of data field that AutoShow is based on. 

14 

ifmt 

2 

Number format of field or 0 if none. 

16 

cchSubName 

2 

XL9: Length of unicode string in stSubName. FFh 
means no custom subtotal name was specified 

18 

(Reserved) 

4 

XL9: 

22 

(Reserved) 

4 

XL9: 

26 

stSubName 

var 

XL9: Custom subtotal name represented in unicode 



 


SXVDTEX: View Dimension OLAP Extensions (80Fh) 

Introduced in Excel 9 (2000) this is a FRT record. It stores OLAP extensions to the 
SXVD record. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the first 
two bytes of the record; =080Fh 

6 

grbitFrt 

2 

FRT flags; must be zero 

8 

wTensorFlags 

2 

OLAP options; see following table 

10 

isxth 

2 

Which OLAP hierarchy 

12 

isxtl 

4 

OLAP level 

16 

csxvi 

4 

Count of 2-byte items in rgsxvi 

20 

rgsxvi 

var 

Sets of PivotTable item flags; see following table for 
flags 



 
The wTensorFlags field contains the following option flags. 

Bits 

Mask 

Name 

Contents 

0 

0001h 

fTensorSort 

1= The results are returned in the same order as 
they are arranged on the server 

1 

0002h 

fDrilledLevel 

1= The user drilled to this level; this is always 1 
for the first level in the OLAP hierarchy 

15-2 

FFFCh 

(Reserved) 

Reserved; must be zero 



 
The rgsxvi fields contain the following option flags. 

Bits 

Mask 

Name 

Contents 

0 

0001h 

fDrilledMember 

0= This element's children are hidden 
1= This element's child nodes are expanded 

1 

0002h 

fChildrenKnown 

0= Excel does not know if this node has child 
nodes 
1= Excel knows whether this node has child 
nodes 

2 

0004h 

fHasChildren 

Must be zero if fChildrenKnown is zero 
0= This node has no child nodes 
1= This node has child nodes 

15-3 

FFF8h 

(Reserved) 

Reserved; must be zero 



 

SXVI: View Item (B2h) 

This record contains information about a PivotTable item. 


Record Data 

Offset 

Name 

Size 

Contents 

4 

itmtype 

2 

Item type: 
=FEh, Page 
=FFh, Null 
=00h, Data 
=01h, Default 
=02h, SUM 
=03h, COUNTA 
=04h, COUNT 
=05h, AVERAGE 
=06h, MAX 
=07h, MIN 
=08h, PRODUCT 
=09h, STDEV 
=0Ah, STDEVP 
=0Bh, VAR 
=0Ch, VARP 
=0Dh, Grand total 
XL9: =0Eh, blank 

6 

grbit 

2 

Option flags. 

8 

iCache 

2 

Index to the PivotTable cache. 

10 

cchName 

2 

Length of the name; if the name =FFFFh, rgch is null 
and the name in the cache is used. 

12 

rgch 

var 

Name. 



 
The grbit field contains the following option flags: 

Bits 

Mask 

Name 

Contents 

0 

0001h 

fHidden 

=1 if the item is hidden. 

1 

0002h 

fHideDetail 

=1 if detail is hidden. 

2 

0004h 

(Reserved) 

 

3 

0008h 

fFormula 

=1 if item is a calculated item. 

4 

0010h 

fMissing 

=2 if item does not exist in any records. 

15–5 

FFE0h 

(Reserved) 

 



 

SXVIEW: View Definition (B0h) 

This record contains top-level PivotTable information. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

rwFirst 

2 

First row of the PivotTable 

6 

rwLast 

2 

Last row of the PivotTable 

8 

colFirst 

2 

First column of the PivotTable 

10 

colLast 

2 

Last column of the PivotTable 

12 

rwFirstHead 

2 

First row containing PivotTable headings 




Offset 

Name 

Size 

Contents 

14 

rwFirstData 

2 

First row containing PivotTable data 

16 

colFirstData 

2 

First column containing PivotTable data 

18 

iCache 

2 

Index to the cache 

20 

(Reserved) 

2 

Reserved; must be 0 (zero) 

22 

sxaxis4Data 

2 

Default axis for a data field 

24 

ipos4Data 

2 

Default position for a data field 

26 

cDim 

2 

Number of fields 

28 

cDimRw 

2 

Number of row fields 

30 

cDimCol 

2 

Number of column fields 

32 

cDimPg 

2 

Number of page fields 

34 

cDimData 

2 

Number of data fields 

36 

cRw 

2 

Number of data rows 

38 

cCol 

2 

Number of data columns 

40 

grbit 

2 

Option flags 

42 

itblAutoFmt 

2 

Index to the PivotTable autoformat 

44 

cchName 

2 

Length of the PivotTable name 

46 

cchData 

2 

Length of the data field name 

48 

rgch 

var 

PivotTable name, followed by the name of a data 
field 



 
The grbit field contains the following option flags: 

Offset 

Bits 

Mask 

Name 

Contents 

0 

0 

0001h 

fRwGrand 

=1 if the PivotTable contains grand totals 
for rows 

 

1 

0002h 

fColGrand 

=1 if the PivotTable contains grand totals 
for columns 

 

2 

0004h 

(Reserved) 

Reserved; must be 0 (zero) 

 

3 

0008h 

fAutoFormat 

=1 if the PivotTable has an autoformat 
applied 

 

4 

0010h 

fWH 

=1 if the width/height autoformat is 
applied 

 

5 

0020h 

fFont 

=1 if the font autoformat is applied 

 

6 

0040h 

fAlign 

=1 if the alignment autoformat is applied 

 

7 

0080h 

fBorder 

=1 if the border autoformat is applied 

 

8 

0100h 

fPattern 

=1 if the pattern autoformat is applied 

 

9 

0200h 

fNumber 

=1 if the number autoformat is applied 

 

15–10 

FC00h 

(Reserved) 

Reserved; must be 0 (zero) 



 


SXVIEWEX: Pivot Table OLAP Extensions (80Ch) 

Introduced in Excel 9 (2000) this is a FRT record. It stores counts of the records for 
OLAP extensions to PivotTables. The SXTH records immediately follow the SXVIEWEX 
record, followed by the SXPIEX records and the SXVDTEX records. The count of 
each of these is specified in the SXVIEWEX record. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the first two 
bytes of the record; =080Ch 

6 

grbitFrt 

2 

FRT flags; must be zero 

8 

csxth 

4 

Count of SXTH records 

12 

csxpi 

4 

Count of SXPIEX records 

16 

csvdtex 

4 

Count of SXVDTEX records 

20 

cbFuture 

4 

Count of bytes from future versions of Excel 

24 

rgbFuture 

var 

Information from future versions of Excel 



 

SXVIEWEX9: Pivot Table Extensions (810h) 

Introduced in Excel 9 (2000) this is a FRT record. It contains extensions to Pivot 
Tables new to XL2000. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the first 
two bytes of the record; =0810h 

6 

grbitFrt 

2 

FRT flags; must be zero 

8 

(Reserved) 

4 

Reserved; must be zero 

12 

grbit 

4 

Options; see following table 

16 

itblAutoFmt 

2 

Index to the PivotTable autoformat 

18 

chGrand 

var 

Unicode string; the Grand Total name 



 
The grbit field contains following option flags. 

Offset 

Bits 

Mask 

Name 

Contents 

0 

0 

0001h 

(Reserved) 

Reserved; must be zero 

 

1 

0002h 

fPrintTitles 

1= Set Print Titles 

 

2 

0004h 

fLineMode 

1= One or more of the child 
records has the fOutline bit set 

 

4-3 

0018h 

(Reserved) 

Reserved; must be zero 

 

5 

0020h 

fRepeatItemsOnEachPrintedPage 

1= Print the item label on each 
page when the PivotTable is 
printed 

 

15-6 

FFC0h 

(Reserved) 

Reserved; must be zero 




Offset 

Bits 

Mask 

Name 

Contents 

2 

15-0 

FFFFh 

(Reserved) 

Reserved; must be zero 



 

SXVS: View Source (E3h) 

This record contains an integer that defines the data source for a PivotTable. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

vs 

2 

Data source: 
=01h, Excel list or database 
=02h, External data source (Microsoft Query) 
=04h, Multiple consolidation ranges 
=10h, A Scenario Manager summary report 



 

TABID: Sheet Tab Index Array (13Dh) 

This record contains an array of sheet tab index numbers. The record is used by the 
Shared Lists feature. 
The sheet tab indexes have type short int (2 bytes each). The index numbers are 0-
based and are assigned when a sheet is created; the sheets retain their index 
numbers throughout their lifetime in a workbook. If you rearrange the sheets in a 
workbook, the rgiTab array will change to reflect the new sheet arrangement. 
This record does not appear in BIFF5 files. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

rgiTab 

var 

Array of tab indexes 



 

TABIDCONF: Sheet Tab ID of Conflict History (EAh) 

This record contains the sheet tab index for the Conflict History worksheet. The 
record is used by the Shared Lists feature. 
This record does not appear in BIFF5 files. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

itabConf 

2 

Sheet tab index for the Conflict History worksheet. If 
=FFFFh, the user has stopped sharing the workbook. 



 

TABLE: Data Table (236h) 

A TABLE record describes a data table created with the Table command (Data 
menu). 
Record Data 

Offset 

Name 

Size 

Contents 

4 

rwFirst 

2 

First row of the table 

6 

rwLast 

2 

Last row of the table 

8 

colFirst 

1 

First column of the table 

9 

colLast 

1 

Last column of the table 




Offset 

Name 

Size 

Contents 

10 

grbit 

2 

Option flags 

12 

rwInpRw 

2 

Row of the row input cell 

14 

colInpRw 

2 

Column of the row input cell 

16 

rwInpCol 

2 

Row of the column input cell 

18 

colInpCol 

2 

Column of the column input cell 



 
The grbit field contains the option flags listed in the following table. 

Offset 

Bits 

Mask 

Name 

Contents 

0 

0 

01h 

fAlwaysCalc 

Always calculate the formula. 

 

1 

02h 

fCalcOnLoad 

Calculate the formula when the file is opened. 

 

2 

04h 

fRw 

=1 input cell is a row input cell. 
=0 input cell is a column input cell. 

 

3 

08h 

fTbl2 

=1 if two-input data table. 
=0 if one-input data table. 

 

7–4 

F0h 

(unused) 

 

1 

7–0 

FFh 

(unused) 

 



 
The area (range of cells) in which the table is entered is defined by the rwFirst, 
rwLast, colFirst, and colLast fields. This area is the interior of the table and 
does not include the outer row or column (these contain the table formulas and/or 
input values). 
In cases where the input cell is a deleted reference (the cell displays #REF!), the 
rwInp field is –1. The colInp field is not used in this case. 

TABLESTYLE: Table Style (88Fh) 

This record is used for each custom Table style in use in the document. 


Offset 

Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the 
first two bytes of the record; =088Fh 

6 

grbitFrt 

2 

FRT cell reference flag; =0 currently 

8 

(Reserved) 

8 

Currently not used, and set to 0 

16 

grbitTS 

2 

see below 

18 

ctse 

4 

Count of TABLESTYLEELEMENT records to 
follow. 

22 

cchName 

2 

Length of Table style name in 2 byte 
characters. 

24 

rgchName 

var 

Table style name in 2 byte characters 



 
The grbitTS field contains the flags listed in the following table. 

Bits 

Mask 

Name 

Contents 

0 

0001h 

fIsBuiltIn 

Should always be 0. 

1 

0002h 

fIsPivot 

=1 if Table style can be applied to PivotTables 




Bits 

Mask 

Name 

Contents 

2 

0004h 

fIsTable 

=1 if Table style can be applied to Tables 

3..15 

FFF8h 

(Reserved) 

Reserved; must be 0 (zero) 



TABLESTYLEELEMENT: Table Style Element (890h) 

This record represents each custom table style in use in the document. 


Offset 

Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the 
first two bytes of the record; =0890h 

6 

grbitFrt 

2 

FRT cell reference flag; =0 currently 

8 

(Reserved) 

8 

Currently not used, and set to 0 

16 

tseType 

4 

Type of table style element 

20 

size 

4 

Number of items in each band for row or 
column stripped elements. 

24 

dxfid 

4 

Index of DXF record with formatting for this 
table style element. 



 
Excel supports the following table style element types: 

tseType 

Value 

Comments 

tseWholeTable 

0 

Applies to whole table 

tseHeaderRow 

1 

Header row formatting 

tseTotalRow 

2 

Total row formatting 

tseFirstColumn 

3 

First column formatting 

tseLastColumn 

4 

Last column formatting 

tseRowStripe1 

5 

First row stripe formatting 

tseRowStripe2 

6 

Second row stripe formatting 

tseColumnStripe1 

7 

First column stripe formatting 

tseColumnStripe2 

8 

Second column stripe formatting 

tseFirstHeaderCell 

9 

First cell of header row formatting 

tseLastHeaderCell 

10 

Last cell of header row formatting 

tseFirstTotalCell 

11 

First cell of total row formatting 

tseLastTotalCell 

12 

Last cell of total row formatting 

tseSubtotalColumn1 

13 

Top level subtotals column formatting 

tseSubtotalColumn2 

14 

Alternating even column subtotals 
formatting 

tseSubtotalColumn3 

15 

Alternating odd column subtotals 
formatting 

tseSubtotalRow1 

16 

Top level subtotals row formatting 




tseSubtotalRow2 

17 

Alternating even subtotals row formatting 

tseSubtotalRow3 

18 

Alternating odd subtotals row formatting 

tseBlankRow 

19 

Blank row formatting 

tseColumnSubheading1 

20 

Top level column subheading formatting 

tseColumnSubheading2 

21 

Alternating even column subheading 
formatting 

tseColumnSubheading3 

22 

Alternating odd column subheading 
formatting 

tseRowSubheading1 

23 

Top level row subheading formatting 

tseRowSubheading2 

24 

Alternating even row subheading 
formatting 

tseRowSubheading3 

25 

Alternating odd row subheading 
formatting 

tsePageFieldLabels 

26 

Page field label formatting 

tsePageFieldValues 

27 

Page field values formatting 



 

TABLESTYLES: Table Styles (88Eh) 

This record supports custom Table styles that are in use in the document and persists the 
current default Table and PivotTable styles. 


Offset 

Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the 
first two bytes of the record; =088Eh 

6 

grbitFrt 

2 

FRT cell reference flag; =0 currently 

8 

(Reserved) 

8 

Currently not used, and set to 0 

16 

cts 

4 

count of TABLESTYLE records to follow 

20 

cchDefListStyle 

2 

Length of default list table style name in 2 
byte characters 

22 

cchDefPivotStyle 

2 

Length of default pivot table style name in 2 
byte characters. 

24 

rgchDefListStyle 

var 

default list table style name 

var 

rgchDefPivotStyle 

var 

default pivot table style name 



TEMPLATE: Workbook Is a Template (60h) 

This record has no record data field. If the TEMPLATE record is present in the Book 
stream, it signifies that the workbook is a template. The TEMPLATE record, if 
present, must immediately follow the BOF record. 

THEME: Theme (896h) 

The THEME record stores information about the current theme in use in the 
document. The record contains a default theme version value that if non-zero 
indicates which default theme to use. If the theme version is 0 then the document 
uses a custom theme which will be serialized to a byte stream containing the zip 


package with the theme contents (see Office Open XML specification (Ecma 
Internation Standard 376) for further details). This byte stream is be appended on to 
the THEME record and as many CONTINUEFRT12 records as needed to hold its 
contents. 


Offset 

Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the 
first two bytes of the record; =0896h 

6 

grbitFrt 

2 

FRT cell reference flag; =0 currently 

8 

(Reserved) 

8 

Currently not used, and set to 0 

16 

dwThemeVersion 

8 

default theme version; =0 if custom theme 

24 

rgb 

var 

beginning of serialized package bytes 



TOPMARGIN: Top Margin Measurement (28h) 

The TOPMARGIN record specifies the top margin in inches when a sheet is printed. 
The num field is in 8-byte IEEE floating-point format. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

num 

8 

Top margin 



 

TXO: Text Object (1B6h) 

This record stores a text object. The TXO record is followed by two CONTINUE 
records. The first CONTINUE contains the text data, and the second CONTINUE 
contains the formatting runs. If the text box contains no text, then these CONTINUE 
records are not written to the file. 
Record Data — BIFF8 

Offset 

Name 

Size 

Contents 

4 

grbit 

2 

Option flags; see following table 

6 

rot 

2 

Orientation of text within the object boundary: 
=0, no rotation (text appears left to right) 
=1, text appears top to bottom; letters are upright 
=2, text is rotated 90 degrees counterclockwise 
=3, text is rotated 90 degrees clockwise 

8 

(Reserved) 

6 

Reserved; must be 0 (zero) 

14 

cchText 

2 

Length (in characters) of text (in first CONTINUE record) 

16 

cbRuns 

2 

Length of formatting runs (in second CONTINUE record) 

14 

(Reserved) 

4 

Reserved; must be 0 (zero) 



 
The grbit field contains the following option flags. 

Bits 

Mask 

Name 

Contents 

0 

0001h 

(Reserved) 

 




3–1 

000Eh 

alcH 

Horizontal text alignment: 
1= left-aligned 
2= centered 
3= right-aligned 
4= justified 

6–4 

0070h 

alcV 

Vertical text alignment: 
1= top 
2= center 
3= bottom 
4= justify 

8–7 

0180h 

(Reserved) 

 

9 

0200h 

fLockText 

=1 if the Lock Text option is on (Format Text Box 
dialog box, Protection tab) 

15–10 

FC00h 

(Reserved) 

 



 

The first CONTINUE record contains the text (grbit/rgb fields as defined for 
unicode strings) the length (in characters) is given by cchText. 
The second CONTINUE record contains an array of formatting runs structures 
(TXORUNS). A TXORUNS structure contains formatting information about the object 
text string. A TXORUNS structure occurs every time the text formatting changes. 
The TXORUNS structure is described in the following table. 

Offset 

Name 

Size 

Contents 

0 

ichFirst 

2 

Index to the first character where formatting applies 

2 

ifnt 

2 

Index to the FONT record 

4 

(Reserved) 

4 

 



 
There are always at least two TXORUNS structures in the second CONTINUE record, 
even if the entire text string is normal font (ifnt=0). The last TXORUNS structure, 
which ends the formatting information for the string, always has 
ichFirst=cchText. 

TXTQUERY: Text Query Information (805h) 

This is a FRT record. It contains the information for a Text Query. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the first two 
bytes of the record; =0805h 

6 

grbitFrt 

2 

FRT flags; must be zero 

8 

grbit 

2 

Options; see following table 

10 

rowStartAt 

4 

Row in source file where where the query information 
starts 

14 

delimFlags 

4 

Delimiter flags; see following table 

18 

itwf 

4 

Fields in each row of data 

22 

chDecimal 

1 

ANSI character; which character is used for the 
decimal separator 




23 

chThousSep 

1 

ANSI character, which character is used for the 
thousands separator 

24 

rgtxtwf 

var 

Array of itwf TXTWF structures (see below) 

var 

rgchFile 

var 

Name of the text file that is the source for the query 



 
The grbit field contains following option flags. 

Bits 

Mask 

Name 

Contents 

0 

0001h 

(Reserved) 

Reserved; must be one 

1 

0002h 

fDelimited 

0= The data fields are of fixed size 
1= The data is delimited 

3-2 

000Ch 

iCpid 

File Origin; 
1= Macintosh 
2= Windows (ANSI) 
3= MS-DOS (PC-8) 

4 

0010h 

fPromptForFile 

0= Refresh data from saved file location 
1= Browse for a file to open when refreshing 

14-5 

7FE0h 

iCpidNew 

XL10: File's original codepage 

15 

8000h 

fUseNewiCpid 

XL10: 1= use iCpidNew (iCpid set to 2) 



 
The delimFlags field contains following option flags. 

Offset 

Bits 

Mask 

Name 

Contents 

0 

0 

01h 

fTab 

1= Treat the tab character as a field delimiter 

 

1 

02h 

fSpace 

1= Treat the space character as a field 
delimiter 

 

2 

04h 

fComma 

1= Treat the comma character as a field 
delimiter 

 

3 

08h 

fSemiColon 

1= Treat the semicolon character as a field 
delimiter 

 

4 

10h 

fCustom 

1= Use the custom delimiter character 
specified in the chCustom field 

 

5 

20h 

fConsective 

0= Consecutive delimiters are all treated as 
separate delimiters 
1= Consecutive delimiters are treated as one 
delimiter 

 

7-6 

C0h 

iTextDelm 

Text delimiter; 
0= Quotation mark 
1= Apostrophe 
2-3= No text delimiter 

2-1 

15-0 

FFFFh 

chCustom 

Custom text delimiter character 

3 

7-0 

FFh 

(Reserved) 

Reserved; must be zero 



 
The TXTWF structure is shown in the following table. 


Offset 

Name 

Size 

Contents 

0 

fieldType 

4 

Field data type: 
=00h, Automatic 
=01h, Text 
=02h, Date in the order month, day then year 
=03h, Date in the order day, month then year 
=04h, Date in the order year, month then day 
=05h, Date in the order month, year then day 
=06h, Date in the order day, year then month 
=07h, Date in the order year, day then month 
=08h, Skip importing this field 

4 

fieldStart 

4 

The character position (zero-based) this field starts at if 
delimiters are not being used to determine where fields 
start and end 



 

UDDESC: Description String for Chart Autoformat (DFh) 

This record stores the description string for a custom chart autoformat. The record 
is written only in the chart autoformat file (XL8GALRY.XLS in Microsoft Excel for 
Windows). 
Record Data 

Offset 

Name 

Size 

Contents 

4 

cch 

1 

Length of the description string 

5 

rgch 

var 

Description string 



 

UNCALCED: Recalculation Status (5Eh) 

If the UNCALCED record is present in the Book stream, it indicates the Calculate 
message was in the status bar when Excel saved the file. This occurs if the sheet 
changed, the Manual calculation option was on, and the Recalculate Before 
Save option was off (Options dialog box, Calculation tab). 
Record Data 

Offset 

Name 

Size 

Contents 

4 

(Reserved) 

2 

Reserved; must be 0 (zero) 



 

USERBVIEW: Workbook Custom View Settings (1A9h) 

The USERBVIEW record stores settings for a custom view in the workbook. 
Record Data — BIFF8 

Offset 

Name 

Size 

Contents 

4 

iViewId 

4 

ID for the custom view. 

8 

iTabid 

4 

Tab index for the active sheet (1-based). 

12 

guid 

16 

Globally unique identifier for the custom view. 

28 

x 

4 

Horizontal position of window. 

32 

y 

4 

Vertical position of window. 

36 

dx 

4 

Width of window. 

40 

dy 

4 

Height of window. 




44 

wTabRatio 

2 

Ratio of the width of the workbook tabs to the 
width of the horizontal scroll bar; to obtain the 
ratio, convert to decimal and then divide by 1000. 

46 

grbit1 

2 

Option flags. 

48 

grbit2 

2 

Option flags. 

50 

wMergeInterval 

2 

Time interval between automatic merges of 
shared workbook in minutes. 

52 

st 

var 

Name of custom view as a unicode string. 



 
The grbit1 field contains the following option flags: 

Bits 

Mask 

Name 

Contents 

0 

0001h 

fDspFmlaBar 

=1 if the formula bar is displayed 

1 

0002h 

fDspStatus 

=1 if the status bar is displayed 

3-2 

000Ch 

mdNoteDisp 

=0 if the comment indicator is off 
=1 if the comment indicator is on 
=2 if the comment indicator is on and a comment 
is displayed 

4 

0010h 

fDspHScroll 

=1 if the horizontal scroll bar is displayed 

5 

0020h 

fDspVScroll 

=1 if the vertical scroll bar is displayed 

6 

0040h 

fBotAdornment 

=1 if the workbook tabs are displayed 

7 

0080h 

fZoom 

=1 if the workbook window is maximized 

9 – 8 

0300h 

fHideObj 

=0 if the Show All option is turned on 
=1 if the Show Placeholders option is turned on 
=2 if the Hide All option is turned on 

10 

0400h 

fPrintIncl 

=1 if include print settings 

11 

0800h 

fRowColIncl 

=1 if include row/column settings 

12 

1000h 

fInvalidTabId 

=1 if sheet was deleted or hidden 

13 

2000h 

fTimedUpdate 

=1 if timed update mode 

14 

4000h 

fAllMemChanges 

=1 if Shared Workbook local session changes only 

15 

8000h 

fOnlySync 

=1 if Shared Workbook conflict mode 



 
The grbit2 field contains the following option flags: 

Bits 

Mask 

Name 

Contents 

0 

0001h 

fPersonalView 

=1 if using timed update mode flags 

1 

0002h 

fIconic 

=1 if icon maximized in view 

15–2 

FFFCh 

(Reserved) 

Reserved; must be 0 (zero) 



 

USERSVIEWBEGIN: Custom View Settings (1AAh) 

The USERSVIEWBEGIN record specifies settings for a custom view associated with 
the sheet. This record also marks the start of custom view records, which save 
custom view settings. Records between USERSVIEWBEGIN and USERSVIEWEND 
contain settings for the custom view, not settings for the sheet itself. 


Record Data — BIFF8 

Offset 

Name 

Size 

Contents 

4 

guid 

16 

Globally unique identifier for the custom view 

20 

iTabid 

4 

Tab index for the sheet (1-based) 

24 

wScale 

4 

Window zoom magnification 

28 

icv 

4 

Index to color value 

32 

pnnSel 

4 

Pane number of the active pane 

36 

grbit 

4 

Option flags 

40 

refTopLeft 

8 

Reference structure describing the visible area of the 
top-left pane (see text) 

48 

operNum 

16 

Array of 2 IEEE floating-point numbers that specify the 
vertical and horizontal positions of the pane split 

64 

colRPane 

2 

The first visible column of the right pane 
(=–1 implies no vertical split) 

66 

rwBPane 

2 

The first visible of the bottom pane 
(=–1 implies no horizontal split) 



 
The grbit field contains the following option flags: 

Bits 

Mask 

Name 

Contents 

0 

00000001h 

fShowBrks 

=1 if page breaks are displayed 

1 

00000002h 

fDspFmlaSv 

=1 if the window should display formulas 
=0 if the window should display value 

2 

00000004h 

fDspGridSv 

=1 if the window should display gridlines 

3 

00000008h 

fDspRwColSv 

=1 if the window should display row and 
column headings 

4 

00000010h 

fDspGutsSv 

=1 if outline symbols are displayed 

5 

00000020h 

fDspZerosSv 

=1 if the window should display 0 (zero) 
values 
=0 if the window should suppress display of 
0 (zero) values 

6 

00000040h 

fHorizontal 

=1 if the sheet is to be centered between 
the horizontal margins when printed 

7 

00000080h 

fVertical 

=1 if the sheet is to be centered between 
the vertical margins when printed 

8 

00000100h 

fPrintRwCol 

=1 to print row and column headings 

9 

00000200h 

fPrintGrid 

=1 to print gridlines 

10 

00000400h 

fFitToPage 

=1 if the Fit To option is on (Page Setup 
dialog box, Page tab) 

11 

00000800h 

fPrintArea 

=1 if there is at least one print area on the 
sheet 




12 

00001000h 

fOnePrintArea 

=1 if there is only one print area on the 
sheet 

13 

00002000h 

fFilterMode 

=1 if the list is filtered 

14 

00004000h 

fEzFilter 

=1 if AutoFilter is active (the drop-down 
arrows are displayed) 

16–15 

00018000h 

(Reserved) 

 

17 

00020000h 

fSplitV 

=1 if the window is split vertically 

18 

00040000h 

fSplitH 

=1 if the window is split horizontally 

20–19 

00180000h 

fHiddenRw 

2 bits true => hidden rws are defined as 
name 

21 

00200000h 

fHiddenCol 

=1 if there is at least one hidden column on 
the sheet 

23–22 

00C00000h 

(Reserved) 

 

24 

01000000h 

fSizeWithWn 

=1 if the chart is sized with window (chart 
sheet only) 

25 

02000000h 

fFilterUnique 

=1 if the view contains a filtered list 

26 

04000000h 

fSheetLayoutView 

=1 if the sheet is in page break preview 

31–27 

F8000000h 

(Reserved) 

 



 
The sheet view settings are saved using standard BIFF records that occur between 
the USERSVIEWBEGIN record and the USERSVIEWEND record. 
The guid is a unique identifier for a particular custom view for the entire workbook. 
The same guid can be found on USERSVIEWBEGIN records for other sheets and also 
in the USERBVIEW record for the workbook. 

USERSVIEWEND: End of Custom View Records (1ABh) 

The USERSVIEWEND record marks the end of the settings for a custom view 
associated with the sheet. 
Record Data — BIFF8 

Offset 

Name 

Size 

Contents 

4 

fValid 

2 

=1 if the view settings saved are valid 



 
The fValid field is 1 if all records from USERSVIEWBEGIN to USERSVIEWEND record 
are valid. Otherwise it is 0. 

USESELFS: Natural Language Formulas Flag (160h) 

This record stores a flag bit. 
Record Data — BIFF8 

Offset 

Name 

Size 

Contents 

4 

fUsesElfs 

2 

=1 if this file was written by a version of Excel that can 
use natural-language formula input 



 


VCENTER: Center Between Vertical Margins (84h) 

If the Center On Page Vertically option is on in the Page Setup dialog box, 
Margins tab, then fVCenter=1. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

fVCenter 

2 

=1 if the sheet is to be centered between the vertical 
margins when printed 



 

VERTICALPAGEBREAKS: Explicit Column Page Breaks 
(1Ah) 

The VERTICALPAGEBREAKS record contains a list of explicit column page breaks. 
Record Data — BIFF8 

Offset 

Name 

Size 

Contents 

4 

cbrk 

2 

Number of page breaks 

6 

rgbrk 

var 

Array of brk structures 



 
The cbrk field contains the number of page breaks. Each element of the rgbrk 
structure contains three 2-byte integers: the first specifies the column of the break, 
the second specifies the starting row, and the third specifies the ending row for the 
break. All row and column numbers are 1-based, and the breaks occur after the row 
or column. This array is sorted by column, and then by starting/ending row. No two 
page breaks may overlap. 
Record Data — BIFF7 and earlier 

Offset 

Name 

Size 

Contents 

4 

cbrk 

2 

Number of page breaks 

6 

rgcol 

var 

Array of columns 



 
The cbrk field contains the number of page breaks. The rgcol field is an array of 
2-byte integers that specifies columns. Excel sets a page break before each column 
contained in the list of columns in the rgcol field. The columns must be sorted in 
ascending order. 

WEBPUB: Web Publish Item (801h) 

This is a FRT record. It stores the information for a single published web page. It 
appears in the sheet stream for the sheet from which this item was published. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the first two 
bytes of the record; = 0801h 

6 

grbitFrt 

2 

FRT flags; see FRT Records for more information 

8 

ref 

var 

Range reference; see FRT Records for more information 




Offset 

Name 

Size 

Contents 

var 

tws 

1 

Type of Web Source: 
1= twsSheet; Entire Sheet was published 
2= twsPrintArea; the Print Area was published 
3= twsAutoFilter; an AutoFilter was published 
4= twsRef; a range of cells was published 
5= twsChart; a Chart was published 
6= twsPivotTable; a PivotTable was published 
7= twsQuery; a Query Table was published 
8= twsLabel; a named range was published 

var 

twd 

1 

Type of Web Page created: 
0= twdHtmlPlain; non-interactive page 
1= twdHtmlCalc; page uses Spreadsheet functionality 
2= twdHtmlList; page uses PivotTable functionality 
3= twdHtmlChart; page uses Chart functionality 

var 

grfOptions 

2 

Common options; see following table 

var 

(Reserved) 

2 

Reserved; must be zero 

var 

nStyled 

4 

Style number (usually the same as the number inside 
stDivId) 

var 

cb 

4 

Size of information that follows 

var 

stSrcName 

var 

Source data name (does not exist if tws is twsRef); 
zero length string if tws is a type that has no name (ie 
the item is the entire sheet or the AutoFilter) 

var 

stFileDest 

var 

Unicode string; name of the file that is written out; 
should never be zero length 

var 

stDivId 

var 

Unicode string identifier used for the DIV tag ID 
attribute; should never be zero length 

var 

stTitle 

var 

Unicode string; title for published data in the HTML file; 
can be zero length 

var 

idCrtShape 

var 

XL10: if tws=twsChart, this is a 4-byte chart shape id; 
otherwise this is zero length 

var 

rgb 

var 

Future information 



 
The grfOptions field contains the following option flags: 

Bits 

Mask 

Name 

Contents 

0 

0001h 

fNew 

1= this item is not yet published 

1 

0002h 

fAutoRepublish 

1= auto-republish is on 

2 

0004h 

(Reserved) 

 

3 

0008h 

fMhtml 

1= publish in MHTML 

15-4 

FFF0h 

(unused) 

 



 

WINDOW1: Window Information (3Dh) 

The WINDOW1 record contains workbook-level window attributes. The xWn and yWn 
fields contain the location of the window in units of 1/20th of a point, relative to the 


upper-left corner of the Excel window client area. The dxWn and dyWn fields contain 
the window size, also in units of 1/20th of a point. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

xWn 

2 

Horizontal position of the window. 

6 

yWn 

2 

Vertical position of the window. 

8 

dxWn 

2 

Width of the window. 

10 

dyWn 

2 

Height of the window. 

12 

grbit 

2 

Option flags. 

14 

itabCur 

2 

Index of the selected workbook tab (0-based). 

16 

itabFirst 

2 

Index of the first displayed workbook tab (0-based). 

18 

ctabSel 

2 

Number of workbook tabs that are selected. 

20 

wTabRatio 

2 

Ratio of the width of the workbook tabs to the width of 
the horizontal scroll bar; to obtain the ratio, convert to 
decimal and then divide by 1000. 



 
The grbit field contains the following option flags: 

Offset 

Bits 

Mask 

Name 

Contents 

0 

0 

01h 

fHidden 

=1 if the window is hidden 

 

1 

02h 

fIconic 

=1 if the window is currently displayed as 
an icon 

 

2 

04h 

(Reserved) 

 

 

3 

08h 

fDspHScroll 

=1 if the horizontal scroll bar is displayed 

 

4 

10h 

fDspVScroll 

=1 if the vertical scroll bar is displayed 

 

5 

20h 

fBotAdornment 

=1 if the workbook tabs are displayed 

 

6 

40h 

fNoAFDateGroup 

=1 if the AutoFilter should not group 
dates (Excel 11 (2003) behavior) 
(New for Office Excel 2007) 

 

7 

80h 

(Reserved) 

 

1 

7–0 

FFh 

(Reserved) 

 



 

WINDOW2: Sheet Window Information (23Eh) 

The WINDOW2 record contains window attributes for a sheet in a workbook. 
Record Data — BIFF8 

Offset 

Name 

Size 

Contents 

4 

grbit 

2 

Option flags 

6 

rwTop 

2 

Top row visible in the window 

8 

colLeft 

2 

Leftmost column visible in the window 

10 

icvHdr 

4 

Index to color value for row/column headings and 
gridlines 




14 

wScaleSLV 

2 

Zoom magnification in page break preview 

16 

wScaleNormal 

2 

Zoom magnification in normal view 

18 

(Reserved) 

4 

 



 
The grbit field contains the option flags shown in the following table. 

Offset 

Bits 

Mask 

Name 

Contents 

0 

0 

01h 

fDspFmla 

=1 if the window should display formulas 
=0 if the window should display value 

 

1 

02h 

fDspGrid 

=1 if the window should display gridlines 

 

2 

04h 

fDspRwCol 

=1 if the window should display row and 
column headings 

 

3 

08h 

fFrozen 

=1 if the panes in the window should be 
frozen 

 

4 

10h 

fDspZeros 

=1 if the window should display 0 (zero) 
values 
=0 if the window should suppress display 
of 0 (zero) values 

 

5 

20h 

fDefaultHdr 

=1 (see the following explanation) 
=0 use rgbHdr color 

 

6 

40h 

fRightToLeft 

=1 if text is right-to-left 

 

7 

80h 

fDspGuts 

=1 if outline symbols are displayed 

1 

0 

01h 

fFrozenNoSplit 

=1 if the panes in the window are frozen 
but there is no split 

 

1 

02h 

fSelected 

=1 if the sheet tab is selected 

 

2 

04h 

fPaged 

=1 if the sheet is currently being displayed 
in the workbook window 

 

3 

08h 

fSLV 

=1 if the sheet was saved while in page 
break preview 

 

7–4 

F0h 

(Reserved) 

 



 
fDefaultHdr is 1 if the window‘s row and column headings and gridlines should be 
drawn in the window‘s default foreground color. If this field is 0, the color index in 
the icvHdr field is used instead. 
Record Data — BIFF7 and earlier 

Offset 

Name 

Size 

Contents 

4 

grbit 

2 

Option flags 

6 

rwTop 

2 

Top row visible in the window 

8 

colLeft 

2 

Leftmost column visible in the window 

10 

rgbHdr 

4 

Row/column heading and gridline color 



 
The grbit field contains the following option flags: 

Offset 

Bits 

Mask 

Name 

Contents 

0 

0 

01h 

fDspFmla 

=1 if the window should display formulas 
=0 if the window should display value 




 

1 

02h 

fDspGrid 

=1 if the window should display gridlines 

 

2 

04h 

fDspRwCol 

=1 if the window should display row and 
column headings 

 

3 

08h 

fFrozen 

=1 if the panes in the window should be 
frozen 

 

4 

10h 

fDspZeros 

=1 if the window should display 0 (zero) 
values 
=0 if the window should suppress display of 
0 (zero) values 

 

5 

20h 

fDefaultHdr 

=1 (see the following explanation) 
=0 use rgbHdr color 

 

6 

40h 

fArabic 

=1 for the Arabic version of Excel 

 

7 

80h 

fDspGuts 

=1 if outline symbols are displayed 

1 

0 

01h 

fFrozenNoSplit 

=1 if the panes in the window are frozen but 
there is no split 

 

1 

02h 

fSelected 

=1 if the sheet tab is selected 

 

2 

04h 

fPaged 

=1 if the sheet is currently being displayed in 
the workbook window 

 

7–3 

F8h 

(Reserved) 

 



 
fDefaultHdr is 1 if the window‘s row and column headings and gridlines should be 
drawn in the window‘s default foreground color. If this field is 0, the RGB color in 
the rgbHdr field is used instead. 

WINDOWPROTECT: Windows Are Protected (19h) 

The WINDOWPROTECT record stores an option from the Protect Workbook dialog 
box. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

fLockWn 

2 

=1 if the workbook windows are protected 



 

WOPT: Web Options (80Bh) 

Introduced in Excel 9 (2000) this is a FRT record. It stores the information from the 
Web Options dialog. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt 
in the first two bytes of the record; 
=080Bh 

6 

grbitFrt 

2 

FRT flags; must be zero 

8 

grbit 

2 

Options; see following table 




10 

bScreenSize 

1 

Target monitor screen size 
0= 544x376 
1= 640x480 
2= 720x512 
3= 800x600 
4= 1024x768 
5= 1152x882 
6= 1152x900 
7= 1280x1024 
8= 1600x1200 
9= 1800x1440 
10= 1920x1200 

11 

dwPixelsPerInch 

4 

Target monitor pixels per inch 

15 

uiCodePage 

4 

Code page index value 

19 

cchLocationOfComponents 

2 

length of the string in 
rgbLocationOfComponents 

21 

rgbLocationOfComponents 

var 

Unicode string; the path to the location 
for download of the Microsoft Office 
Web Components 

var 

rgbFuture 

var 

Space reserved for bytes from future 
versions of Excel 



 
The grbit field contains following option flags. 

Bits 

Mask 

Name 

Contents 

0 

0001h 

fRelyOnCSS 

1= Do not write HTML information that 
is already written in CSS 

1 

0002h 

fOrganizeInFolder 

0= Write HTML files all to the same 
location 
1= Create a folder for the supporting 
files for files saved as HTML 

2 

0004h 

fUseLongFileNames 

1= Use Long filenames when writing 
HTML files 

3 

0008h 

fDownloadComponents 

1= Download Microsoft Office Web 
Components 

4 

0010h 

fRelyOnVML 

0= Write out image files for objects 

5 

0020h 

fAllowPNG 

1= Use PNG format for images 

15-6 

FFC0h 

(Reserved) 

Reserved; must be zero 



 

WRITEACCESS: Write Access User Name (5Ch) 

This record contains the user name, which is the name entered when installing Excel. 
Record Data — BIFF8 

Offset 

Name 

Size 

Contents 

4 

stName 

112 

User name as an unformatted unicode string. The name 
is always padded with spaces so the size of the stName 
field is exactly 112 bytes. 




 Record Data — BIFF7 and earlier 

Offset 

Name 

Size 

Contents 

4 

cch 

1 

Length of the user name 

5 

stName 

31 

User name, padded with spaces (20h) so the size of the 
stName field is exactly 31 bytes 



 

WRITEPROT: Workbook Is Write-Protected (86h) 

This record is 4 bytes long, and it has no record data field. If the WRITEPROT record 
is present in the Book stream, it signifies the worksheet has a Write Reservation 
password (File menu, Save As command, Options dialog box). For information 
about the password (wResPass), see .FILESHARING.. 

WSBOOL: Additional Workspace Information (81h) 

This record stores information about workspace settings. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

grbit 

2 

Option flags 



 
The grbit field contains the following option flags: 

Offset 

Bits 

Mask 

Name 

Contents 

0 

0 

01h 

fShowAutoBreaks 

=1 if automatic page breaks are visible 

 

3–1 

E0h 

(unused) 

 

 

4 

10h 

fDialog 

=1 if the sheet is a dialog sheet 

 

5 

20h 

fApplyStyles 

=0 if automatic styles are applied to an 
outline 

 

6 

40h 

fRwSumsBelow 

=1 if summary rows appear below detail 
in an outline 

 

7 

80h 

fColSumsRight 

=1 if summary columns appear to the 
right of detail in an outline 

1 

0 

01h 

fFitToPage 

=1 if the Fit option is on (Page Setup 
dialog box, Page tab) 

 

1 

02h 

(Reserved) 

 

 

3–2 

06h 

fDspGuts 

=1 if outline symbols are displayed 

 

5–4 

 

(Reserved) 

 

 

6 

 

fAee 

=1 if the Alternate Expression 
Evaluation option is on (Options dialog 
box, Calculation tab) 

 

7 

 

fAfe 

=1 if the Alternate Formula Entry 
option is on (Options dialog box, 
Calculation tab) 



 


XCT: CRN Record Count (59h) 

For BIFF8, an XCT record precedes a CRN record. The XCT and CRN records are 
grouped with their associated SUPBOOK record. 
For BIFF7 and earlier, the XCT record stores the number of CRN records (type 5Ah) in 
the file. The CRN records immediately follow the XCT record. 
Record Data — BIFF8 

Offset 

Name 

Size 

Contents 

4 

ccrn 

2 

Count of CRN records that follow 

6 

itab 

2 

Index (0-based) to sheet tab associated with the CRN 
record(s) 



 
Record Data — BIFF7 and earlier 

Offset 

Name 

Size 

Contents 

4 

ccrn 

2 

Count of CRN records that follow 



 

XF: Extended Format (E0h) 

The XF record stores formatting properties. There are two different XF records, one 
for cell records and another for style records. The fStyle bit is true if the XF is a 
style XF. The ixfe of a cell record (BLANK, LABEL, NUMBER, RK, and so on) points 
to a cell XF record, and the ixfe of a STYLE record points to a style XF record. 
Note: in previous BIFF versions, the record number for the XF record was 43h. 
Prior to BIFF5, all number format information was included in FORMAT records in the 
BIFF file. Beginning with BIFF5, many of the built-in number formats were moved to 
an internal table and are no longer saved with the file as FORMAT records. Use the 
ifmt to associate the built-in number formats with an XF record. However, the 
internal number formats are no longer visible in the BIFF file. 
The following table lists all the number formats that are now maintained internally. 
Note: 17h through 24h are reserved for international versions and are 
undocumented at this time. 

Index to internal 
format (ifmt) 

 
Format string 

00h 

General 

01h 

0 

02h 

0.00 

03h 

#,##0 

04h 

#,##0.00 

05h 

($#,##0_);($#,##0) 

06h 

($#,##0_);[Red]($#,##0) 

07h 

($#,##0.00_);($#,##0.00) 

08h 

($#,##0.00_);[Red]($#,##0.00) 

09h 

0% 

0ah 

0.00% 

0bh 

0.00E+00 

0ch 

# ?/? 

0dh 

# ??/?? 




Index to internal 
format (ifmt) 

 
Format string 

0eh 

m/d/yy 

0fh 

d-mmm-yy 

10h 

d-mmm 

11h 

mmm-yy 

12h 

h:mm AM/PM 

13h 

h:mm:ss AM/PM 

14h 

h:mm 

15h 

h:mm:ss 

16h 

m/d/yy h:mm 

25h 

(#,##0_);(#,##0) 

26h 

(#,##0_);[Red](#,##0) 

27h 

(#,##0.00_);(#,##0.00) 

28h 

(#,##0.00_);[Red](#,##0.00) 

29h 

_(* #,##0_);_(* (#,##0);_(* "-"_);_(@_) 

2ah 

_($* #,##0_);_($* (#,##0);_($* "-"_);_(@_) 

2bh 

_(* #,##0.00_);_(* (#,##0.00);_(* "-"??_);_(@_) 

2ch 

_($* #,##0.00_);_($* (#,##0.00);_($* "-"??_);_(@_) 

2dh 

mm:ss 

2eh 

[h]:mm:ss 

2fh 

mm:ss.0 

30h 

##0.0E+0 

31h 

@ 



 
A BIFF file can contain as many XF records as are necessary to describe the different 
cell formats and styles in a workbook. The XF records are written in a table in the 
workbook (Book) stream, and the index to the XF record table is a 0-based number 
called ixfe. 
The workbook stream must contain a minimum XF table consisting of 15 style XF 
records and one cell XF record (ixfe=0 through ixfe=15). The first XF record 
(ixfe=0) is the XF record for the Normal style. The next 14 records (ixfe=1 
through ixfe=14) are XF records that correspond to outline styles RowLevel_1, 
ColLevel_1, RowLevel_2, ColLevel_2, and so on. The last record (ixfe=15) is the 
default cell XF for the workbook. 
Following these XF records are five additional style XF records (not strictly required) 
that correspond to the Comma, Comma [0], Currency, Currency [0], and Percent 
styles. 

Cell XF Record — BIFF8 

Record Data 

Offset 

Bits 

Mask 

Name 

Contents 

4 

15–0 

FFFFh 

ifnt 

Index to the FONT record. 

6 

15–0 

FFFFh 

ifmt 

Index to the FORMAT record. 

8 

0 

0001h 

fLocked 

=1 if the cell is locked. 




Offset 

Bits 

Mask 

Name 

Contents 

1 

0002h 

fHidden 

=1 if the cell is hidden. 

2 

0004h 

fStyle 

=0 for cell XF. 
=1 for style XF. 

3 

0008h 

f123Prefix 

If the Transition Navigation Keys 
option is off (Options dialog box, 
Transition tab), f123Prefix=1 
indicates that a leading apostrophe 
(single quotation mark) is being used 
to coerce the cell‘s contents to a 
simple string. 
If the Transition Navigation Keys 
option is on, f123Prefix=1 indicates 
that the cell formula begins with one 
of the four Lotus 1-2-3 alignment 
prefix characters: 
' left 
" right 
^ centered 
\ fill 
This bit is always 0 if fStyle=1. 

15–4 

FFF0h 

ixfParent 

Index to the XF record of the parent 
style. Every cell XF must have a 
parent style XF, which is usually 
ixfeNormal=0. 
This field is always FFFh if fStyle=1. 

10 

2–0 

0007h 

alc 

Alignment: 
0= general 
1= left 
2= center 
3= right 
4= fill 
5= justify 
6= center across selection 

3 

0008h 

fWrap 

=1 wrap text in cell. 

6–4 

0070h 

alcV 

Vertical alignment: 
0= top 
1= center 
2= bottom 
3= justify 

7 

0080h 

fJustLast 

(Used only in East Asian versions of 
Excel). 

15–8 

FF00h 

trot 

Rotation, in degrees; 0–90dec is up 
0–90 deg., 91–180dec is down 1–90 
deg, and 255dec is vertical. 

12 

3–0 

000Fh 

cIndent 

Indent value (Format Cells dialog 
box, Alignment tab). 




Offset 

Bits 

Mask 

Name 

Contents 

4 

0010h 

fShrinkToFit 

=1 if Shrink To Fit option is on 
(Format Cells dialog box, Alignment 
tab). 

5 

0020h 

fMergeCell 

=1 if Merge Cells option is on 
(Format Cells dialog box, Alignment 
tab). 

7–6 

00C0h 

iReadOrder 

Reading direction (East Asian versions 
only): 
0= Context 
1= Left-to-right 
2= Right-to-left 

9–8 

0300h 

(Reserved) 

 

10 

0400h 

fAtrNum 

=1 if the ifmt is not equal to the 
ifmt of the parent style XF. 
This bit is N/A if fStyle=1. 

11 

0800h 

fAtrFnt 

=1 if the ifnt is not equal to the 
ifnt of the parent style XF. 
This bit is N/A if fStyle=1. 

12 

1000h 

fAtrAlc 

=1 if either the alc or the fWrap field 
is not equal to the corresponding field 
of the parent style XF. 
This bit is N/A if fStyle=1. 

13 

2000h 

fAtrBdr 

=1 if any border line field (dgTop, and 
so on) is not equal to the 
corresponding field of the parent style 
XF. 
This bit is N/A if fStyle=1. 

14 

4000h 

fAtrPat 

=1 if any pattern field (fls, 
icvFore, icvBack) is not equal to 
the corresponding field of the parent 
style XF. 
This bit is N/A if fStyle=1. 

15 

8000h 

fAtrProt 

=1 if either the fLocked field or the 
fHidden field is not equal to the 
corresponding field of the parent style 
XF. 
This bit is N/A if fStyle=1. 

14 

3–0 

000Fh 

dgLeft 

Border line style (see the following 
table). 

7–4 

00F0h 

dgRight 

Border line style (see the following 
table). 

11–8 

0F00h 

dgTop 

Border line style (see the following 
table). 

15–12 

F000h 

dgBottom 

Border line style (see the following 
table). 




Offset 

Bits 

Mask 

Name 

Contents 

16 

6–0 

007Fh 

icvLeft 

Index to the color palette for the left 
border color. 

13–7 

3F80h 

icvRight 

Index to the color palette for the right 
border color. 

15–14 

C000h 

grbitDiag 

1=diag down, 2=diag up, 3=both. 

18 

6–0 

0000007Fh 

icvTop 

Index to the color palette for the top 
border color. 

13–7 

00003F80h 

icvBottom 

Index to the color palette for the 
bottom border color. 

20–14 

001FC000h 

icvDiag 

for diagonal borders. 

24–21 

01E00000h 

dgDiag 

Border line style (see the following 
table). 

25 

02000000h 

fHasXFExt 

=1 when a subsequent XFEXT record 
may modify the properties of this XF. 
New for Office Excel 2007 

31–26 

FC000000h 

fls 

Fill pattern. 

22 

6–0 

007Fh 

icvFore 

Index to the color palette for the 
foreground color of the fill pattern. 

13–7 

3F80h 

icvBack 

Index to the color palette for the 
background color of the fill pattern. 

14 

4000h 

fSxButton 

=1 if the XF record is attached to a 
PivotTable button. 
This bit is always 0 if fStyle=1. 

15 

8000h 

(Reserved) 

 



 

Style XF Record — BIFF8 

The style XF record is identical in structure to the cell XF record, with the differences 
in meaning summarized as follows: 

Offset 

Bits 

Mask 

Name 

Contents 

8 

2 

0004h 

fStyle 

=1 for style XF. 

3 

0008h 

f123Prefix 

=0 for style XF. 

15–4 

FFF0h 

ixfParent 

=FFFh for style XF. 

12 

10 

0400h 

fAtrNum 

doesn't matter for style XF. 

11 

0800h 

fAtrFnt 

doesn't matter for style XF. 

12 

1000h 

fAtrAlc 

doesn't matter for style XF. 

13 

2000h 

fAtrBdr 

doesn't matter for style XF. 

14 

4000h 

fAtrPat 

doesn't matter for style XF. 

15 

8000h 

fAtrProt 

doesn't matter for style XF. 

22 

14 

4000h 

fSxButton 

=0 for style XF. 



 


Line Styles 

The border line style fields — dgTop, dgLeft, and so on — correspond to the options 
in the Format Cells dialog box, Border tab, as shown in the following table. 

dg* value 

Border line style 

0 
1 
2 
3 
4 
5 
6 
7 

None 
Thin 
Medium 
Dashed 
Dotted 
Thick 
Double 
Hair 

The following are in BIFF8 only: 

8 
9 
10 
11 
12 
13 

Medium dashed 
Dash-dot 
Medium dash-dot 
Dash-dot-dot 
Medium dash-dot-dot 
Slanted dash-dot 



 

Cell XF Record — BIFF7 and earlier 

Record Data 

Offset 

Bits 

Mask 

Name 

Contents 

4 

15–0 

FFFFh 

ifnt 

Index to the FONT record. 

6 

15–0 

FFFFh 

ifmt 

Index to the FORMAT record. 

8 

0 

0001h 

fLocked 

=1 if the cell is locked. 

1 

0002h 

fHidden 

=1 if the cell is hidden. 

2 

0004h 

fStyle 

=0 for cell XF. 
=1 for style XF. 

3 

0008h 

f123Prefix 

If the Transition Navigation Keys option is 
off (Options dialog box, Transition tab), 
f123Prefix=1 indicates that a leading 
apostrophe (single quotation mark) is being 
used to coerce the cell‘s contents to a simple 
string. 
If the Transition Navigation Keys option is 
on, f123Prefix=1 indicates that the cell 
formula begins with one of the four Lotus 1-
2-3 alignment prefix characters: 
' left 
" right 
^ centered 
\ fill 

15–4 

FFF0h 

ixfParent 

Index to the XF record of the parent style. 
Every cell XF must have a parent style XF, 
which is usually ixfeNormal=0. 




Offset 

Bits 

Mask 

Name 

Contents 

10 

2–0 

0007h 

alc 

Alignment: 
0= general 
1= left 
2= center 
3= right 
4= fill 
5= justify 
6= center across selection 

3 

0008h 

fWrap 

= 1 wrap text in cell. 

6–4 

0070h 

alcV 

Vertical alignment: 
0= top 
1= center 
2= bottom 
3= justify 

7 

0080h 

fJustLast 

(Used only in East Asian versions of Excel.) 

9–8 

0300h 

ori 

Orientation of text in cell: 
=0 no rotation. 
=1 text appears top-to-bottom; letters are 
upright. 
=2 text is rotated 90 degrees 
counterclockwise. 
=3 text is rotated 90 degrees clockwise. 

10 

0400h 

fAtrNum 

=1 if the ifmt is not equal to the ifmt of 
the parent style XF. 

11 

0800h 

fAtrFnt 

=1 if the ifnt is not equal to the ifnt of 
the parent style XF. 

12 

1000h 

fAtrAlc 

=1 if either the alc or the fWrap field is not 
equal to the corresponding field of the parent 
style XF. 

13 

2000h 

fAtrBdr 

=1 if any border line field (dgTop, and so 
on) is not equal to the corresponding field of 
the parent style XF. 

14 

4000h 

fAtrPat 

=1 if any pattern field (fls, icvFore, 
icvBack) is not equal to the corresponding 
field of the parent style XF. 

15 

8000h 

fAtrProt 

=1 if either the fLocked field or the 
fHidden field is not equal to the 
corresponding field of the parent style XF. 

12 

6–0 

007Fh 

icvFore 

Index to the color palette for the foreground 
color of the fill pattern. 

12–7 

1F80h 

icvBack 

Index to the color palette for the background 
color of the fill pattern. 

13 

2000h 

fSxButton 

=1 if the XF record is attached to a 
PivotTable button. 




Offset 

Bits 

Mask 

Name 

Contents 

15–14 

C000h 

(Reserved) 

 

14 

5–0 

003Fh 

fls 

Fill pattern. 

8–6 

01C0h 

dgBottom 

bottom Border line style (see previous table) 

15–9 

FE00h 

icvBottom 

Index to the color palette for the bottom 
border color. 

16 

2–0 

0007h 

dgTop 

top Border line style (see previous table). 

5–3 

0038h 

dgLeft 

left Border line style (see previous table). 

8–6 

01C0h 

dgRight 

right Border line style (see previous table). 

15–9 

FE00h 

icvTop 

Index to the color palette for the top border 
color. 

18 

6–0 

007Fh 

icvLeft 

Index to the color palette for the left border 
color. 

13–7 

3F80h 

icvRight 

Index to the color palette for the right border 
color. 

15–14 

C000h 

(Reserved) 

 



 

Style XF Record — BIFF7 and earlier 

The BIFF7 style XF record is identical in structure to the BIFF7 cell XF record, with 
the differences in meaning summarized as follows: 

Offset 

Bits 

Mask 

Name 

Contents 

8 

2 

0004h 

fStyle 

=1 for style XF. 

3 

0008h 

f123Prefix 

=0 for style XF. 

15–4 

FFF0h 

ixfParent 

=FFFh for style XF. 

10 

10 

0400h 

fAtrNum 

=0 if the style includes Number 
(Style dialog box). 

11 

0800h 

fAtrFnt 

=0 if the style includes Font (Style 
dialog box). 

12 

1000h 

fAtrAlc 

=0 if the style includes Alignment 
(Style dialog box). 

13 

2000h 

fAtrBdr 

=0 if the style includes Border (Style 
dialog box). 

14 

4000h 

fAtrPat 

=0 if the style includes Patterns 
(shading) (Style dialog box). 

15 

8000h 

fAtrProt 

=0 if the style includes Protection 
(cell protection) (Style dialog box). 

12 

13 

2000h 

fSxButton 

=0 for style XF. 



 


DXF records 

Related to the XF record is the DXF record used by CF, SXDXF, EZFILTER12 and 
LIST12. The DXF record is a way to partially modify or define a format. 

Offset 

Name 

Size 

Contents 

4 

(Reserved) 

2 

 

6 

grbit 

2 

Option flags 

8 

grbit2 

2 

Option flags 



 
The grbit field contains the following flags: 

Bits 

Mask 

Name 

Contents 

8-0 

01FFh 

(Reserved) 

 

9 

0200h 

fAtrNum 

1= a DXFNUM record follows 

10 

0400h 

fAtrFnt 

1= a DXFFNT record follows 

11 

0800h 

fAtrAlc 

1= a DXFALC record follows 

12 

1000h 

fAtrBdr 

1= a DXFBDR record follows 

13 

2000h 

fAtrPat 

1= a DXFPAT record follows 

14 

4000h 

fAtrProt 

1= a DXFPROT record follows 

15 

8000h 

(Reserved) 

 



 
The grbit2 field contains the following flags: 

Bits 

Mask 

Name 

Contents 

0 

0001h 

fIfmtUser 

1= DXFNUM is user-defined format 

15-1 

FFFEh 

(Reserved) 

 



 
DXFNUM (2 bytes) 

Offset 

Name 

Size 

Contents 

4 

(Reserved) 

2 

 



 
DXFFNT (2 bytes) 

Offset 

Name 

Size 

Contents 

4 

(Reserved) 

2 

 



 
DXFALC (alignment - 8 bytes) 

Size 

Bits 

Mask 

Name 

Contents 

2 

2-0 

0007h 

alc 

alignment (see XF's alc) 

15-3 

FFF8h 

(unused) 

 

2 

3–0 

000Fh 

cIndent 

indent value (see XF's cIndent) 

5–4 

0030h 

(unused) 

 

7-6 

00C0h 

iReadOrder 

reading direction (see XF's iReadOrder) 

15-8 

FF00h 

(unused) 

 

4 

 

 

iIndent 

relative indent value 



 

DXFBDR (borders - 8 bytes) 


Size 

Bits 

Mask 

Name 

Contents 

2 

3–0 

000Fh 

dgLeft 

left border line style 

7–4 

00F0h 

dgRight 

right Border line style 

11-8 

0F00h 

dgTop 

top Border line style 

15-12 

F000h 

dgBottom 

bottom Border line style 

2 

6–0 

007Fh 

icvLeft 

left border color palette index 

13-7 

3F80h 

icvRight 

right border color palette index 

15-14 

C000h 

grbitDiag 

1=diag down, 2=diag up, 3=both. 

4 

6–0 

0000007Fh 

icvTop 

top border color palette index 

13-7 

00003F80h 

icvBottom 

bottom border color palette index 

20-14 

001FC000h 

icvDiag 

diagonal line color palette index 

24-21 

01E00000h 

dgDiag 

diagonal line style 

31-25 

FE000000h 

(unused) 

 



 
DXFPAT (fill pattern – 4 bytes) 

Size 

Bits 

Mask 

Name 

Contents 

2 

9-0 

03FFh 

(unused) 

 

15-10 

FC00h 

fls 

Fill pattern. 

2 

6–0 

007Fh 

icvFore 

foreground color palette index. 

13–7 

3F80h 

icvBack 

background color palette index. 

15-14 

C000h 

(unused) 

 



 
DXFPROT (protection – 2 bytes) 

Size 

Bits 

Mask 

Name 

Contents 

2 

0 

0001h 

fLocked 

=1 if locked 

1 

0002h 

fHidden 

=1 if hidden 

15-2 

FFFCh 

(unused) 

 



 

XFCRC: XF Extensions Checksum (87Ch) 

This record is used in determining whether XFEXT (87Dh) records should be applied 
when loading a document. This record if present should come after all XF records. It 
contains the number of XF records that were written and a checksum of the data in 
those records. If the number of records and the checksum match and the document 
was last saved with version 12 or later then XFEXT records will be applied. 


Offset 

Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the 
first two bytes of the record; =087Ch 

6 

grbitFrt 

2 

FRT cell reference flag; =0 currently 

8 

(Reserved) 

8 

Currently not used, and set to 0 

16 

version 

2 

Record version; =0 currently 

18 

cxfs 

2 

Number of XF records written to disk 




20 

crc 

2 

Checksum of the written XF records. 



XFEXT: XF Extension (87Dh) 

When writing XF records to BIFF8 format from Office Excel 2007 or later, if the XF 
record uses new formatting properties then a BIFF8 compatible XF record will be 
written followed by an XFEXT record that references that XF and contains additional 
information that can be used to restore the new properties when the document is 
opened again in Office Excel 2007 or later. 


Offset 

Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the first 
two bytes of the record; =087Dh 

6 

grbitFrt 

2 

FRT cell reference flag; =0 currently 

8 

(Reserved) 

8 

Currently not used, and set to 0 

16 

version 

2 

Record version; =0 currently – Office Excel 2007 will 
ignore this record on load if not 0. 

18 

ixfe 

2 

Index of to XF record this extension modifies 

20 

(Reserved) 

2 

Currently not used, and set to 0 

22 

cexts 

2 

Number of extension properties that follow 

24 

rgb 

var 

Array of extension properties. 



 
The data for each extension property starts with a common header: 

Offset 

Name 

Size 

Contents 

0 

extType 

2 

Indicates extension property type 

2 

cb 

2 

Length of this extension in bytes including header. 



 
This header is followed by a variable amount of data specified by the extension 
property type. Unknown extension types are skipped on load. BIFF12 defines the 
following extension property types: 

Extension type 

Value 

Comments 

xfextRGBForeColor 

0 

Sets cell interior forecolor to RGB 

xfextRGBBackColor 

1 

Sets cell interior backcolor to RGB 

reserved 

2 

Reserved; not used 

reserved 

3 

Reserved; not used 

xfextForeColor 

4 

Sets cell interior forecolor 

xfextBackColor 

5 

Sets cell interior backcolor 

xfextGradientTint 

6 

Sets cell interior to a specified gradient 

xfextBorderColorTop 

7 

Sets specified cell border color 

xfextBorderColorBottom 

8 

Sets specified cell border color 

xfextBorderColorLeft 

9 

Sets specified cell border color 

xfextBorderColorRight 

10 

Sets specified cell border color 




xfextBorderColorDiag 

11 

Sets specified cell border color 

reserved 

12 

Reserved; not used 

xfextTextColor 

13 

Sets cell text color 

xfextFontScheme 

14 

Set cell font to use specified font 
scheme 

xfextIndent 

15 

Set cell indentation level ( indents > 
15) 



 
RGB color extensions (xfextRGBForeColor, xfextRGBBackColor) data format: 

Offset 

Name 

Size 

Contents 

4 

rgbColor 

4 

rgb color (alpha is ignored) 



 
Full color extensions (xfextForeColor, xfextBackColor, xfextBorderColor*, 
xfextTextColor): 

Offset 

Name 

Size 

Contents 

4 

xclrType 

2 

Color type 

6 

nTintShade 

2 

signed tint and shade value 

8 

xclrValue 

4 

Color value – value based on color type 

10 

(Reserved) 

8 

Reserved; not used 



 
xclrType – Excel supports the following color types, xclrValue varies by type as 
noted in the comments. 

Color type 

Value 

Comments 

xclrAuto 

0 

Automatic foreground/background colors 

xclrIndexed 

1 

xclrValue = BIFF8 indexed palette color 
(icv) 

xclrRGB 

2 

xclrValue = RGB color 

xclrThemed 

3 

xclrValue = Theme color index 



 
nTintShade – signed short that is used to represent how the color should be tinted 
or shaded. This value is mapped to the range (-1.0 to 1.0). Positive values make the 
color value lighter, negative values make the color value darker. A 0.0 value means 
do not tint/shade the color. 
Font scheme extension (xfextFontScheme) data format: 

Offset 

Name 

Size 

Contents 

4 

fontScheme 

1 

font scheme (1 = Major, 2 = Minor) 



 
Indentation level extension (xfextIndent) data format: 


Offset 

Name 

Size 

Contents 

4 

cIndent 

2 

indent level (0..250) { Biff8 XF max was 15 } 



 
Gradient fill extension (xfextGradientTint): 

Offset 

Name 

Size 

Contents 

4 

type 

4 

Gradient type. Two gradient types are 
currently supported – linear (0) and 
rectangular (1) 

8 

numDegree 

8 

Gradient angle. Used for linear 
gradients to determine the angle at 
which the gradient strokes will be 
drawn (vertical, horizontal, or diagonal) 

16 

numFillToLeft 

8 

Left coordinate. Used for rectangular 
gradients to determine the coordinates 
of the rectangle where the gradient 
should converge 

24 

numFillToRight 

8 

Right coordinate. Used for rectangular 
gradients to determine the coordinates 
of the rectangle where the gradient 
should converge 

32 

numFillToTop 

8 

Top coordinate. Used for rectangular 
gradients to determine the coordinates 
of the rectangle where the gradient 
should converge 

40 

numFillToBottom 

8 

Bottom coordinate. Used for 
rectangular gradients to determine the 
coordinates of the rectangle where the 
gradient should converge 

48 

cGradStops 

4 

The number of gradient stop definitions 
to follow. A valid gradient must have at 
least one gradient stop and no more 
than 256 

52 

rgGradStops 

var 

Array of gradient stops 



 
Each rgGradStops entry has the following data format: 

Offset 

Name 

Size 

Contents 

0 

xclrType 

2 

Color type. See previous definition 
for Excel color types/values 

2 

xclrValue 

4 

Color value. See previous definition 
for Excel color types/values 

6 

numPosition 

8 

Position within the gradient range 
where this gradient stop‘s color 
should begin 




14 

numTint 

8 

Tint and shade value. Same as 
nTintShade but expressed as 
double. This value is used to 
represent how the color should be 
tinted or shaded. This value is ranges 
from (-1.0 to 1.0). Positive values 
make the color value lighter, 
negative values make the color value 
darker. A 0.0 value means do not 
tint/shade the color. 



XL5MODIFY: Flag for DSF (162h) 

This is a new record in BIFF8. In a double stream file, the XL5MODIFY record 
appears in the BIFF5/BIFF7 stream (the stream named Book). This record is used 
internally and contains no record data field. 

Finding Cell Records in BIFF Files 

Excel uses the INDEX and DBCELL records to optimize the lookup of cell records (RK, 
FORMULA, and so on). You can use these records to optimize your code when 
reading a BIFF file, or you can just read the entire workbook (Book) stream to find 
the cell values you want. The unoptimized method may be slower, depending on the 
size, structure, and complexity of the file. 
If your code writes a BIFF file, you must include the INDEX and DBCELL records with 
correct values in the record fields. If this is not done, Excel cannot optimize lookup, 
and the program‘s performance will suffer; especially when the user tries to copy 
data out of the file that your application has written. 
Excel stores cell records in blocks with no more than 32 rows. Each row that 
contains cell records has a corresponding ROW record in the block, and each block 
contains a DBCELL record at the end of the block. 
The following illustration shows how to use the INDEX record to locate the DBCELL 
records at the end of the record blocks. Note: the stream position at the start of the 
first BOF record in the workbook stream is 6F1h. To find the start of each DBCELL 
record, add this number to each member of the rgibRw array in the INDEX record. 


 After your code has computed the location of the DBCELL records, use the dbRtrw 
field to find the location of the start of the first ROW record for each block. This field 
is stored as a positive long integer, although the offset is really a .negative. offset to 
an earlier position in the file. See the following illustration for details. 


 Finally, your code can compute the start of each cell record in the block by using the 
members in the rgdb array in the DBCELL record. The offsets in this array use the 
start of the second ROW record in the block as the initial offset. This is because the 
code has to read the first ROW record to know what the row number is (and then to 
make a decision based on the row number), and the stream pointer is at the start of 
the second ROW record after this. See the following illustration for details. 


 

Microsoft Excel Formulas 

This section describes how Excel stores formulas. Formulas most commonly appear 
in rgce fields in FORMULA, ARRAY, and NAME records. In this section, formula is a 
synonym for parsed expression, which is the internal tokenized representation of an 
Excel formula. 
There are no changes to the tokenized representation of an Excel formula from BIFF5 
to BIFF7; therefore this information applies to both versions. 

Parsed Expressions and Tokens 

Excel uses a modified reverse-Polish notation technique to store parsed expressions. 
A parsed expression contains a sequence of parse tokens, each of which is either an 
operand, an operator token, or a control token. Operand tokens push operands onto 
the stack. Operator tokens perform arithmetic operations on operands. Control 
tokens assist in formula evaluation by describing properties of the formula. 
A token consists of two parts: a token type and a token value. A token type is called 
a ptg (parse thing) in Excel. A ptg is 1 byte long and has a value from 01h to 7Fh. 
The ptgs above 7Fh are reserved. 

The ptg specifies only what kind of information a token contains. The information 
itself is stored in the token value, which immediately follows the ptg. Some tokens 
consist of only a ptg, without an accompanying token value. For example, to specify 


an addition operation, only the token type ptgAdd is required. But to specify an 
integer operand, specify both the ptgInt and the token value, which is an integer. 
For example, assume the formula =5+6 is in cell A1. The parsed expression for this 
formula consists of three tokens: two integer operand tokens (<token 1> and 
<token 2>) and an operator token (<token 3>), as shown in the following table. 

<token 1> 

<token 2> 

<token 3> 

ptgInt 0005h 

ptgInt 0006h 

ptgAdd 



 
Note: each ptgInt is immediately followed by the integer token value. 
If this formula is entered in cell A1 and then examined in the FORMULA record (using 
the BiffView utility), the following is seen: 
00000 06 00 1d 00 00 00 00 00 0f 00 00 00 00 00 00 00 
00010 26 40 00 00 00 00 e0 fc 07 00 1e 05 00 1e 06 00 
00020 03 -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 


The first 26 bytes of the hex dump contain the record number, record length, rw, 
col, ixfe, num, grbit, chn, and cce fields. The remaining 7 bytes contain the two 
ptgInt (1Eh) tokens — which contain the token values that represent the integers 5 
and 6 (0005h and 0006h) — and the ptgAdd (03h) token. If the formula were 
changed to =5*6, the third token would be ptgMul (05h). For more information 
about the FORMULA record, see .FORMULA.. 
In many cases, the token value consists of a structure of two or more fields. In 
these cases, offset-0 (zero) is assumed to be the first byte of the token value — that 
is, the first byte immediately following the token type. 

Microsoft Excel ptgs 

The following table contains all ptgs that appear in BIFF files. All other ptgs are 
reserved. 
The ptgSheet and ptgEndSheet tokens are no longer used. The external sheet 
references are contained in the ptgNameX, ptgRef3d, and ptgArea3d tokens. 

Name 

Ptg 

Type 

ptgExp 

01h 

control 

ptgTbl 

02h 

control 

ptgAdd 

03h 

operator 

ptgSub 

04h 

operator 

ptgMul 

05h 

operator 

ptgDiv 

06h 

operator 

ptgPower 

07h 

operator 

ptgConcat 

08h 

operator 

ptgLT 

09h 

operator 

ptgLE 

0Ah 

operator 

ptgEQ 

0Bh 

operator 

ptgGE 

0Ch 

operator 

ptgGT 

0Dh 

operator 

ptgNE 

0Eh 

operator 




Name 

Ptg 

Type 

ptgIsect 

0Fh 

operator 

ptgUnion 

10h 

operator 

ptgRange 

11h 

operator 

ptgUplus 

12h 

operator 

ptgUminus 

13h 

operator 

ptgPercent 

14h 

operator 

ptgParen 

15h 

control 

ptgMissArg 

16h 

operand 

ptgStr 

17h 

operand 

ptgAttr 

19h 

control 

ptgSheet 

1Ah 

(ptg DELETED) 

ptgEndSheet 

1Bh 

(ptg DELETED) 

ptgErr 

1Ch 

operand 

ptgBool 

1Dh 

operand 

ptgInt 

1Eh 

operand 

ptgNum 

1Fh 

operand 

ptgArray 

20h 

operand, reference class 

ptgFunc 

21h 

operator 

ptgFuncVar 

22h 

operator 

ptgName 

23h 

operand, reference class 

ptgRef 

24h 

operand, reference class 

ptgArea 

25h 

operand, reference class 

ptgMemArea 

26h 

operand, reference class 

ptgMemErr 

27h 

operand, reference class 

ptgMemNoMem 

28h 

control 

ptgMemFunc 

29h 

control 

ptgRefErr 

2Ah 

operand, reference class 

ptgAreaErr 

2Bh 

operand, reference class 

ptgRefN 

2Ch 

operand, reference class 

ptgAreaN 

2Dh 

operand, reference class 

ptgMemAreaN 

2Eh 

control 

ptgMemNoMemN 

2Fh 

control 

ptgNameX 

39h 

operand, reference class 

ptgRef3d 

3Ah 

operand, reference class 

ptgArea3d 

3Bh 

operand, reference class 

ptgRefErr3d 

3Ch 

operand, reference class 

ptgAreaErr3d 

3Dh 

operand, reference class 

ptgArrayV 

40h 

operand, value class 

ptgFuncV 

41h 

operator 

ptgFuncVarV 

42h 

operator 

ptgNameV 

43h 

operand, value class 

ptgRefV 

44h 

operand, value class 




Name 

Ptg 

Type 

ptgAreaV 

45h 

operand, value class 

ptgMemAreaV 

46h 

operand, value class 

ptgMemErrV 

47h 

operand, value class 

ptgMemNoMemV 

48h 

control 

ptgMemFuncV 

49h 

control 

ptgRefErrV 

4Ah 

operand, value class 

ptgAreaErrV 

4Bh 

operand, value class 

ptgRefNV 

4Ch 

operand, value class 

ptgAreaNV 

4Dh 

operand, value class 

ptgMemAreaNV 

4Eh 

control 

ptgMemNoMemNV 

4Fh 

control 

ptgFuncCEV 

58h 

operator 

ptgNameXV 

59h 

operand, value class 

ptgRef3dV 

5Ah 

operand, value class 

ptgArea3dV 

5Bh 

operand, value class 

ptgRefErr3dV 

5Ch 

operand, value class 

ptgAreaErr3dV 

5Dh 

operand, value class 

ptgArrayA 

60h 

operand, array class 

ptgFuncA 

61h 

operator 

ptgFuncVarA 

62h 

operator 

ptgNameA 

63h 

operand, array class 

ptgRefA 

64h 

operand, array class 

ptgAreaA 

65h 

operand, array class 

ptgMemAreaA 

66h 

operand, array class 

ptgMemErrA 

67h 

operand, array class 

ptgMemNoMemA 

68h 

control 

ptgMemFuncA 

69h 

control 

ptgRefErrA 

6Ah 

operand, array class 

ptgAreaErrA 

6Bh 

operand, array class 

ptgRefNA 

6Ch 

operand, array class 

ptgAreaNA 

6Dh 

operand, array class 

ptgMemAreaNA 

6Eh 

control 

ptgMemNoMemNA 

6Fh 

control 

ptgFuncCEA 

78h 

operator 

ptgNameXA 

79h 

operand, array class (NEW ptg) 

ptgRef3dA 

7Ah 

operand, array class (NEW ptg) 

ptgArea3dA 

7Bh 

operand, array class (NEW ptg) 

ptgRefErr3dA 

7Ch 

operand, array class (NEW ptg) 

ptgAreaErr3dA 

7Dh 

operand, array class (NEW ptg) 



 


Extended ptgs in BIFF8 

In BIFF8, expended ptgs are used to store natural-language formulas. These ptgs 
contain a ptgExtend (ptg=18h), followed by a 1-byte extended ptg type, called an 
eptg, and then followed by extended data if applicable. Extended ptgs are listed in 
the following table. 

 
eptg 

 
eptg Type 

 
Size 

Extended 
info? 

 
Operand Type 

0h 

(Reserved) 

 

 

 

1h 

eptgElfLel 

4 

No 

Error 

2h 

eptgElfRw 

4 

No 

Reference 

3h 

eptgElfCol 

4 

No 

Reference 

4h–5h 

(Reserved) 

 

 

 

6h 

eptgElfRwV 

4 

No 

Value 

7h 

eptgElfColV 

4 

No 

Value 

8h–9h 

(Reserved) 

 

 

 

Ah 

eptgElfRadical 

13 

No 

Reference 

Bh 

eptgElfRadicalS 

13 

Yes 

Reference 

Ch 

eptgElfRwS 

4 

Yes 

Reference 

Dh 

eptgElfColS 

4 

Yes 

Reference 

Eh 

eptgElfRwSV 

4 

Yes 

Value 

Fh 

eptgElfColSV 

4 

Yes 

Value 

10h 

eptgElfRadicalLel 

4 

No 

Error 

11h–18h 

(Reserved) 

 

 

 

19h–1Ah 

Invalid values 

 

 

 

1Bh 

(Reserved) 

 

 

 

1Ch 

(Reserved) 

 

 

 

1Dh 

eptgSxName 

4 

No 

Value 

1Eh 

(Reserved) 

 

 

 



 
The data contained in eptgs is not documented. 
For eptgs that have extended info, the extra information is appended to the saved 
parsed expression, immediately following the last token. The format of the extra 
information is: 
First 4 bytes: the lowest 30 bits of these bytes is the count (cLoc) of 4-byte 
structures following these 4 bytes. 
The next 4*cLoc bytes are reserved. 
As with array constants, if a formula contains more than one eptg with extended 
information, the token values for the eptgs are appended to the saved parsed 
expression in order: first the values for the first eptg, then the values for the second 
eptg, and so on. 
Likewise, an expression containing both eptgs and array constants appends the 
eptg and array constant data in the order that they occur in the parsed expression. 


Expression Evaluation 

Calculation of Excel formulas is a straightforward process. A last-in, first-out (LIFO) 
stack, the operand stack, is maintained during calculation. When an operand is 
encountered, it is pushed onto the stack. When an operator is encountered, it 
operates on the topmost operand or operands. Operator precedence is irrelevant at 
evaluation time; operators are handled as soon as they are encountered. 
There are three kinds of operators: unary, binary, and function. Unary operators, 
such as the minus sign that negates a number, operate only on the top operand. 
Binary operators, such as the addition operator, operate on the top two operands. 
Function operators, which implement Excel functions, operate on a variable number 
of operands, depending on how many arguments the function accepts. 
All operators work by popping the required operands from the stack, performing 
calculations, and then pushing the result back onto the operand stack. 

Scanning a Parsed Expression 

One fairly common operation you can perform on parsed expressions is to scan 
them, taking appropriate actions at each ptg. You can do this with a loop by using a 
pointer variable that points to the next ptg to scan. However, you must increment 
this pointer carefully, because different ptgs may have token values of different 
lengths. 

One approach is to maintain an array with one element per ptg. Each element 
contains the size of the token value. To increment the pointer, add the array 
element corresponding to the current ptg to the pointer. One way of reducing the 
array size is to limit the array indexes to the range 0–3Fh and then index it using the 
reference-class ptg (the base ptg) instead of the value-class or array-class ptg. 
This is possible because the token value is the same for all classes of a particular 
ptg. For more information about operand classes, see .ptg Values for Operand 
Tokens.. 
There are two tokens, ptgStr and ptgAttr (when bitFAttrChoose is true), that 
have variable length and are therefore exceptions to the preceding description. The 
first token, ptgStr, is followed by a variable-length string. The token value 
specifies the length of the string, so the pointer can be incremented by reading the 
string length (cch) and then adding the string length to the pointer. 
The other token is ptgAttr when bitFAttrChoose is true. In this case, the token 
value contains an optimized CHOOSE function, which contains a variable-length 
sequence of word offsets in the cases (value1, value2, … arguments) for the CHOOSE 
function. For these, use the wCases field to calculate the pointer increment. 

Unary Operator Tokens 

The unary operator tokens for Excel are described in the following paragraphs. 
These operators pop the top argument from the operand stack, perform a 
calculation, and then push the result back onto the operand stack. 

ptgUplus: Unary Plus (ptg=12h) 

Has no effect on the operand. 

ptgUminus: Unary Minus (ptg=13h) 

Negates the operand on the top of the stack. 


ptgPercent: Percent Sign (ptg=14h) 

Divides the top operand by 100. 

Binary Operator Tokens 

There are several binary operator ptgs. All binary operator ptgs pop the top two 
arguments from the operand stack, perform the associated calculation, and then 
push the result back onto the operand stack. 

ptgAdd: Addition (ptg=03h) 

Adds the top two operands. 

ptgSub: Subtraction (ptg=04h) 

Subtracts the top operand from the second-to-top operand. 

ptgMul: Multiplication (ptg=05h) 

Multiplies the top two operands. 

ptgDiv: Division (ptg=06h) 

Divides the top operand by the second-to-top operand. 

ptgPower: Exponentiation (ptg=07h) 

Raises the second-to-top operand to the power of the top operand. 

ptgConcat: Concatenation (ptg=08h) 

Appends the top operand to the second-to-top operand. 

ptgLT: Less Than (ptg=09h) 

Evaluates to TRUE if the second-to-top operand is less than the top operand; 
evaluates to FALSE otherwise. 

ptgLE: Less Than or Equal (ptg=0Ah) 

Evaluates to TRUE if the second-to-top operand is less than or equal to the top 
operand; evaluates to FALSE otherwise. 

ptgEQ: Equal (ptg=0Bh) 

Evaluates to TRUE if the top two operands are equal; evaluates to FALSE otherwise. 

ptgGE: Greater Than or Equal (ptg=0Ch) 

Evaluates to TRUE if the second-to-top operand is greater than or equal to the top 
operand; evaluates to FALSE otherwise. 

ptgGT: Greater Than (ptg=0Dh) 

Evaluates to TRUE if the second-to-top operand is greater than the top operand; 
evaluates to FALSE otherwise. 

ptgNE: Not Equal (ptg=0Eh) 

Evaluates to TRUE if the top two operands are not equal; evaluates to FALSE 
otherwise. 

ptgIsect: Intersection (ptg=0Fh) 

Computes the intersection of the top two operands. This is the Excel space operator. 


ptgUnion: Union (ptg=10h) 

Computes the union of the top two operands. This is the Excel comma operator. 

ptgRange: Range (ptg=11h) 

Computes the minimal bounding rectangle of the top two operands. This is the Excel 
colon operator. 

Operand Tokens: Constant 

These operand tokens push a single constant operand onto the operand stack. 

ptgMissArg: Missing Argument (Operand, ptg=16h) 

Indicates a missing argument to an Excel function. For example, the second 
(missing) argument to the function DCOUNT(Database,,Criteria) would be 
stored as a ptgMissArg. 

ptgStr: String Constant (Operand, ptg=17h) 

Indicates a string constant ptg followed by a string length field (00 to FFh) and the 
actual string. 

Offset 

Name 

Size 

Contents 

0 

cch 

1 

The length of the string 

1 

rgch 

var 

The string 



 

ptgStr requires special handling when parsed expressions are scanned. For more 
information, see .Scanning a Parsed Expression.. 

In BIFF8, the rgch contains a unicode string. For more information, see .Unicode 
Strings in BIFF8.. 

ptgErr: Error Value (Operand, ptg=1Ch) 

This ptg is followed by the 1-byte error value (err). For a list of error values, see 
.BOOLERR.. 

Offset 

Name 

Size 

Contents 

0 

err 

1 

An error value 



 

ptgBool: Boolean (Operand, ptg=1Dh) 

This ptg is followed by a byte that represents TRUE or FALSE. 

Offset 

Name 

Size 

Contents 

0 

f 

1 

=1 for TRUE 
=0 for FALSE 



 

ptgInt: Integer (Operand, ptg=1Eh) 

This ptg is followed by a word that contains an unsigned integer. 

Offset 

Name 

Size 

Contents 

0 

w 

2 

An unsigned integer value 



 


ptgNum: Number (Operand, ptg=1Fh) 

This ptg is followed by an 8-byte IEEE floating-point number. 

Offset 

Name 

Size 

Contents 

0 

num 

8 

An IEEE floating-point number 



 

Operand Tokens 

Operand tokens push operand values onto the operand stack. These values fall into 
one of three classes — reference class, value class, or array class — depending on 
what type of value the formula expects from the operand. The type of value is 
determined by the context of the operand when the formula is parsed by Excel. 

Reference Class 

Some operands are required by context to evaluate to references. In this case, the 
term reference is a general term meaning one or more areas on an Excel worksheet. 
When the Excel expression evaluator encounters a reference class operand, it pushes 
only the reference itself onto the operand stack; it does not de-reference it to return 
the underlying value or values. For example, because we have a ptgRef, a 
reference (to the cell B5) is pushed onto the stack. This function returns the column 
width of cell B5; therefore, only the reference to B5 is required, and there‘s no need 
to de-reference to the value stored in cell B5. 

Value Class 

This is the most common type of operand. Value class operands push a single de-
referenced value onto the operand stack. Using the formula =A1+1 as an example, 
because we have a ptgRefV, the value (of cell A1, for example: 5) is pushed onto 
the stack. 

Array Class 

This operand pushes an array of values onto the operand stack. You can specify the 
values in an array constant or in a reference to cells. Using the formula 
=SUM({1,2,3;4,5,6}) as an example, because we have a ptgArrayA, the whole 
array ({1,2,3;4,5,6}) is pushed onto the stack. 

ptg Values for Operand Tokens 

The three classes of operand tokens are divided numerically, as shown in the 
following table. 

Operand class 

Ptg values 

Reference 

20h–3Fh 

Value 

40h–5Fh 

Array 

60h–7Fh 



 
The arithmetic difference between ptg classes is 20h. This is the basis for forming 
the class variants of ptgs. Class variants of ptgs are formed from the reference 
class ptg, also known as the base ptg. To form the value class ptg from the base 
ptg, add 20h to the ptg and append V (for .value.) to the ptg name. To form the 
array class ptg from the base ptg, add 40h to the ptg and append A (for .array.) to 
the ptg name. These rules are summarized in the following table for a sample base 
ptg, ptgRef. 


Class 

Name 

Ptg 

Reference 

ptgRef 

24h 

Value 

ptgRefV 

44h 

Array 

ptgRefA 

64h 



 
The following example is a suggested method for calculating the base ptg from any 
class variant. 
if (ptg & 40h) 
{ 
/* Value class ptg. Set the 20h bit to 
make it Reference class, then strip 
off the high-order bits. */ 
ptgBase = (ptg | 20h) & 3Fh; 
} 
else 
{ 
/* Reference or Array class ptg. The 20h bit 
is already set, so just have to strip off 
the high-order bits. */ 
ptgBase = ptg & 3Fh; 
} 
A more efficient implementation would define a macro that computes the base ptg, 
as in the following example. 
#define PtgBase(ptg) (((ptg & 0x40) ? (ptg | 0x20): ptg) & 0x3F) 


Operand Tokens: Base 

This section describes the operand tokens in their base form (also known as 
reference class operand tokens). 

ptgArray: Array Constant (Operand, ptg=20h) 

Array constant followed by 7 reserved bytes. 
The token value for ptgArray consists of the array dimensions and the array values. 
ptgArray differs from most other operand tokens in that the token value doesn‘t 
follow the token type. Instead, the token value is appended to the saved parsed 
expression, immediately following the last token. The format of the token value is 
shown in the following table. 

Offset 

Name 

Size 

Contents 

0 

ccol 

1 

The number of columns in the array constant 

1 

crw 

2 

The number of rows in the array constant 

3 

rgval 

var 

The array values 



 
An array with 256 columns is stored with a ccol=0, because a single byte cannot 
store the integer 256. This is unambiguous, because a 0-column array constant is 
meaningless. 

The number of values in the array constant is equal to the product of the array 
dimensions, crw*ccol. Each value is either an 8-byte IEEE floating-point number or 
a string. The two formats for these values are shown in the following tables. 


IEEE Floating-Point Number 

Offset 

Name 

Size 

Contents 

0 

grbit 

1 

=01h 

1 

num 

8 

IEEE floating-point number 



 
String 

Offset 

Name 

Size 

Contents 

0 

grbit 

1 

=02h 

1 

cch 

1 

The length of the string 

2 

rgch 

var 

The string 



 
If a formula contains more than one array constant, the token values for the array 
constants are appended to the saved parsed expression in order: first the values for 
the first array constant, then the values for the second array constant, and so on. 
If a formula contains very long array constants, the FORMULA, ARRAY, or NAME 
record containing the parsed expression may overflow into CONTINUE records (to 
accommodate all of the array values). In such cases, an individual array value is 
never split between records, but record boundaries are established between adjacent 
array values. 
The reference class ptgArray never appears in an Excel formula; only the 
ptgArrayV and ptgArrayA classes are used. 

ptgName: Name (Operand, ptg=23h) — BIFF8 

This ptg stores the index to a name. The ilbl field is a 1-based index to the table 
of NAME records in the workbook. 

Offset 

Name 

Size 

Contents 

0 

ilbl 

2 

Index to the NAME table 

2 

(Reserved) 

2 

Reserved; must be 0 (zero) 



 

ptgName: Name (Operand, ptg=23h) — BIFF7 and earlier 

This ptg stores the index to a name. The ilbl field is a 1-based index to the table 
of NAME records in the workbook. 

Offset 

Name 

Size 

Contents 

0 

ilbl 

2 

Index to the NAME table 

2 

(Reserved) 

12 

Reserved; must be 0 (zero) 



 

ptgRef: Cell Reference (Operand, ptg=24h) — BIFF8 

This ptg specifies a reference to a single cell. It is followed by references for the 
row and column that contain the cell. The column number is encoded. 

Offset 

Name 

Size 

Contents 

0 

rw 

2 

The column of the reference 

2 

grbitCol 

2 

(See the following table) 



 
Only the low-order 14 bits of the grbitCol field store the column number of the 
reference. The 2 MSBs specify whether the row and column references are relative 
or absolute. The following table shows the bit structure of the grbitCol field. 


Bits 

Mask 

Name 

Contents 

15 

8000h 

fRwRel 

=1 if the row offset is relative 
=0 otherwise 

14 

4000h 

fColRel 

=1 if the column offset is relative 
=0 otherwise 

13–0 

3FFFh 

col 

The column number or column offset (0-based) 



 
For example, cell C5 is row number 4, column number 2 (Excel stores 0-based cell 
references). Therefore, the absolute reference $C$5 is stored in a ptgRef, as 
shown in the following file fragment. 
24 04 00 02 00 
In this case, rw=0004h and grbitCol=0002h. Note: bits 14 and 15 of grbitCol 
are both 0 (zero). 
The relative reference C5 is stored in a ptgRef, as shown in the following file 
fragment. 
24 04 00 02 C0 
In this case, where grbitCol=C004h and col=02h, bits 14 and 15 of grbitCol 
are both 1. 
Mixed references are stored in the same way, with appropriate coding in grbitCol. 

ptgRef: Cell Reference (Operand, ptg=24h) — BIFF7 and earlier 

This ptg specifies a reference to a single cell. It is followed by references for the 
row and column that contain the cell. The row number is encoded. 

Offset 

Name 

Size 

Contents 

0 

grbitRw 

2 

(See the following table) 

2 

col 

1 

The column of the reference 



 
Only the low-order 14 bits of the grbitRw field store the row number of the 
reference. The 2 MSBs specify whether the row and column references are relative 
or absolute. The following table shows the bit structure of the grbitRw field. 

Bits 

Mask 

Name 

Contents 

15 

8000h 

fRwRel 

=1 if the row offset is relative 
=0 otherwise 

14 

4000h 

fColRel 

=1 if the column offset is relative 
=0 otherwise 

13–0 

3FFFh 

rw 

The row number or row offset (0-based) 



 
For example, cell C5 is row number 4, column number 2 (Excel stores 0-based cell 
references). Therefore, the absolute reference $C$5 is stored in a ptgRef, as 
shown in the following file fragment. 
24 04 00 02 



In this case, grbitRw=0004h and col=02h. Note: bits 14 and 15 of grbitRw are 
both 0 (zero). 
The relative reference C5 is stored in a ptgRef, as shown in the following file 
fragment. 
24 04 C0 02 
In this case, where grbitRw=C004h and col=02h, bits 14 and 15 of grbitRw are 
both 1. 
Mixed references are stored in the same way, with appropriate coding in grbitRw. 

ptgArea: Area Reference (Operand, ptg=25h) — BIFF8 

This ptg specifies a reference to a rectangle (range) of cells. ptgArea is followed 
by 8 bytes that define the first row, last row, first column, and last column of the 
rectangle. The numbers of the first and last columns are encoded. 

Offset 

Name 

Size 

Contents 

0 

rwFirst 

2 

The first row of the reference 

2 

rwLast 

2 

The last row of the reference 

4 

grbitColFirst 

2 

(See the following table) 

6 

grbitColLast 

2 

(See the following table) 



 
Only the low-order 14 bits of the grbitColFirst and grbitColLast fields store 
the column offsets of the reference. The 2 MSBs of each field specify whether the 
row and column offset are relative or absolute. The following table shows the bit 
structure of the grbitColFirst and grbitColLast fields. 

Bits 

Mask 

Name 

Contents 

15 

8000h 

fRwRel 

=1 if the row offset is relative 
=0 otherwise 

14 

4000h 

fColRel 

=1 if the column offset is relative 
=0 otherwise 

13–0 

3FFFh 

col 

The column number or column offset (0-based) 



 

ptgArea: Area Reference (Operand, ptg=25h) — BIFF7 and earlier 

This ptg specifies a reference to a rectangle (range) of cells. ptgArea is followed 
by 6 bytes that define the first row, last row, first column, and last column of the 
rectangle. The numbers of the first and last rows are encoded. 

Offset 

Name 

Size 

Contents 

0 

grbitRwFirst 

2 

(See the following table) 

2 

grbitRwLast 

2 

(See the following table) 

4 

colFirst 

1 

The first column of the reference 

5 

colLast 

1 

The last column of the reference 



 
Only the low-order 14 bits of the grbitRwFirst and grbitRwLast fields store the 
row offsets of the reference. The 2 MSBs of each field specify whether the row and 
column offset are relative or absolute. The following table shows the bit structure of 
the grbitRwFirst and grbitRwLast fields. 


Bits 

Mask 

Name 

Contents 

15 

8000h 

fRwRel 

=1 if the row offset is relative 
=0 otherwise 

14 

4000h 

fColRel 

=1 if the column offset is relative 
=0 otherwise 

13–0 

3FFFh 

rw 

The row number or row offset (0-based) 



 

ptgMemArea: Constant Reference Subexpression (Operand, ptg=26h) 

This ptg is used to optimize reference expressions. A reference expression consists 
of operands — usually references to cells or areas — joined by reference operators 
(intersection, union, and range). Three examples of reference expressions are given 
in the following table. 

Reference expression 

Evaluates to 

(A1,C3,D3:D5) 

Two single cells and a 3x1 area 

(A1:C3) (B2:D4) 

A 2x2 area (the space character is the intersection operator) 

(Name C3) 

The smallest area that contains both C3 and all the cells 
referenced in Name (the space character is the intersection 
operator) 



 
Many reference expressions evaluate to constant references. In the preceding 
examples, the first two expressions always evaluate to the same reference. The 
third example doesn‘t evaluate to a constant reference because the name‘s definition 
may change, which might cause the reference expression to evaluate differently. 
When a reference expression evaluates to a constant reference, Excel stores the 
constant reference in the parsed formula through a ptgMemArea token. This saves 
time during expression evaluation, because the constant part of the expression is 
pre-evaluated. This part of the expression is known as a reference subexpression. 
The token value for ptgMemArea consists of two parts: the length of the reference 
subexpression, and the value of the reference subexpression. The length is stored 
immediately following the ptgMemArea, whereas the value is appended to the saved 
parsed expression, immediately following the last token. 
The format of the length is shown in the following table. 

Offset 

Name 

Size 

Contents 

0 

(Reserved) 

4 

 

4 

cce 

2 

The length of the reference subexpression 



 
Immediately following this part of the token value is the reference subexpression 
itself. 
The rest of the token value (that is, the value of the reference subexpression) is 
appended to the parsed expression in the format shown in the following table. 

Offset 

Name 

Size 

Contents 

0 

cref 

2 

The number of rectangles to follow 

2 

rgref 

var 

An array of rectangles 



 

Each rgref rectangle is 6 bytes long and contains the fields listed in the following 
table. 


Offset 

Name 

Size 

Contents 

0 

rwFirst 

2 

The first row 

2 

rwLast 

2 

The last row 

4 

colFirst 

1 

The first column 

5 

colLast 

1 

The last column 



 
If a formula contains more than one ptgMemArea, the token values are appended to 
the saved parsed expression in order: first the values for the first ptgMemArea, then 
the values for the second ptgMemArea, and so on. 

If a formula contains very long reference expressions, the BIFF record containing the 
parsed expression may be too long to fit in a single record. Excel uses CONTINUE 
records to store long formulas. However, an individual rgref rectangle is never split 
between records; record boundaries occur between successive rectangles. For more 
information about the CONTINUE records, see .CONTINUE.. 

ptgMemErr: Erroneous Constant Reference Subexpression (Operand, ptg=27h) 

This ptg is closely related to ptgMemArea. It is used for pre-evaluating reference 
subexpressions that do not evaluate to references. 
For example, consider the formula =SUM(C:C 3:3), which is the sum of the 
intersection of column C and row 3 (the space between C:C and 3:3 is the 
intersection operator). The argument to the SUM function is a valid reference 
subexpression that generates a ptgMemArea for pre-evaluation. However, if you 
delete column C, the formula adjusts to =SUM(#REF! 3:3). In this case, the 
argument to SUM is still a constant reference subexpression, but it doesn‘t evaluate 
to a reference. Therefore, a ptgMemErr is used for pre-evaluation. 
The token value consists of the error value and the length of the reference 
subexpression. Its format is shown in the following table. 

Offset 

Name 

Size 

Contents 

0 

(Reserved) 

4 

 

4 

cce 

2 

The length of the reference subexpression 



 
The reference subexpression will contain a ptgRefErr or ptgAreaErr. 

ptgRefErr: Deleted Cell Reference (Operand, ptg=2Ah) — BIFF8 

This ptg specifies a cell reference adjusted to #REF! as a result of worksheet editing 
(such as cutting, pasting, and deleting). The ptgRefErr is followed by4 unused 
bytes. 

Offset 

Name 

Size 

Contents 

0 

(Reserved) 

4 

 



 
The original base type of the adjusted ptg is ptgRef or ptgRefN. 

ptgRefErr: Deleted Cell Reference (Operand, ptg=2Ah) — BIFF7 and earlier 

This ptg specifies a cell reference adjusted to #REF! as a result of worksheet editing 
(such as cutting, pasting, and deleting). The ptgRefErr is followed by 3 unused 
bytes. 

Offset 

Name 

Size 

Contents 

0 

(Reserved) 

3 

 



 


The original base type of the adjusted ptg is ptgRef or ptgRefN. 

ptgAreaErr: Deleted Area Reference (Operand, ptg=2Bh) — BIFF8 

This ptg specifies an area reference adjusted to #REF! as a result of worksheet 
editing (such as cutting, pasting, and deleting). The ptgAreaErr is followed by 8 
unused bytes. 

Offset 

Name 

Size 

Contents 

0 

(Reserved) 

8 

 



 
The original base type of the adjusted ptg is ptgArea or ptgAreaN. 

ptgAreaErr: Deleted Area Reference (Operand, ptg=2Bh) — BIFF7 and earlier 

This ptg specifies an area reference that was adjusted to #REF! as a result of 
worksheet editing (such as cutting, pasting, and deleting). The ptgAreaErr is 
followed by 6 unused bytes. 

Offset 

Name 

Size 

Contents 

0 

(Reserved) 

6 

 



 
The original base type of the adjusted ptg is ptgArea or ptgAreaN. 

ptgRefN: Cell Reference Within a Shared Formula (Operand, ptg=2Ch) — BIFF8 

Similar to its ptgRef counterpart, the ptgRefN specifies a reference to a single cell. 
It is followed by references for the row and column that contain the cell; the row 
number of the cell is encoded as bit fields. 
In BIFF5 and later, ptgRefN is used only in shared formulas. In earlier versions of 
Excel, ptgRefN was used in names. 

Offset 

Name 

Size 

Contents 

0 

rw 

2 

The row (or row offset) of the reference 

2 

grbitCol 

2 

(See the following table) 



 
Only the low-order 14 bits of the grbitCol field store the column number of the 
reference. The 2 MSBs specify whether the row and column references are relative 
or absolute. The following table shows the bit structure of the grbitCol field. 

Bits 

Mask 

Name 

Contents 

15 

8000h 

fRwRel 

=1 if the row offset is relative 
=0 otherwise 

14 

4000h 

fColRel 

=1 if the column offset is relative 
=0 otherwise 

13–0 

3FFFh 

col 

The column number or column offset (0-based) 



 

The only difference between ptgRefN and ptgRef is in the way relative references 
are stored. Relative references in shared formulas are stored as offsets, not as row 
and column numbers (as in ptgRef). For more information, see .SHRFMLA.. 


ptgRefN: Cell Reference Within a Shared Formula (Operand, ptg=2Ch) — BIFF7 and 
earlier 

Similar to its ptgRef counterpart, the ptgRefN specifies a reference to a single cell. 
It is followed by references for the row and column that contain the cell; the row 
number of the cell is encoded as bit fields. 
In BIFF5 and later, ptgRefN is used only in shared formulas. In earlier versions of 
Excel, ptgRefN was used in names. 

Offset 

Name 

Size 

Contents 

0 

grbitRw 

2 

(See the following table) 

2 

col 

1 

The column (or column offset) of the reference 



 
Only the low-order 14 bits of the grbitRw field store the row number of the 
reference. The 2 MSBs specify whether the row and column references are relative 
or absolute. The following table shows the bit structure of the grbitRw field. 

Bits 

Mask 

Name 

Contents 

15 

8000h 

fRwRel 

=1 if the row offset is relative 
=0 otherwise 

14 

4000h 

fColRel 

=1 if the column offset is relative 
=0 otherwise 

13–0 

3FFFh 

rw 

The row number or row offset (0-based) 



 

The only difference between ptgRefN and ptgRef is in the way relative references 
are stored. Relative references in shared formulas are stored as offsets, not as row 
and column numbers (as in ptgRef). For more information, see .SHRFMLA.. 

ptgAreaN: Area Reference Within a Shared Formula (Operand, ptg=2Dh) — BIFF8 

The ptgAreaN token specifies a reference to a rectangle of cells. Both the first 
column and last column are encoded. 
In BIFF5 and later, ptgAreaN is used only in shared formulas. In earlier versions, it 
was used in names. 

Offset 

Name 

Size 

Contents 

0 

rwFirst 

2 

The first row of the absolute reference or relative 
reference 

2 

rwLast 

2 

The last row of the absolute reference or relative 
reference 

4 

grbitColFirst 

2 

(See the following table) 

6 

grbitColLast 

2 

(See the following table) 



 
Only the low-order 14 bits of the grbitColFirst and grbitColLast fields store 
the column offsets of the reference. The 2 MSBs of each field specify whether the 
row and column offset are relative or absolute. The following table shows the bit 
structure of the grbitColFirst and grbitColLast fields. 

Bits 

Mask 

Name 

Contents 

15 

8000h 

fRwRel 

=1 if the row offset is relative 
=0 otherwise 




Bits 

Mask 

Name 

Contents 

14 

4000h 

fColRel 

=1 if the column offset is relative 
=0 otherwise 

13–0 

3FFFh 

col 

The column number or column offset (0-based) 



 
The only difference between ptgAreaN and ptgArea is in the way relative 
references are stored. 

ptgAreaN: Area Reference Within a Shared Formula (Operand, ptg=2Dh) — BIFF7 and 
earlier 

The ptgAreaN token specifies a reference to a rectangle of cells. Both the first row 
and last row are stored as bit fields. 
In BIFF5 and later, ptgAreaN is used only in shared formulas. In earlier versions, it 
was used in names. 

Offset 

Name 

Size 

Contents 

0 

grbitRwFirst 

2 

The first row of the absolute reference or relative 
reference offset bit fields 

2 

grbitRwLast 

2 

The last row of the absolute reference or relative 
reference offset bit fields 

4 

colFirst 

1 

The first column of the reference or column offset 

5 

colLast 

1 

The last column of the reference or column offset 



 
Only the low-order 14 bits of the grbitRwFirst and grbitRwLast fields store the 
row offsets of the reference. The 2 MSBs of each field specify whether the row and 
column offset are relative or absolute. The following table shows the bit structure of 
the grbitRwFirst and grbitRwLast fields. 

Bits 

Mask 

Name 

Contents 

15 

8000h 

fRwRel 

=1 if the row offset is relative 
=0 otherwise 

14 

4000h 

fColRel 

=1 if the column offset is relative 
=0 otherwise 

13–0 

3FFFh 

rw 

The row number or row offset (0-based) 



 
The only difference between ptgAreaN and ptgArea is in the way relative 
references are stored. 

ptgNameX: Name or External Name (Operand, ptg=39h) — BIFF8 

This ptg stores the index to a name. 

Offset 

Name 

Size 

Contents 

0 

ixti 

2 

Index into the EXTERNSHEET record 

2 

ilbl 

2 

The index to the NAME or EXTERNNAME table (1-based) 

4 

(Reserved) 

2 

Reserved; must be 0 (zero) 



 


ptgNameX: Name or External Name (Operand, ptg=39h) — BIFF7 and earlier 

This ptg stores the index to a name. If the name is in the current workbook (in 
which case ixals is negative), the ilbl field is a 1-based index to the table of 
NAME records. If the name is in another workbook (that is, if it is an external name), 
the ilbl field is a 1-based index to the table of EXTERNNAME records. 

Offset 

Name 

Size 

Contents 

0 

ixals 

2 

The index to the EXTERNSHEET records. If ixals is 
negative (for example, FFFFh), the name is in the current 
workbook. 

2 

(Reserved) 

8 

 

10 

ilbl 

2 

The index to the NAME or EXTERNNAME table (1-based). 

12 

(Reserved) 

12 

 



 

ptgRef3d: 3-D Cell Reference (Operand, ptg=3Ah) — BIFF8 

This ptg stores a 3-D cell reference (for example, Sheet1:Sheet3!$A$1). 

Offset 

Name 

Size 

Contents 

0 

ixti 

2 

Index into the EXTERNSHEET record. 

2 

rw 

2 

The row of the reference, or the row offset. 

4 

grbitCol 

2 

(See the following table.) 



 
Only the low-order 8 bits of the grbitCol field store the column number of the 
reference. The 2 MSBs specify whether the row and column references are relative 
or absolute. The following table shows the bit structure of the grbitCol field. 

Bits 

Mask 

Name 

Contents 

15 

8000h 

fRwRel 

=1 if the row offset is relative 
=0 otherwise 

14 

4000h 

fColRel 

=1 if the column offset is relative 
=0 otherwise 

13 – 8 

3F00h 

(Reserved) 

 

7 – 0 

00FFh 

col 

The column number or column offset (0-based) 



 

ptgRef3d: 3-D Cell Reference (Operand, ptg=3Ah) — BIFF7 and earlier 

This ptg stores a 3-D cell reference (for example, Sheet1:Sheet3!$A$1). If the 
reference is to another workbook (in which case ixals is positive), itabFirst is 
not used (it will be 0000h), and itabLast is the ixals for the last sheet in the 3-D 
reference. If either itabFirst or itabLast is equal to FFFFh, that sheet is a 
deleted sheet. 

Offset 

Name 

Size 

Contents 

0 

ixals 

2 

The index to the EXTERNSHEET records. If ixals is 
negative (for example, FFFFh), the reference is in the 
current workbook. 

2 

(Reserved) 

8 

 




Offset 

Name 

Size 

Contents 

10 

itabFirst 

2 

The index to the first sheet in the 3-D reference (0-
based); see the text. 

12 

itabLast 

2 

The index to the last sheet in the 3-D reference (0-
based); see the text. 

14 

grbitRw 

2 

(See the following table.) 

16 

col 

1 

The column of the reference, or the column offset. 



 
Only the low-order 14 bits of the grbitRw field store the row number of the 
reference. The 2 MSBs specify whether the row and column references are relative 
or absolute. The following table shows the bit structure of the grbitRw field. 

Bits 

Mask 

Name 

Contents 

15 

8000h 

fRwRel 

=1 if the row offset is relative 
=0 otherwise 

14 

4000h 

fColRel 

=1 if the column offset is relative 
=0 otherwise 

13–0 

3FFFh 

rw 

The row number or row offset (0-based) 



 

ptgArea3d: 3-D Area Reference (Operand, ptg=3Bh) — BIFF8 

This ptg stores a 3-D area reference (for example, Sheet1:Sheet3!A1:E9). 

Offset 

Name 

Size 

Contents 

0 

ixti 

2 

Index into the EXTERNSHEET record. 

2 

rwFirst 

2 

The first row in the area. 

4 

rwLast 

2 

The last row in the area. 

6 

grbitColFirst 

2 

The first column of the reference, or the column 
offset; see following table. 

8 

grbitColLast 

2 

The last column of the reference, or the column 
offset; see following table. 



 
Only the low-order 8 bits of the grbitColFirst and grbitColLast fields store the 
column number of the reference. The 2 MSBs specify whether the row and column 
references are relative or absolute. The following table shows the bit structure of the 
grbitCol field. 

Bits 

Mask 

Name 

Contents 

15 

8000h 

fRwRel 

=1 if the row offset is relative 
=0 otherwise 

14 

4000h 

fColRel 

=1 if the column offset is relative 
=0 otherwise 

13–8 

3F00h 

(Reserved) 

 

7–0 

00FFh 

col 

The column number or column offset (0-based) 



 

ptgArea3d: 3-D Area Reference (Operand, ptg=3Bh) — BIFF7 and earlier 

This ptg stores a 3-D area reference (for example, Sheet1:Sheet3!A1:E9). 


Offset 

Name 

Size 

Contents 

0 

ixals 

2 

The index to the EXTERNSHEET records. If ixals is 
negative (for example, FFFFh), the reference is on 
another sheet in the same workbook. 

2 

(Reserved) 

8 

 

10 

itabFirst 

2 

The index to the first sheet in the 3-D reference (0-
based). 

12 

itabLast 

2 

The index to the last sheet in the 3-D reference (0-
based). 

14 

grbitRwFirst 

2 

The first row in the area; see the following table. 

16 

grbitRwLast 

2 

The last row in the area; see the following table. 

18 

colFirst 

1 

The first column of the reference, or the column 
offset. 

19 

colLast 

1 

The last column of the reference, or the column 
offset. 



 
Only the low-order 14 bits of the grbitRwFirst and grbitRwLast fields store the 
row offsets of the reference. The 2 MSBs of each field specify whether the row and 
column offset are relative or absolute. The following table shows the bit structure of 
the grbitRwFirst and grbitRwLast fields. 

Bits 

Mask 

Name 

Contents 

15 

8000h 

fRwRel 

=1 if the row offset is relative 
=0 otherwise 

14 

4000h 

fColRel 

=1 if the column offset is relative 
=0 otherwise 

13–0 

3FFFh 

rw 

The row number or row offset (0-based) 



 

ptgRefErr3d: Deleted 3-D Cell Reference (Operand, ptg=3Ch) 

This ptg stores a 3-D cell reference adjusted to #REF! as a result of worksheet 
editing (such as cutting, pasting, and deleting). The ptgRefErr3d is identical to 
ptgRef3d. 

ptgAreaErr3d: Deleted 3-D Area Reference (Operand, ptg=3Dh) 

This ptg stores a 3-D area reference adjusted to #REF! as a result of worksheet 
editing (such as cutting, pasting, and deleting). The ptgAreaErr3d is identical to 
ptgArea3d. 

Control Tokens 

ptgExp: Array Formula or Shared Formula (ptg=01h) 

This ptg indicates an array formula or a shared formula. When ptgExp occurs in a 
formula, it is the only token in the formula. This indicates the cell containing the 
formula is part of an array or part of a shared formula. The actual formula is found 
in an ARRAY record. 

The token value for ptgExp consists of the row and column of the upper-left corner 
of the array formula. 


Offset 

Name 

Size 

Contents 

0 

rwFirst 

2 

The row number of the upper-left corner 

2 

colFirst 

2 

The column number of the upper-left corner 



 

ptgTbl: Data Table (ptg=02h) 

This ptg indicates a data table. When ptgTbl occurs in a formula, it is the only 
token in the formula. This indicates the cell containing the formula is an interior cell 
in a data table; the table description is found in a TABLE record. Rows and columns 
that contain input values to be substituted in the table do not contain ptgTbl. 
The token value for ptgTbl consists of the row and column of the upper-left corner 
of the table‘s interior. 

Offset 

Name 

Size 

Contents 

0 

rwFirst 

2 

The row number of the upper-left corner 

2 

colFirst 

2 

The column number of the upper-left corner 



 

ptgParen: Parenthesis (ptg=15h) 

This ptg is used only when Excel unparses a parsed expression (for example, to 
display it in the formula bar). This ptg is not used to evaluate parsed expressions. 
It indicates that the previous token in the parsed expression should be in 
parentheses. If the previous token is an operand, only that operand is in 
parentheses. If the previous token is an operator, the operator and all of its 
operands are in parentheses. 
For example, the formula =1+(2) is stored as follows: 
ptgInt 0001h 
ptgInt 0002h 
ptgParen 
ptgAdd 
In this case, only the integer operand 2 is in parentheses. 
The formula =(1+2) is stored as follows: 
ptgInt 0001h 
ptgInt 0002h 
ptgAdd 
ptgParen 
In this example, the parenthesized quantity consists of the ptgAdd operator and 
both of its operands. 

ptgAttr: Special Attribute (ptg=19h) 

This ptg is used for several different purposes. In all cases, the token value consists 
of a group of flag bits and a data word. 
BIFF3 and BIFF4 

Offset 

Name 

Size 

Contents 

0 

grbit 

1 

Option flags 

1 

w 

2 

Data word 



 


BIFF4 when bifFAttrSpace = 1 

Offset 

Name 

Size 

Contents 

0 

grbit 

1 

Option flags 

1 

bAttrSpace 

1 

Spacing attribute 

2 

bSpace 

1 

Number of spaces 



 
The grbit field contains the following option flags: 

Bits 

Mask 

Name 

Contents 

0 

01h 

bitFAttrSemi 

=1 if the formula contains a volatile function 

1 

02h 

bitFAttrIf 

=1 to implement an optimized IF function 

2 

04h 

bitFAttrChoose 

=1 to implement an optimized CHOOSE function 

3 

08h 

bitFAttrGoto 

=1 to jump to another location within the parsed 
expression 

4 

10h 

bitFAttrSum 

=1 to implement an optimized SUM function 

5 

20h 

bitFAttrBaxcel 

=1 if the formula is a BASIC-style assignment 
statement 

6 

40h 

bifFAttrSpace 

=1 if the macro formula contains spaces after the 
equal sign (BIFF3 and BIFF4 only) 

7 

80 

(unused) 

 



 

ptgAttr requires special handling when parsed expressions are scanned. For more 
information, see .Scanning a Parsed Expression.. 

bitFAttrSemi 

Set to 1 if the formula contains a volatile function — that is, a function that is 
calculated in every recalculation. If ptgAttr is used to indicate a volatile function, it 
must be the first token in the parsed expression. If grbit=bitFAttrSemi, then 
the b (or w) field is don‘t-care. 

bitFAttrIf 

Indicates an optimized IF function. An IF function contains three parts: a condition, 
a TRUE subexpression, and a FALSE subexpression. The syntax of an associated 
Excel formula would be IF(condition, TRUE subexpression, FALSE 
subexpression). 
bitFAttrIf immediately follows the condition portion of the parsed expression. 
The b (or w) field specifies the offset to the FALSE subexpression; the TRUE 
subexpression is found immediately following the ptgAttr token. At the end of the 
TRUE subexpression, there is a bitFAttrGoto token that causes a jump to beyond 
the FALSE subexpression. In this way, Excel evaluates only the correct 
subexpression instead of evaluating both of them and discarding the wrong one. 
The FALSE subexpression is optional in Excel. If it is missing, the b (or w) field 
specifies an offset to beyond the TRUE subexpression. 

bitFAttrChoose 

Indicates an optimized CHOOSE function. The cCases (or wCases) field specifies the 
number of cases in the CHOOSE function. It is followed by an array of word offsets to 
those cases. The format of this complex token value is shown in the following table. 


Offset 

Name 

Size 

Contents 

0 

grbit 

1 

bitFAttrChoose (04h). 

1 

wCases 

2 

The number of cases in the CHOOSE function. 

3 

rgw 

var 

A sequence of word offsets to the CHOOSE cases. The 
number of words in this field is equal to wCases+1. 



 

bitFAttrGoto 

Instructs the expression evaluator to skip part of the parsed expression during 
evaluation. The b (or w) field specifies the number of bytes (or words) to skip, 
minus 1. 

bitFAttrSum 

Indicates an optimized SUM function (a SUM that has a single argument). For 
example, the sum of the cells in a 3-D reference — which has the formula 
=SUM(Sheet1:Sheet3!C11) — generates a ptgAttr with bitFAttrSum TRUE. 
The b (or w) field is don‘t-care. 

bifFAttrSpace 

Indicates a formula (macro sheet or worksheet) contains spaces or carriage returns. 
Excel retains spaces and returns in macro sheet and worksheet formulas (in version 
3.0 and earlier, spaces and returns would have been eliminated when the formula 
was parsed). The bAttrSpace field contains an attribute code, and the bSpace 
field contains the number of spaces or returns. The attribute codes are listed in the 
following table. 

Attribute 

Value 

bitFSpace 

00h 

bitFEnter 

01h 

bitFPreSpace 

02h 

bitFPreEnter 

03h 

bitFPostSpace 

04h 

bitFPostEnter 

05h 

bitFPreFmlaSpace 

06h 



 
The bitFSpace and bitFEnter attributes indicate that bSpace contains the 
number of spaces or returns before the next ptg in the formula. 
The bitFPreSpace, bitFPreEnter, bitFPostSpace, and bitFPostEnter 
attributes occur with a ptgParen. Because one ptgParen represents two matched 
parentheses, the ptgAttr must encode the position of the space or return if it 
occurs before either parenthesis. For example, the ptgs that express the worksheet 
formula = ("spaces" ), which contains four spaces before the opening and 
closing parentheses, would appear in a formula record as shown in the following 
table. 

Hex dump 

Ptg type 

Decodes to 

17 06 73 70 61 63 65 73 

ptgStr 

The string .spaces. (operand) 

19 40 02 04 

ptgAttr 

Four spaces before the opening parenthesis 

19 40 04 04 

ptgAttr 

Four spaces before the closing parenthesis 




Hex dump 

Ptg type 

Decodes to 

15 

ptgParen 

The enclose operand (ptgStr) in 
parentheses 



 
The bitFPreFmlaSpace attribute provides compatibility with BIFF3, where spaces 
can occur only after the equal sign (before the formula) in macro formulas. If the 
spaces in a BIFF5/BIFF7 formula are also acceptable in a BIFF3 formula, Excel writes 
a bitFPreFmlaSpace attribute to indicate as much. 

ptgMemNoMem: Incomplete Constant Reference Subexpression (ptg=28h) 

This ptg is closely related to ptgMemArea. It is used to indicate a constant 
reference subexpression that could not be pre-evaluated because of insufficient 
memory. 
The token value consists of the length of the reference subexpression, as shown in 
the following table. 

Offset 

Name 

Size 

Contents 

0 

(Reserved) 

4 

 

4 

cce 

2 

The length of the reference subexpression 



 

ptgMemFunc: Variable Reference Subexpression (ptg=29h) 

This ptg indicates a reference subexpression that does not evaluate to a constant 
reference. Any reference subexpression that contains one or more of the following 
items generates a ptgMemFunc. 

Subexpression contains 

Example 

A function 

OFFSET(ACTIVE.CELL(),1,1):$C$2 

A name 

INDEX(first_cell:$D$2,1,1) 

An external reference 

SALES.XLS!$A$1:SALES.XLS!$C$3 



 
The token value consists of the length of the reference subexpression. 

Offset 

Name 

Size 

Contents 

0 

cce 

2 

The length of the reference subexpression 



 

ptgMemAreaN: Reference Subexpression Within a Name (ptg=2Eh) 

This ptg contains a constant reference subexpression within a name definition. 
Unlike ptgMemArea, ptgMemAreaN is not used to pre-evaluate the reference 
subexpression. 
The token value consists of the length of the reference subexpression. 

Offset 

Name 

Size 

Contents 

0 

cce 

2 

The length of the reference subexpression 



 

ptgMemNoMemN: Incomplete Reference Subexpression Within a Name (ptg=2Fh) 

This ptg is closely related to ptgMemAreaN. It is used to indicate a constant 
reference subexpression within a name that could not be evaluated because of 
insufficient memory. 


The token value consists of the length of the reference subexpression, as shown in 
the following table. 

Offset 

Name 

Size 

Contents 

0 

cce 

2 

The length of the reference subexpression 



 

Function Operators 

The following paragraphs describe the function operator ptgs. All of these operators 
pop arguments from the operand stack, compute a function, and then push the 
result back onto the operand stack. The number of operands popped from the stack 
is equal to the number of arguments passed to the Excel function. Some Excel 
functions always require a fixed number of arguments, whereas others accept a 
variable number of arguments. The SUM function, for example, accepts a variable 
number of arguments. 
Although they‘re operators, function tokens also behave like operands in that they 
can occur in any of the three ptg classes: reference, value, or array. 

ptgFunc: Function, Fixed Number of Arguments (Operator, ptg=21h) 

This ptg indicates an Excel function with a fixed number of arguments. The 
ptgFunc is followed by the index to the function table. 

Offset 

Name 

Size 

Contents 

0 

iftab 

2 

The index to the function table; 



 

ptgFuncVar: Function, Variable Number of Arguments (Operator, ptg=22h) 

This ptg indicates an Excel function with a variable number of arguments. The 
ptgFuncVar is followed by the number of arguments (1 byte) and then the index to 
the function table (2 bytes). 

Offset 

Bits 

Mask 

Name 

Contents 

0 

6–0 

7Fh 

cargs 

The number of arguments to the function. 

 

7 

80h 

fPrompt 

=1, function prompts the user (macro functions 
that end with a question mark). 

1 

14–0 

7FFFh 

iftab 

The index to the function table; 

 

15 

8000h 

fCE 

The function is a command-equivalent. 



 



Revision History Stream 

The .Revision History. stream will occur in any shared (revision-tracked) workbook. 
It contains the history of actions taken by each user, which allows other users to 
keep their versions of the workbook synchronized. The following are the only records 
that can legally be found in the Revision History stream. These records may not ever 
occur outside of the Revision History stream (unless otherwise indicated). 
The record order for the Revision History stream is generally as follows: 
RRDINFO 
USRFILELOCK (always present, but doesn‘t necessarily mean the file‘s locked) 
USREXCL (always present, but doesn‘t necessarily mean the file‘s locked) 
0 or more blocks of the following: 
RRDHEAD 
RRTABID 
0 or more of the following: 
RRDRENSHT 
RRDINSDEL block* 
RRDCONF 
RRDINSERTSH 
RRDCHGCELL block* 
RRDMOVE block* 
RRDFORMAT 
RRDAUTOFMT 
RRDDEFNAME 
RRDUSERVIEW 
RRDNOTE 
RRDTQSIF 
* blocks: 
RRDINSDEL: if this is a row/col insert revision, the block will simply contain an 
RRDINSDEL, followed by 0 or more DUCR records. If this is a row/col delete revision, 
the block will be the following: 
RRDINSDELBEGIN 
RRDINSDEL 
DUCR (0 or more) 
RRDCHGCELL/RRDFORMAT (0 or more of each, in any, intermixed, order) – old 
values of the deleted rows/columns. This is the only time the RRDCHGCELL 
record should have the revid set to 0. 
RRDINSDELEND 


RRDMOVE: similar to RRDINSDEL in the delete case: 
RRDMOVEBEGIN 
RRDMOVE 
DUCR (0 or more) 
RRDCHGCELL/RRDFORMAT (0 or more of each) 
RRDMOVEEND 
RRDCHGCELL: 
RRDCHGCELL 
RRDRSTETXP (0 or more) 


EOF: End of File (10h) 

This record indicates the end of the Revision History stream (can occur in other 
streams also). 
Record Data 

Offset 

Name 

Size 

Contents 



 

RRD: Revision Record on Disk Structure 

The majority of the records that follow will begin with a 14-byte RRD structure, 
which contains general information that may be applicable to any of the revision 
record types. 
Record Data 

Offset 

Name 

Size 

Contents 

0 

cb 

4 

Size of the corresponding memory revision 
record (not the disk structure). 

4 

revid 

4 

This revision record‘s id (only applicable for 
reviewable revision types). 

8 

revt 

2 

Revision type. 

10 

rrdInfo 

2 

Collection of flags for this revision record. 

12 

tabid 

2 

Id of the sheet on which the revision had 
occurred (if applicable). 



The rrdInfo is a 16-bit field that contains the following option flags: 

Bits 

Mask 

Flag Name 

Contents 

0 

0001h 

fAccepted 

Flag indicating that this revision has been 
reviewed and accepted (Exception: insert 
sheet revision records are always marked 
as accepted). 

1 

0002h 

fUndoAction 

Flag indicating that this revision occurred 
due to an Undo action. 

2 

0004h 

fRedoAction 

Flag indicating that this revision occurred 
due to a Redo action 




3 

0008h 

fDelAtEdgeOfSort 

Only applicable to the row/column 
insert/delete revision type. Indicates that 
the row or column being deleted is at the 
edge of a sorted range. 

15-4 

FFF0h 

(Reserved) 

Reserved; must be zero (0). 



 
The follwing are the only valid values for the revt field: 

Value 

Meaning 

0 

Insert Row (reviewable). 

1 

Insert Column (reviewable). 

2 

Delete Row (reviewable). 

3 

Delete Column (reviewable). 

4 

Cell(s) Move (reviewable). 

5 

Insert Sheet (reviewable). 

8 

Cell Change (reviewable). 

9 

Sheet Rename (reviewable). 

10 

Defined Name change (reviewable). 

11 

Formatting revision (non-reviewable). 

12 

Auto-formatting revision (non-reviewable). 

13 

Comment revision (non-reviewable). 

32 

Header (revision meta-data) (non-
reviewable). 

37 

Conflict (non-reviewable). 

38 

Formatting Merge (non-reviewable). 

43 

Custom View Add (non-reviewable). 

44 

Custom View Delete (non-reviewable). 

46 

Query Table Field Removal (non-reviewable). 



 
Reviewable vs. non-reviewable revisions: reviewable revisions are ones that will 
show in the revision history if the user chooses to Review History (Highlight 
Changes) or Accept/Reject Revisions. Additionally, conflicts between reviewable 
revisions will cause a conflict resolution dialog to be brought up, while conflicts in 
non-reviewable revisions will be resolved automatically by Excel. 

 

RRDAUTOFMT: Auto-formatting revision (14Bh) 

Revision record corresponding to an auto-formatting revision. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

rrd 

14 

RRD structure. Non-reviewable revision – 
revid should be set to zero. Revision 
corresponds to a sheet – tabid should be set 
appropriately. 

18 

ref 

8 

Sheet reference identifying the location on the 
sheet where the Auto-formatting was applied. 




26 

itbl 

2 

Index identifying which autoformat was 
applied. 

28 

grbitAtr 

2 

Flags and attributes for this revision record. 



 
The grbitAtr is a 16-bit field that contains the following option flags: 

Bits 

Mask 

Flag Name 

Contents 

0 

0001h 

applyNumberFormats 

Flag indicating that the specified 
autoformat applied number format 
properties. 

1 

0002h 

applyFontFormats 

Flag indicating that the specified 
autoformat applied font properties. 

2 

0004h 

applyAlignmentFormats 

Flag indicating that the specified 
autoformat applied text aligntment 
properties. 

3 

0008h 

applyBorderFormats 

Flag indicating that the specified 
autoformat applied border properties. 

4 

0010h 

applyPatternFormats 

Flag indicating that the specified 
autoformat applied color pattern 
properties. 

5 

0020h 

applyWidthHeightFormats 

Flag indicating that the specified 
autoformat applied height and/or width 
properties. 

15-4 

FFC0h 

(Reserved) 

Reserved; must be zero (0). 



RRDCHGCELL: Change Cell revision (13Bh) 

Revision record corresponding to a cell change revision. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

rrd 

14 

RRD structure. Reviewable revision – revid 
has to be greater than zero (unless it‘s an old 
value, preserved for Undo). Revision 
corresponds to a sheet – tabid should be set 
appropriately. 

18 

dwCellInfo 

4 

Collection of flags for the Change Cell revision. 

22 

row 

2 

Row location of the cell that was changed. 

24 

column 

2 

Column location of the cell that was changed. 

26 

cbOldVal 

4 

Memory (not disk) size of the buffer for the old 
cell value. 

30 

cetxRst 

2 

Count of RRDRSTETXP structures that follow. 

32 

dxfOld 

var 

If the fOldFmtDxf flag is set and the 
fOldFmtNull flag is not set, there will be a 
DXF structure for the formatting of the old cell 
value at the 32nd-bit offset. 

var 

dxf 

var 

If the fDxf flag is set and the fDxfNull flag 
is not set, there will be a DXF structure for the 
formatting of the new cell value at this 
location. 




var 

rgbOld 

var 

If the cbOldVal value is greater than zero, 
the old value of the cell will be stored at this 
location. The contents of the buffer will depend 
on the value of the vtOld flag (see text). 

var 

rgb 

var 

The new value of the cell is stored at this 
location. The contents of the buffer will depend 
on the value of the vt flag (see text). 



 
The dwCellInfo is a 32-bit field that contains the following option flags: 

Bits 

Mask 

Flag Name 

Contents 

2-0 

00000007h 

vt 

Value type – indicates the cell type of the 
new cell contents. 

5-3 

00000038h 

vtOld 

Old value type – indicates the cell type of 
the old cell contents. 

6 

00000040h 

f123Prefix 

Flag indicating whether or not the new 
value is to be preceded by a single quote 
mark (.text). 

7 

00000080h 

f123PrefixOld 

Flag indicating whether or not the old value 
was to be preceded by a single quote mark 
(.text). 

8 

00000100h 

fOldFmt 

Flag indicating that there is old formatting 
information available for this cell. 

9 

00000200h 

fOldFmtNull 

Flag indicating that the old DXF is NULL. 

10 

00000400h 

fXfDxf 

Flag indicating that the formatting change 
had an affect on the formatting of the 
entire row or column that this cell belongs 
to (Only applicable for Undo operations). 

11 

00000800h 

fStyXfDxf 

Flag indicating that formatting change for 
this cell affected the cell's style (Only 
applicable for Undo operations). 

12 

00001000h 

fDxf 

Flag indicating that there was a formatting 
change for this cell. 

13 

00002000h 

fDxfNull 

Flag indicating that the new DXF is NULL. 

14 

00004000h 

fNewRw 

Flag indicating a newly inserted row (Only 
applicable for Undo operations). 

15 

00008000h 

fNewCol 

Flag indicating a newly inserted column 
(Only applicable for Undo operations). 

23-16 

00FF0000h 

ifmtDisp 

Zero-based index of the number format 
(Fmt) record used by this cell format (XF). 

24 

00100000h 

fPhShow 

Flag indicating whether or not the cell now 
has to show phonetic. 

25 

00200000h 

fPhShowOld 

Flag indicating whether or not the cell had 
to show phonetic before. 

26 

00400000h 

fEOLFmlaUpdate 

Flag indicating that this cell change 
occurred due to an End Of List formula 
update. 




31-27 

F8000000h 

(Reserved) 

Reserved; must be zero (0). 



 
The only supported values for vt and vtOld (cell value type) are: 

Value 

Meaning 

0 

Blank. 

1,2 

Number. 

3 

String. 

4 

Boolean/Error. 

5 

Expression. 



 
The rgb and rgbOld buffers will contain the new and old, respectively, cell values, 
formatted according to the value type. The format of the buffer is the same as is 
normally used to save out the corresponding values in the normal cell table. 
If the new or old cell value contains any formatting runs, the RRDCHGCELL record will 
be followed by a number of RRDRSTETXP records, as indicated by the cetxRst 
property. 

RRDCONF: Conflict record (152h) 

This record indicates that there had been a conflict between two users‘ revisions and 
how the conflict was resolved. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

rrd 

14 

RRD structure. revid identifies the revision 
that won the conflict. Revision does not 
correspond to a specific sheet – tabid should 
be set to -1. 



 

RRDDEFNAME: Defined name revision (153h) 

Revision record corresponding to a defined name (named range) revision. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

rrd 

14 

RRD structure. Reviewable revision – revid 
has to be greater than zero. tabid field should 
be set appropriately if the affected named 
range is a sheet-level defined name, -1 
otherwise. 

18 

tabidLocal 

2 

tabid of a local defined name‘s sheet (-1 
otherwise). 

20 

fViewName 

1 

Flag indicating that this named range belongs 
to a custom view. 

21 

(Reserved) 

1 

Reserved. Must be zero (0). 

22 

grbit 

6 

Option flags and parameters for the new 
defined name. 

28 

grbitOld 

6 

Option flags and parameters for the old 
defined name. 




34 

rgb 

var 

Parsed expression for the new state of the 
defined name. 

var 

cchCustomMenuNew 

1 

If the defined name corresponds to a Custom 
Menu, the length of the new Custom Menu text 
is stored at this location. 

var 

stCustomMenuNew 

var 

If the defined name corresponds to a Custom 
Menu, the new Custom Menu text is stored at 
this location. 

var 

cchDescriptionNew 

1 

If the defined name corresponds to a 
description, the length of the new description 
text is stored at this location. 

var 

stDescriptionNew 

var 

If the defined name corresponds to a 
description, the new description text is stored 
at this location. 

var 

cchHelpTopicNew 

1 

If the defined name corresponds to a Help 
Topic, the length of the new Help Topic text is 
stored at this location. 

var 

stHelpTopicNew 

var 

If the defined name corresponds to a Help 
Topic, the new Help Topic text is stored at this 
location. 

var 

cchStatusTextNew 

1 

If the defined name has status bar text 
associated with it, the length of the new status 
bar text is stored at this location. 

var 

stStatusTextNew 

var 

If the defined name has status bar text 
associated with it, the new status bar text is 
stored at this location. 

var 

rgbOld 

var 

If an existing defined name was changed to 
create this revision (as opposed to a brand 
new defined name being created), the old 
parsed expression of this defined name will be 
stored at this location. 

var 

cchCustomMenuOld 

1 

If the defined name corresponds to a Custom 
Menu, the length of the old Custom Menu text 
is stored at this location. Applicable to revision 
changing an existing defined name only. 

var 

stCustomMenuOld 

var 

If the defined name corresponds to a Custom 
Menu, the old Custom Menu text is stored at 
this location. Applicable to revision changing 
an existing defined name only. 

var 

cchDescriptionOld 

1 

If the defined name corresponds to a 
description, the length of the old description 
text is stored at this location. Applicable to 
revision changing an existing defined name 
only. 

var 

stDescriptionOld 

var 

If the defined name corresponds to a 
description, the old description text is stored at 
this location. Applicable to revision changing 
an existing defined name only. 




var 

cchHelpTopicOld 

1 

If the defined name corresponds to a Help 
Topic, the length of the old Help Topic text is 
stored at this location. Applicable to revision 
changing an existing defined name only. 

var 

stHelpTopicOld 

var 

If the defined name corresponds to a Help 
Topic, the old Help Topic text is stored at this 
location. Applicable to revision changing an 
existing defined name only. 

var 

cchStatusTextOld 

1 

If the defined name has status bar text 
associated with it, the length of the old status 
bar text is stored at this location. Applicable to 
revision changing an existing defined name 
only. 

var 

stStatusTextOld 

var 

If the defined name has status bar text 
associated with it, the old status bar text is 
stored at this location. Applicable to revision 
changing an existing defined name only. 



 
The grbit and grbitOld are 48-bit fields that contain the following flags and 
properties: 

Bits 

Mask 

Flag Name 

Contents 

15-0 

0000000000FFh 

cce 

Length of the parsed expression. The 
flag in grbit refers to the expression in 
the rgb buffer, while the flag in grbitOld 
corresponds to rgbOld. 

16 

000000000100h 

fPli 

Flag indicating that the defined name 
contains additional data (Custom Menu, 
Description, etc.). 

17 

000000000200h 

fFunc 

Flag indicating that the defined name 
identifies a function. 

23-18 

000000FC0000h 

fgrp 

Function group id. 

31-24 

00000FF00000h 

chKey 

Keyboard shortcut key to access this 
defined name. 

32 

000010000000h 

fHidden 

Flag indicating whether or not this 
defined name was/is hidden. 

33 

000020000000h 

fCustomMenu 

Flag indicating whether or not the 
corresponding Custom Menu string is 
set. 

34 

000040000000h 

fDescription 

Flag indicating whether or not the 
corresponding Description string is set. 

35 

000080000000h 

fHelptopic 

Flag indicating whether or not the 
corresponding Help Topic string is set. 

36 

000100000000h 

fStatustext 

Flag indicating whether or not the 
corresponding Status text string is set. 

47-37 

FFE000000000h 

(Reserved) 

Reserved; must be zero (0). 



RRDFORMAT: Formatting revision (14Ah) 

Revision record corresponding to a formatting revision. 


Record Data 

Offset 

Name 

Size 

Contents 

4 

rrd 

14 

RRD structure. Non-reviewable revision – 
revid should be set to zero. Revision 
corresponds to a sheet – tabid should be set 
appropriately. 

18 

grbit 

2 

Miscellaneous flags used by this revision 
record. 

20 

sqref 

var 

sqref record identifying the location(s) on the 
sheet where the new formatting was applied. 

var 

dxf 

var 

DXF structure containing the definition of the 
new cell formatting. 



The grbit is a 16-bit field that contains the following option flags: 

Bits 

Mask 

Flag Name 

Contents 

0 

0001h 

fXfDxf 

Flag indicating that this formatting change 
had an affect on the formatting of an entire 
row or column that an affected cell(s) 
belongs to. (Only applicable for undo 
operations). 

1 

0002h 

fXfDxfNull 

Flag indicating that the DXF in this record is 
NULL. 

2 

0004h 

fStyXfDxf 

Flag indicating that this formatting change 
affected a cell‘s style. (Only applicable for 
Undo operations). 

15-3 

FFF8h 

(Reserved) 

Reserved; must be zero (0). 



RRDHEAD: Revision Header (138h) 

This header record contains meta-data about a set of revisions that a user has made, 
which follow immediately after the header record. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

rrd 

14 

RRD structure. Non-reviewable revision – 
revid should be set to zero. Revision does not 
correspond to a specific sheet – tabid should 
be set to -1. 

18 

guid 

16 

Unique identifier for this set of revisions. 

34 

wFileCodePage 

2 

Code Page Id. 

36 

cchUser 

1 

Length of the user name. 

37 

stzUser 

114 

User Name (for the user who made this set of 
revisions). 

151 

sdtr 

8 

SHORTDTR structure identifying the date and 
time when this user saved this set of revisions. 

159 

tabidMac 

2 

The next available sheet id in this user‘s 
instance of Excel. 



 


RRDINFO: Revision History Information (196h) 

This record stores the general information about this shared workbook. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

version 

2 

BIFF version of the instance of Excel which last 
updated the User Names stream. 

6 

(Reserved) 

2 

Reserved. Must be 0 (zero). 

8 

fss 

2 

File Sharing State flags. 

10 

guid 

16 

Unique identifier of the current latest revision 
set. 

26 

guidRoot 

16 

Unique identifier of the last revision set that 
was saved. Used for Timed Update mode only. 

42 

revid 

4 

Id of the last revision in the history. 

46 

version 

4 

The current version number of this shared 
workbook. 

50 

grf 

2 

Collection of flags governing how the revision 
history is to be treated. 

52 

wRevHistInterval 

2 

Number of days Excel is to keep the change 
history for this workbook. 



 
The fss is a 16-bit field that contains the following option flags: 

Bits 

Mask 

Flag Name 

Contents 

0 

0001h 

fssShared 

The file is a shared workbook 

1 

0002h 

fssDiskHasRev 

Revision history on disk contains revisions 

2 

0004h 

fssRevHist 

No auto-purging of revisions 

3 

0008h 

fssRevTrack 

Revision tracking is on 

4 

0010h 

fssExclusive 

The shared workbook is in exclusive mode 

15-5 

FFE0h 

(Reserved) 

Reserved; must be zero (0). 



 
The grf is a 16-bit field that contains the following option flags 

Bits 

Mask 

Flag Name 

Contents 

0 

0001h 

fNoRevHist 

This shared workbook does not preserve a 
revision history. 

1 

0002h 

fProtRev 

The revision history is protected. 

15-2 

FFFCh 

(Reserved) 

Reserved; must be zero (0). 



RRDINSDEL: Row/Column Insert/Delete (137h) 

Revision record corresponding to a row/column insert or delete operation. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

rrd 

14 

RRD structure. Reviewable revision – revid 
has to be greater than zero. Revision 
corresponds to a sheet – tabid should be set 
appropriately. 




18 

grf 

2 

Flags corresponding to this revision record. 

20 

ref 

8 

Sheet reference identifying the rows or 
columns that were affected. 

28 

cUcr 

4 

Count of DUCR records following. 

32 

rgUcr 

var 

0 or more DUCR records. 



 

DUCR Structures 

The DUCR structure contains the Undo data that will have to be applied to an 
expression that was affected by this row/column insert/delete (or cell move 
revision), if the revision is rejected. 
Record Data 

Offset 

Field Name 

Size 

Contents 

0 

(Reserved) 

4 

Reserved. Must be 0 (zero). 

4 

iptg 

2 

Index of the affected ptg in the expression. 

6 

ptg 

1 

The ptg before the revision action occurred. 

7 

grbit 

1 

Flags for this DUCR. 

8 

duce 

14 

If ptg is a ptgExtend (ptg=18h), there is a DUCE 
structure at the 8-bit offset. 

8 

ref 

8 

If ptg is not a ptgExtend (ptg=18h), there is a sheet 
reference identifying the original reference that the 
expression had previously contained. 



 

The following continues the DUCR structure either at the 16th bit offset (if ptg was 
not a ptgExtend, and thus the 8th bit contained a ref), or at the 22nd bit (if the ptg 
was a ptgExtend and the 8th bit contained a DUCE): 
If the fLbl flag in the DUCR‘s grbit is set (the expression was part of a defined 
name), the structure will now be followed by the following: 

Offset 

Field Name 

Size 

Contents 

16/22 

tabid 

2 

Sheet id of the sheet where the defined name resides 
(only applicable for sheet-level names, set to -1 
otherwise). 

18/24 

cchLen 

1 

Length of the defined name. 

19/25 

rgch 

var 

The name of the defined name. 



 
Otherwise, it‘s followed by the following: 

Offset 

Field Name 

Size 

Contents 

16/22 

tabidUse 

2 

Sheet id where affected expression resides. 

18/24 

row 

2 

Row location of the cell where the affected expression 
resides. 

20/26 

column 

2 

Column location of the cell where the affected 
expression resides. 



 
The grbit is an 8-bit field that contains the following option flags: 


Bits 

Mask 

Flag Name 

Contents 

0 

01h 

fLbl 

Indicates that the expression affected by 
this Undo record was contained in a defined 
name. 

1 

02h 

fUseSh2 

Inidicates that the affected expression was 
on a different sheet. 

7-2 

FCh 

(Reserved) 

Reserved; must be zero (0). 



 

DUCE Structures 

The DUCE structure contains additional Undo data that is only used for English 
Language Formulas. 
Record Data 

Offset 

Field Name 

Size 

Contents 

0 

rowSmall 

2 

Row affected. 

2 

colSmall 

2 

Column affected. 

4 

refRadical 

8 

The reference of the English Language Formula. 

12 

ptgRadical 

1 

The ptg of the English Language Formula. 

13 

eptg 

1 

The extended ptg of this English Language Formula. 



 

RRDINSDELBEGIN: Beginning of a row/column 
insert/delete revision record block (150h) 

This record is only used for row/column deletion revisions and for insert revisions 
that are caused by Undo actions and must be matched by a corresponding 
RRINSDELEND record. If applicable, a row/column delete revision will also contain all 
the necessary information to restore cell data and formatting that was affected by 
this revision, if the change is ever undone (rejected). Therefore, the general 
structure of a row/column delete record is the following: 
RRDINSDELBEGIN 
RRDINSDEL - describes the deleted rows/columns. 
DUCR (0 or more) - Undo information for affected formulas. 
RRDCHGCELL or RRDFORMAT (0 or more, in any order) - old values, which are 
to be restored if the revision is rejected. These RRCHGCELL’s are not reviewable, 
therefore their revid‘s will be set to 0. 
RRDINSDELEND 
Record Data 

Offset 

Name 

Size 

Contents 



 

RRDINSDELEND: End of a row/column insert/delete 
revision record block (151h) 

This record is only used for row/column deletion revisions and for insert revisions 
that are caused by Undo actions and must match a corresponding RRINSDELBEGIN 
record. 


Record Data 

Offset 

Name 

Size 

Contents 



 

RRDINSERTSH: Sheet insert revision (14Dh) 

Revision record corresponding to a sheet insert revision. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

rrd 

14 

RRD structure. Reviewable revision – revid 
has to be greater than zero. Revision 
corresponds to a sheet – tabid should be set 
appropriately. 

18 

itabPos 

4 

Position of the new sheet on the sheet tab. 

22 

cchLen 

1 

Length of the sheet name. 

23 

stzName 

256 

The name of the new sheet. 



 

RRDMOVE: Cell(s) move revision (140h) 

Revision record corresponding to a cell(s) move revision. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

rrd 

14 

RRD structure. Reviewable revision – revid 
has to be greater than zero. tabid field should 
correspond to the destination sheet (can be 
different from tabidSrc for a cross-sheet 
move). 

18 

refSrc 

8 

Sheet reference identifying the original location 
of the moved cell(s). 

26 

refDst 

8 

Sheet reference identifying the new location of 
the moved cell(s). 

34 

tabidSrc 

2 

Id of the sheet, on which refSrc resides. 

36 

cUcr 

4 

Count of DUCR records following. 

40 

rgUcr 

var 

0 or more DUCR records. 



 

RRDMOVEBEGIN: Beginning of a cell(s) move revision 
record block (14Eh) 

This record must be matched by a corresponding RRDMOVEEND record. 
Record Data 

Offset 

Name 

Size 

Contents 



 

RRDMOVEEND: End of a cell(s) move revision record block 
(14Fh) 

This record must match a corresponding RRDMOVEBEGIN record. 


Record Data 

Offset 

Name 

Size 

Contents 



 


RRDNOTE: Comment revision (01Ch) 

Revision record corresponding to a comment change revision. The 01Ch record 
number is shared with the record that normally stores the comment in the Workbook 
stream of the document. The contents and structure of the record following it, 
however, are completely different in the revision history stream. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

rrd 

14 

RRD structure. Non-reviewable revision – 
revid should be set to zero. Revision 
corresponds to a sheet – tabid should be set 
appropriately. 

18 

grbitNoteOp 

2 

Identifies the action that was performed on 
this comment. 1 corresponds to Comment 
Deletion; 2 corresponds to Comment Insertion 
(also used when an existing comment is 
modified). All other values are illegal. 

20 

row 

2 

Row location of the cell where the comment 
resides. 

22 

column 

2 

Coulmn location of the cell where the affected 
expression resides. 

24 

grbitNote 

2 

Flags used by this revision record. 

26 

guid 

16 

Unique identifier (GUID) identifying the 
comment record in the Workbook stream of 
the document. 

42 

ichF 

4 

Length of the comment before this revision 
was made. 

46 

cchNote 

4 

Length of the comment text added in this 
revision. 

50 

cchAuthor 

1 

Length of the comment author‘s name. 

51 

stAuthor 

var 

String representing the comment author‘s 
name. 



 
The grbitNote is a 16-bit field that contains the following option flags: 

Bits 

Mask 

Flag Name 

Contents 

0 

0001h 

(Reserved) 

Reserved; must be zero (0). 

1 

0002h 

fShow 

Flag indicating whether or not the user has 
set this comment to always be visible. 

2 

0004h 

fOld 

Flag indicating whether or not this comment 
had originally been created by a version of 
Excel prior to Office 97. 

6-3 

0078h 

(Reserved) 

Reserved; must be zero (0). 




7 

0080h 

fRowHidden 

Flag indicating whether or not the comment 
belongs to a cell in a hidden row. 

8 

0100h 

fColHidden 

Flag indicating whether or not the comment 
belongs to a cell in a hidden column. 

15-9 

7F00h 

(Reserved) 

Reserved; must be zero (0). 



RRDRENSHT: Sheet Rename Revision (13Eh) 

Revision record corresponding to a sheet rename operation. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

rrd 

14 

RRD structure. Reviewable revision – revid has 
to be greater than zero. Revision corresponds 
to a sheet – tabid should be set appropriately. 

18 

cchOldName 

1 

Length of the old sheet name. 

19 

stzOldName 

256 

Old sheet name. 

275 

cchNewName 

1 

Length of the new sheet name. 

276 

stzNewName 

256 

New sheet name. 



RRDRSTETXP: Formatting run definition (154h) 

This record stores the definition for a formatting run in a cell change revision record. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

ifnt 

2 

Index of the current formatting run (local to 
the current cell change record). 

6 

cchFontName 

1 

Length of the font name, if a non-default font 
was applied. 

7 

stFontName 

63 

Buffer containing the font name, if a non-
default font name was applied. 

70 

stxp 

16 

STXP structure describing the various font 
properties of this formatting run. 

86 

icvFore 

4 

Zero-based index identifying the fore-ground 
color of this formatting run. 

90 

fntgrp 

4 

The font group. 



 

STXP Structures 

The STXP structure contains font information pertaining to a rich string value in a 
cell. 
Record Data 

Offset 

Field Name 

Size 

Contents 

0 

twpHeight 

4 

Height of the font (in units of 1/20th of a point). 

4 

grbit 

4 

Font attributes (see below). 

8 

bls 

2 

Bold style; a number from 100dec to 1000dec (64h to 
3E8h) that indicates the character weight (.boldness.). 
The default values are 190h for normal text and 2BCh 
for bold text. 




10 

sss 

2 

Superscript/subscript: 
00h= None 
01h= Superscript 
02h= Subscript 

12 

uls 

1 

Underline style: 
00h= None 
01h= Single 
02h= Double 
21h= Single Accounting 
22h= Double Accounting 

13 

bFamily 

1 

Font family, as defined by the Windows API LOGFONT 
structure. 

14 

bCharSet 

1 

Character set, as defined by the Windows API LOGFONT 
structure. 

15 

unused 

1 

Reserved; must be zero (0). 



 
The grbit is a 32-bit field that contains the following option flags: 

Bits 

Mask 

Flag Name 

Contents 

0 

00000001h 

(Reserved) 

Reserved; must be zero (0). 

1 

00000002h 

fItalic 

Flag indicating whether or not the font is italic. 

2 

00000004h 

(Reserved) 

Reserved; must be zero (0). 

3 

00000008h 

fOutline 

Flag indicating whether or not the font is outline style 
(Macintosh only). 

4 

00000010h 

fShadow 

Flag indicating whether or not the font is a shadow 
style (Macintosh only). 

6-5 

00000060h 

(Reserved) 

Reserved. 

7 

00000080h 

fStrikeout 

Flag indicating whether or not the font is struck out. 

8 

00000100h 

fRegular 

Flag indicating whether or not the font is regular. 

31-9 

00001000h 

(Reserved) 

Reserved. 



 

RRDTQSIF: Query Table field change revision (808h) 

Revision record indicating that a query table field has been removed. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

rt 

2 

This field must duplicate the record type value 
(808h). 

6 

grbitFrt 

2 

Reserved for FRT functionality. Must be set to 
one (1). 

8 

ref 

8 

Sheet reference identifying the location of the 
affected query table. 

16 

rrd 

14 

RRD structure. Non-reviewable revision – 
revid should be set to zero. Revision 
corresponds to a sheet – tabid should be set 
appropriately. 




30 

idField 

4 

Identifier of the specific query table field that 
was removed. 



 

RRDUSERVIEW: Custom View revision (1ACh) 

Revision record corresponding to a custom view revision. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

rrd 

14 

RRD structure. Non-reviewable revision – 
revid should be zero. Revision does not 
correspond to a specific sheet – tabid should 
be set to -1. 

18 

guid 

16 

Unique identifier (GUID) of the Custom View 
definition in the Workbook stream of the 
document. 



 


RRTABID: Map of Sheet Id’s (13Dh) 

This record stores an array of all the sheet id‘s in this user‘s version of the workbook. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

tabid 

2 

Sheet id of the first (left-most) sheet. 

6 

tabid 

2 
(repeated) 

Repeated for each sheet in the shared 
workbook (in order of tab position from left to 
right). 



USRFILELOCK: File Lock (195h) 

This record indicates that the shared workbook has been locked by a particular user. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

lPurpose 

4 

The purpose of the lock. Possible values: 
0x0000 – not locked. 
0x0001 – write or free user info. 
0x0002 – merge revisions. 
0x0004 – for making the workbook exclusive. 
0x0008 – just before delete/rename of a 
shared workbook. 
0x0010 – just check if the file is exclusive. 

8 

cchUsr 

1 

The length of the user name. 

9 

stUsr 

var 

User Name (of the user who has locked the 
workbook). 



USREXCL: Exclusive File Lock (194h) 

This record indicates that the given user has acquired an exclusive lock on the 
shared workbook. 


Record Data 

Offset 

Name 

Size 

Contents 

4 

fExcl 

4 

Flag indicating whether or not the user has an 
exclusive lock. 

8 

sdtr 

8 

SHORTDTR structure identifying the date and 
time when this user acquired the lock. 

16 

cchUsr 

1 

The length of the user name. 

17 

stUsr 

var 

User Name (of the user who has locked the 
workbook). 



User Names Stream 

The .User Names. stream will occur in any shared (revision-tracked) workbook. It 
contains information about each user, who currently has the workbook open, 
including the user name, when they opened the shared workbook, and the latest 
revision this user is synced to. The following are the only records that can legally be 
found in the User Names stream. These records may not ever occur outside of the 
User Names stream. 
The records appear below in the order required in the file. 


CUSR: Count of users (191h) 

This record stores the number of unique users currently using the given shared 
workbook. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

iCount 

2 

Number of users who currently have this 
shared workbook open (max: 255) 



 

USRCHK: Version info (198h) 

This record stores the version info for the last user to have edited the User Names 
stream. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

version 

2 

BIFF version of the instance of Excel which last 
updated the User Names stream. 

6 

(Reserved) 

2 

Reserved. Must be 0 (zero). 

 

 

 

 



CBUSR: User info byte offsets (192h) 

This record stores a table of byte offsets to each individual user info record in the 
User Names stream. 


Record Data 

Offset 

Name 

Size 

Contents 

4 

offset 

2 

Byte offset, from the start of the User Names 
stream, where the first user‘s info record is to 
be found. 

 

offset 
(repeated) 

2 (each) 

Repeated 255 times. (see text) 



 
The first offset value is the byte offset from the start of the stream to the start of the 
first user info record, each consecutive one is the byte offset from the start of the 
previous info record to the start of the current one. Therefore, to get the byte offset 
of the n-th record, add the first (n-1) entries in the table. Only the first m records 
contain non-zero values, where m is the number of users who currently have the 
shared workbook open. The remainder of the table must contain 0‘s (zeros). 

BCUsrs: Brief-case users (197h) 

This record stores the number of Brief Case users who have this shared workbook 
open. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

iCount 

2 

Number of brief case users who currently have 
this shared workbook open. 



 

USRINFO: User info (193h) 

This record stores the information about a given user who currently has the 
workbook open. 
Record Data 

Offset 

Name 

Size 

Contents 

4 

lUsrId 

4 

Unique user id (signed integer) for this user. 

8 

guid 

16 

Unique identifier (GUID) identifying the last set 
of revisions this user is synced to. 

24 

shortdtr 

8 

SHORTDTR structure identifying the date and 
time when this user opened the shared 
workbook. 

32 

cchUserName 

1 

Length of the user name. 

33 

stUserName 

var 

User Name. 



 

SHORTDTR Structures 

The short date/time structures (SHORTDTRs) are 8-byte structures that give a short 
form of a time and date. 
Record Data 

Offset 

Field Name 

Size 

Contents 

0 

year 

2 

Year 

2 

month 

1 

Month 

3 

dom 

1 

Day of month 




4 

hour 

1 

Hour 

5 

mint 

1 

Minute 

6 

sec 

1 

Second 

7 

wdy 

1 

Day of the week (1-7 = Sunday – Saturday) 



 

Chart Records 

 

CHARTFRTINFO: Chart Future Record Type Info (850h) 

Introduced in Excel 9 (2000) this BIFF record is an FRT record for Charts. This record 
contains information describing the versions of Excel that originally created and last 
saved the file, and the FRT ID‘s that are used in the file. 
In a file written by Excel 2000 or later, this record appears before the end of CHART 
record block and before any other FRT in the Chart record stream. In a file written by 
Excel 97, this record may be missing or will appear after the CHART record block. If 
this record appears after the END record of CHART record block, the verWriter field 
is assumed to be 8 for Excel 97 regardless of the actual value in the record. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the first two 
bytes of the record; =0850h 

6 

grbitFrt 

2 

FRT flags; must be zero 

8 

verOriginator 

1 

Excel version that originally created the file 

9 

verWriter 

1 

Excel version that last saved the file 

10 

cCFRTID 

2 

Count of FRT ID value ranges in list 

12 

rgCFRTID 

var 

List of FRT ID values used for charts 



CFRTID Structure 

Offset 

Field Name 

Size 

Contents 

0 

rtFirst 

2 

First FRT in range 

2 

rtLast 

2 

Last FRT in range 



 

FRTWRAPPER: Chart Future Record Type Wrapper (851h) 

Introduced in Excel 9 (2000) this BIFF record is an FRT record for Charts. This record 
is used to disguise a normal, non-FRT record as a FRT record. This is necessary 
whenever a new Excel element must save a pre-Excel 9 record as a child record. As 
an FRT record, Excel 97 will keep the record together with its associated 
STARTOBJECT/ENDOBJECT when round-tripping FRT‘s. 
The size of this record varies depending on the record that was wrapped. 


Record Data 

Offset 

Field Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the first two 
bytes of the record; =0851h 

6 

grbitFrt 

2 

FRT flags; must be zero 

8 

rt 

2 

RT of wrapped record 

10 

cb 

2 

Size of wrapped RT's data in bytes 

12 

rgb 

var 

RT's data 



 

STARTBLOCK: Chart Future Record Type Start Block 
(852h) 

Introduced in Excel 9 (2000) this BIFF record is an FRT record for Charts. 
Indicates the start of an object's scope for Pre-Excel 9 objects. These records are 
used to push a chart element scope onto the parent element stack. This stack is used 
to determine the containing element for records that are used by more than one type 
of element. The FRAME record, for instance, is used by at least four different 
elements. 
The STARTBLOCK/ENDBLOCK records are used for pre-Excel 9 elements with child 
records (i.e., a record for the element followed by a BEGIN/END block for the child 
records.) STARTBLOCK/ENDBLOCK are only written to enclose one or more child 
CFRT records and can be placed outside the original BEGIN/END block. They may be 
omitted otherwise. 
These records allow Excel 9 or later to determine the proper parent element even 
after Excel 97 moves CFRT‘s to the end of the stream. Since these records are 
CFRT‘s, they will stay with and keep contained any child CFRT‘s. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the first two 
bytes of the record; =0852h 

6 

grbitFrt 

2 

FRT flags; must be zero 

8 

iObjectKind 

2 

See table below 

10 

iObjectContext 

2 

See table below 

12 

iObjectInstance1 

2 

See table below 

14 

iObjectInstance2 

2 

See table below 



 
The following table describes the meaning of each set of possible values for 
iObjectKind, iObjectContext, iObjectInstance1, iObjectInstance2. In some cases, 
these fields are indexed, and the indexes are described in the documentation for the 
parent rt. The table also lists whether the STARTBLOCK/ENDBLOCK or 
STARTOBJECT/ENDOBJECT rts are used, and the parent rt. 


iObject 
Kind 

iObject 
Context 

iObject 
Instance1 

iObject 
Instance2 

Class 

rt 

Description 

0 

0 

0 

0 

BLOCK 

AXIS 
PARENT 

Primary axis group 

0 

0 

1 

0 

BLOCK 

AXIS 
PARENT 

Secondary axis group 

2 

0 

0 

0 

BLOCK 

TEXT 

Chart title 

2 

1 

xi 

yi 

BLOCK 

TEXT 

Data label for point in 
hidden series 

2 

2 

0 

0 

BLOCK 

TEXT 

Default data label for 
other cases 

2 

2 

1 

0 

BLOCK 

TEXT 

Default data label for 
showing values only 

2 

4 

0 

0 

BLOCK 

TEXT 

Category axis title 

2 

4 

1 

0 

BLOCK 

TEXT 

Value axis title 

2 

4 

2 

0 

BLOCK 

TEXT 

Series axis title 

2 

5 

xi 

yi 

BLOCK 

TEXT 

Data label for point in 
visible series, 
iobjInstance1 and 
iobjInstance2 is the 
DATAFORMAT xi and yi 

2 

6 

0 

0 

OBJECT 

TEXT 

Display unit label 

4 

0 

0 

0 

BLOCK 

AXIS 

Category axis 

4 

0 

1 

0 

BLOCK 

AXIS 

Value axis 

4 

0 

2 

0 

BLOCK 

AXIS 

Series axis 

4 

0 

3 

0 

BLOCK 

AXIS 

X-axis on scatter chart 

5 

0 

index 

0 

BLOCK 

CHART 
FORMAT 

Chart group, 
iobjInstance1 is the 
index in the file 

6 

0 

0 

0 

BLOCK 

DAT 

Data table 

7 

0 

0 

0 

BLOCK 

FRAME 

Frame 

7 

1 

0 

0 

BLOCK 

FRAME 

Frame for an axis 

7 

2 

0 

0 

BLOCK 

FRAME 

Chart area frame 

8 

0 

0 

0 

BLOCK 

GELFRAME 

Frame fill 

8 

1 

0 

0 

BLOCK 

GELFRAME 

Series fill 

8 

2 

0 

0 

BLOCK 

GELFRAME 

Up/down bars fill 

8 

3 

0 

0 

BLOCK 

GELFRAME 

Floor fill 

8 

3 

1 

0 

BLOCK 

GELFRAME 

Walls fill 

9 

0 

0 

0 

BLOCK 

LEGEND 

Data table 

9 

1 

0 

0 

BLOCK 

LEGEND 

Legend 

10 

0 

iss 

0 

BLOCK 

LEGENDXN 

Legend entry 

11 

0 

0 

0 

BLOCK 

PICF 

Picture fill 

11 

1 

0 

0 

BLOCK 

PICF 

Data point picture fill 

12 

0 

index 

0 

BLOCK 

SERIES 

Series, iobjInstance1 
is the index in the file 

13 

0 

0 

0 

BLOCK 

CHART 

Chart 

14 

-1 

0 

0 

BLOCK 

DATA 
FORMAT 

Series formatting 

14 

yi 

xi 

0 

BLOCK 

DATA 
FORMAT 

Data point formatting 

15 

0 

0 

0 

BLOCK 

DROPBAR 

Up bars 

15 

0 

1 

0 

BLOCK 

DROPBAR 

Down bars 

15 

0 

2 

0 

BLOCK 

AXISLINE 
FORMAT 

Floor 

15 

0 

3 

0 

BLOCK 

AXISLINE 
FORMAT 

Walls 

16 

0 

0 

0 

OBJECT 

YMULT 

Axis multiplier 

17 

0 

verChart 

0 

OBJECT 

FRTFONT 
LIST 

Fonts 




 

ENDBLOCK: Chart Future Record Type End Block (853h) 

Introduced in Excel 9 (2000), this BIFF record is an FRT record for Charts that 
indicates end of an object's scope for Pre-Excel 9 objects. Paired with STARTBLOCK. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the first two 
bytes of the record; =0853h 

6 

grbitFrt 

2 

FRT flags; must be zero 

8 

iObjectKind 

2 

Sanity check for object scope being ended 

10 

(unused) 

6 

Reserved; must be zero 



 

STARTOBJECT: Chart Future Record Type Start Object 
(854h) 

Introduced in Excel 9 (2000), this BIFF record is an FRT record for Charts. 
The STARTOBJECT/ENDOBJECT records are used for Excel 9+ elements with child 
records instead of the BEGIN/END records. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the first two 
bytes of the record; =0854h 

6 

grbitFrt 

2 

FRT flags; must be zero 

8 

iObjectKind 

2 

Kinds of object, e.g., AI, CRT, SS, etc. 

10 

iObjectContext 

2 

Where the object lives, object-specific 

12 

iObjectInstance1 

2 

Which one from a collection, object-specific 

14 

iObjectInstance2 

2 

Which one from a collection, object-specific. 



 

ENDOBJECT: Chart Future Record Type End Object (855h) 

Introduced in Excel 9 (2000), this BIFF record is an FRT record for Charts that 
indicates the end of an object's scope for Excel 9 and later objects. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the first two 
bytes of the record; =0855h 

6 

grbitFrt 

2 

FRT flags; must be zero 




8 

iObjectKind 

2 

Sanity check for object scope being ended 

10 

(unused) 

6 

Reserved; must be zero 



 

CATLAB: Category Labels (856h) 

Introduced in Excel 9 (2000), this BIFF record is an FRT record for Charts. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the first two 
bytes of the record; =0856h 

6 

grbitFrt 

2 

FRT flags; must be zero 

10 

wOffset 

2 

Distance between category label levels 

12 

at 

2 

Category axis label alignment 

14 

grbit 

2 

Option flags for category axis labels (see description 
below) 

16 

(unused) 

2 

Reserved; must be zero 



 
The grbit field contains the following category axis label option flags: 

Bits 

Mask 

Flag Name 

Contents 

0 

0001h 

fAutoCatLabelReal 

=1 if the category label skip is automatic 
=0 otherwise 

15-1 

FFFEh 

(unused) 

Reserved; must be zero 



YMULT: Y Multiplier (857h) 

Introduced in Excel 9 (2000), this BIFF record is an FRT record for Charts. 
This record describes the axis multiplier feature which scales the axis values 
displayed by the axis tick labels. For instance, an axis multiplier value of .millions. 
would cause the axis tick labels to show the axis value divided by one million (e.g., 
the tick label for an axis value of 20,000,000 would show .20..) 
This record is a .parent. record and is immediately followed by a set of records 
surrounded by rtStartObject and rtEndObject which describes the axis multiplier 
label. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the first two 
bytes of the record; =0857h 

6 

grbitFrt 

2 

FRT flags; must be zero 




8 

axmid 

2 

Axis multiplier ID, one of the following values: 
-1 = multiplier value is stored in numLabelMultiplier 
0 = no multiplier (same as 1.0) 
1 = Hundreds, 102 
2 = Thousands, 103 
3 = Ten Thousands, 104 
4 = Hundred Thousands, 105 
5 = Millions, 106 
6 = Ten Millions, 107 
7 = Hundred Millions, 108 
8 = Thousand Millions, 109 
9 = Billions, 1012 

16 

numLabelMultiplier 

4 

Numeric value 



18 

grbit 

2 

Option flags for y axis multiplier (see description below) 



 
The grbit field contains the following category axis label option flags: 

Bits 

Mask 

Flag Name 

Contents 

0 

0001h 

fEnabled 

=1 if the multiplier is enabled 
=0 otherwise 

1 

0002h 

fAutoShowMultiplier 

=1 if the multiplier label is shown 
=0 otherwise 

15-2 

FFFCh 

(unused) 

Reserved; must be zero 



 

SXVIEWLINK: Chart PivotTable Name (858h) 

Introduced in Excel 9 (2000), this BIFF record is an FRT record for Charts. This 
record stores the name of the source PivotTable when this chart is a PivotChart. New 
for Excel 9, PivotCharts are charts based on PivotTables. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the first two 
bytes of the record; =0858h 

6 

grbitFrt 

2 

FRT flags; must be zero 

8 

brst 

var 

String containing name of PivotTable 



 

PIVOTCHARTBITS: PivotChart Bits (859h) 

Introduced in Excel 9 (2000), this BIFF record is an FRT record for Charts. This 
stores flags for a PivotChart. 


Record Data 

Offset 

Field Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the first two 
bytes of the record; =0859h 

6 

grbitFrt 

2 

FRT flags; must be zero 

8 

grbit 

2 

Option flags for PivotCharts (see description below) 

10 

(unused) 

6 

Reserved; must be zero 



 
The grbit field contains the following PivotChart option flags: 

Bits 

Mask 

Flag Name 

Contents 

0 

0001h 

fGXHide 

=1 if the field buttons are hidden 
=0 otherwise 

15-1 

FFFEh 

(unused) 

Reserved; must be zero 



 

FRTFONTLIST: Chart Font List (85Ah) 

Introduced in Excel 9 (2000), this BIFF record is an FRT record for Charts. 
This record stores font information for Excel 9 or later chart objects. On round-
tripping through an earlier version of Excel, the fonts for new chart objects are lost 
from the font table because earlier version of Excel do not load the newer objects 
and thus don‘t preserve the new object‘s fonts. This record contains a list of the font 
indices used by Excel 9 or later objects and whether the font is auto-scaled. 
The fonts themselves are stored information in a STARTOBJECT/ENDOBJECT block 
that immediately follows. The block has objectKind = 17, objectContext = 0, 
objectInstance1 = 0, objectInstance2 = 0. The block has cfont FONT 
records and FBI records (for those with fScaled =1 only). 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the first two 
bytes of the record; =085Ah 

6 

grbitFrt 

2 

FRT flags; must be zero 

8 

verChart 

1 

Version of Charting this list applies to 

9 

cfont 

2 

Number of fonts in list 

11 

rgFontInfo 

var 

Array of font IDs 



 
FontInfo Structure 

Offset 

Field Name 

Size 

Contents 

0 

grbit 

2 

Option flags for chart fonts (see description below) 

2 

ifnt 

2 

Font ID of this font entry 



 
The grbit field contains the following chart font flags: 

Bits 

Mask 

Flag Name 

Contents 

0 

0001h 

fScaled 

=1 if the font is scaled 
=0 otherwise 




Bits 

Mask 

Flag Name 

Contents 

15-1 

FFFEh 

(unused) 

Reserved; must be zero 



 

PIVOTCHARTLINK: Pivot Chart Link (861h) 

Introduced in Excel 9 (2000), this BIFF record is an FRT record for Charts. This 
record stores the link to a PivotTable for a PivotChart. Similar in function to 
SXVIEWLINK but used only during copy & paste of a chart via BIFF. 
Record Data 

Offset 

Field Name 

Size 

Contents 

4 

rt 

2 

Record type; this matches the BIFF rt in the first two 
bytes of the record; =0861h 

6 

grbitFrt 

2 

FRT flags; must be zero 

8 

ai 

var 

same as AI record 


# *** #########################################################################
# *** Record Descriptions (END)
# *** #########################################################################
 

Information Rights Management (IRM) 

Rights Management protected documents are encrypted in the same way that 
Microsoft OfficeXP documents are encrypted using a password. 
This means: 

. The macro streams in the document are not encrypted 
. The Document Summary Information stream is not encrypted 


Rights Management protected documents are in essence two documents in one. One
is a simple, traditional backwards-compatible document which has fixed text
telling the user they need a later version of Microsoft Office to access the
protected content, and new streams added to support IRM protection which have
not been previously found in Microsoft Office documents. The details of the
differences are discussed in the sections that follow. An overview of
Information rights Management can be found at
http://download.microsoft.com/download/a/4/2/a4262821-6f21-450f-85d3-
ebbba001a6ef/How%20to%20Use%20Information%20Rights%20Management.doc. 


DataSpaces 

Every rights managed file contains a new storage named .\006DataSpaces. which
contains meta information used to help manage the process of protecting the
content within the document.More information can be found at
http://msdn2.microsoft.com/en-us/library/aa767782(VS.85).aspx..  The most
important content in this storage is the information under the .TransformInfo.
storage. This storage contains the issuance licenses and end-user licenses
required to protect and open a rights managed file. 

DRMContent 

The new stream named .\011DRMContent. contains the encrypted binary content of
the Excel document. The format of this stream contains a series of encrypted
bytes.  When you decrypt the whole stream and open the resultant byte stream as
a compound storage, then that storage will contain all streams and substorages
that are found in a normal Excel document, using the exact same binary file
format as a non-IRM-protected Excel file. Only the encrypted streams are
located inside of this storage. The unencrypted streams (for example Document
Summary Information and the macro stream in Word and Excel) are not stored
inside this storage. They are found unencrypted off of the root of the
document‘s storage. 

DRMViewerContent 

The final new stream that may exist within an IRM-protected file is the
optional .\011DRMViewerContent. stream which contains a compressed, encrypted
MHTML stream for users of the Rights Management Add-on for Internet Explorer.
This is the option for users who need to see IRM protected content but do not
have access to IRM enabled Microsoft Office client software. 


